{"contracts":{"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-rICO/rICO-smart-contracts-77517a4dceed53ff7c5a7f7580cb805831a7f8d5/contracts/zeppelin/cryptography/MerkleProof.sol:MerkleProof":{"abi":"[]","bin":"604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820a44b1a65829724c926834e35f5961bfd552ec36fbbb070d9b83e1b8d6251dfd90029","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820a44b1a65829724c926834e35f5961bfd552ec36fbbb070d9b83e1b8d6251dfd90029","srcmap":"110:1134:0:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24","srcmap-runtime":"110:1134:0:-;;;;;;;;"}},"sourceList":["/home/sdb/yemx6/solc-DApp/labeledCode/consensys-rICO/rICO-smart-contracts-77517a4dceed53ff7c5a7f7580cb805831a7f8d5/contracts/zeppelin/cryptography/MerkleProof.sol"],"sources":{"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-rICO/rICO-smart-contracts-77517a4dceed53ff7c5a7f7580cb805831a7f8d5/contracts/zeppelin/cryptography/MerkleProof.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-rICO/rICO-smart-contracts-77517a4dceed53ff7c5a7f7580cb805831a7f8d5/contracts/zeppelin/cryptography/MerkleProof.sol","exportedSymbols":{"MerkleProof":[68]}},"children":[{"attributes":{"literals":["solidity","^","0.5",".0"]},"id":1,"name":"PragmaDirective","src":"0:23:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@dev These functions deal with verification of Merkle trees (hash trees),","fullyImplemented":true,"linearizedBaseContracts":[68],"name":"MerkleProof","scope":69},"children":[{"attributes":{"documentation":"@dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\ndefined by `root`. For this, a `proof` must be provided, containing\nsibling hashes on the branch from the leaf to the root of the tree. Each\npair of leaves and each pair of pre-images are assumed to be sorted.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"verify","scope":68,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"proof","scope":67,"stateVariable":false,"storageLocation":"memory","type":"bytes32[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"bytes32[]"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":2,"name":"ElementaryTypeName","src":"480:7:0"}],"id":3,"name":"ArrayTypeName","src":"480:9:0"}],"id":4,"name":"VariableDeclaration","src":"480:22:0"},{"attributes":{"constant":false,"name":"root","scope":67,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":5,"name":"ElementaryTypeName","src":"504:7:0"}],"id":6,"name":"VariableDeclaration","src":"504:12:0"},{"attributes":{"constant":false,"name":"leaf","scope":67,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":7,"name":"ElementaryTypeName","src":"518:7:0"}],"id":8,"name":"VariableDeclaration","src":"518:12:0"}],"id":9,"name":"ParameterList","src":"479:52:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":67,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":10,"name":"ElementaryTypeName","src":"555:4:0"}],"id":11,"name":"VariableDeclaration","src":"555:4:0"}],"id":12,"name":"ParameterList","src":"554:6:0"},{"children":[{"attributes":{"assignments":[14]},"children":[{"attributes":{"constant":false,"name":"computedHash","scope":66,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":13,"name":"ElementaryTypeName","src":"571:7:0"}],"id":14,"name":"VariableDeclaration","src":"571:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":8,"type":"bytes32","value":"leaf"},"id":15,"name":"Identifier","src":"594:4:0"}],"id":16,"name":"VariableDeclarationStatement","src":"571:27:0"},{"children":[{"attributes":{"assignments":[18]},"children":[{"attributes":{"constant":false,"name":"i","scope":61,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":17,"name":"ElementaryTypeName","src":"614:7:0"}],"id":18,"name":"VariableDeclaration","src":"614:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":19,"name":"Literal","src":"626:1:0"}],"id":20,"name":"VariableDeclarationStatement","src":"614:13:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":18,"type":"uint256","value":"i"},"id":21,"name":"Identifier","src":"629:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4,"type":"bytes32[] memory","value":"proof"},"id":22,"name":"Identifier","src":"633:5:0"}],"id":23,"name":"MemberAccess","src":"633:12:0"}],"id":24,"name":"BinaryOperation","src":"629:16:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":18,"type":"uint256","value":"i"},"id":25,"name":"Identifier","src":"647:1:0"}],"id":26,"name":"UnaryOperation","src":"647:3:0"}],"id":27,"name":"ExpressionStatement","src":"647:3:0"},{"children":[{"attributes":{"assignments":[29]},"children":[{"attributes":{"constant":false,"name":"proofElement","scope":60,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":28,"name":"ElementaryTypeName","src":"666:7:0"}],"id":29,"name":"VariableDeclaration","src":"666:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4,"type":"bytes32[] memory","value":"proof"},"id":30,"name":"Identifier","src":"689:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":18,"type":"uint256","value":"i"},"id":31,"name":"Identifier","src":"695:1:0"}],"id":32,"name":"IndexAccess","src":"689:8:0"}],"id":33,"name":"VariableDeclarationStatement","src":"666:31:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":14,"type":"bytes32","value":"computedHash"},"id":34,"name":"Identifier","src":"716:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":29,"type":"bytes32","value":"proofElement"},"id":35,"name":"Identifier","src":"731:12:0"}],"id":36,"name":"BinaryOperation","src":"716:27:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":14,"type":"bytes32","value":"computedHash"},"id":37,"name":"Identifier","src":"841:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[null],"referencedDeclaration":77,"type":"function (bytes memory) pure returns (bytes32)","value":"keccak256"},"id":38,"name":"Identifier","src":"856:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"encodePacked","referencedDeclaration":null,"type":"function () pure returns (bytes memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":70,"type":"abi","value":"abi"},"id":39,"name":"Identifier","src":"866:3:0"}],"id":40,"name":"MemberAccess","src":"866:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":14,"type":"bytes32","value":"computedHash"},"id":41,"name":"Identifier","src":"883:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":29,"type":"bytes32","value":"proofElement"},"id":42,"name":"Identifier","src":"897:12:0"}],"id":43,"name":"FunctionCall","src":"866:44:0"}],"id":44,"name":"FunctionCall","src":"856:55:0"}],"id":45,"name":"Assignment","src":"841:70:0"}],"id":46,"name":"ExpressionStatement","src":"841:70:0"}],"id":47,"name":"Block","src":"745:181:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":14,"type":"bytes32","value":"computedHash"},"id":48,"name":"Identifier","src":"1028:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[null],"referencedDeclaration":77,"type":"function (bytes memory) pure returns (bytes32)","value":"keccak256"},"id":49,"name":"Identifier","src":"1043:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"encodePacked","referencedDeclaration":null,"type":"function () pure returns (bytes memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":70,"type":"abi","value":"abi"},"id":50,"name":"Identifier","src":"1053:3:0"}],"id":51,"name":"MemberAccess","src":"1053:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":29,"type":"bytes32","value":"proofElement"},"id":52,"name":"Identifier","src":"1070:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":14,"type":"bytes32","value":"computedHash"},"id":53,"name":"Identifier","src":"1084:12:0"}],"id":54,"name":"FunctionCall","src":"1053:44:0"}],"id":55,"name":"FunctionCall","src":"1043:55:0"}],"id":56,"name":"Assignment","src":"1028:70:0"}],"id":57,"name":"ExpressionStatement","src":"1028:70:0"}],"id":58,"name":"Block","src":"932:181:0"}],"id":59,"name":"IfStatement","src":"712:401:0"}],"id":60,"name":"Block","src":"652:471:0"}],"id":61,"name":"ForStatement","src":"609:514:0"},{"attributes":{"functionReturnParameters":12},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":14,"type":"bytes32","value":"computedHash"},"id":62,"name":"Identifier","src":"1215:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":6,"type":"bytes32","value":"root"},"id":63,"name":"Identifier","src":"1231:4:0"}],"id":64,"name":"BinaryOperation","src":"1215:20:0"}],"id":65,"name":"Return","src":"1208:27:0"}],"id":66,"name":"Block","src":"561:681:0"}],"id":67,"name":"FunctionDefinition","src":"464:778:0"}],"id":68,"name":"ContractDefinition","src":"110:1134:0"}],"id":69,"name":"SourceUnit","src":"0:1245:0"}}},"version":"0.5.0+commit.1d4f565a.Linux.g++"}
