{"contracts":{"/home/yemx6/solc-dApp/code/QuillAudits-1inch-token/node_modules/@openzeppelin/contracts/utils/math/SignedSafeMath.sol:SignedSafeMath":{"abi":[],"bin":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122083348bdb1f302edf5ed9d6065aed4533b9a93221c96a584c1ab976013771970764736f6c63430008000033","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122083348bdb1f302edf5ed9d6065aed4533b9a93221c96a584c1ab976013771970764736f6c63430008000033","srcmap":"251:1399:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","srcmap-runtime":"251:1399:0:-:0;;;;;;;;"}},"sourceList":["/home/yemx6/solc-dApp/code/QuillAudits-1inch-token/node_modules/@openzeppelin/contracts/utils/math/SignedSafeMath.sol"],"sources":{"/home/yemx6/solc-dApp/code/QuillAudits-1inch-token/node_modules/@openzeppelin/contracts/utils/math/SignedSafeMath.sol":{"AST":{"absolutePath":"/home/yemx6/solc-dApp/code/QuillAudits-1inch-token/node_modules/@openzeppelin/contracts/utils/math/SignedSafeMath.sol","exportedSymbols":{"SignedSafeMath":[63]},"id":64,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"58:192:0","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SignedSafeMath` is no longer needed starting with Solidity 0.8. The compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":63,"linearizedBaseContracts":[63],"name":"SignedSafeMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":16,"nodeType":"Block","src":"583:29:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":14,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":12,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5,"src":"600:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":13,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"604:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"600:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":11,"id":15,"nodeType":"Return","src":"593:12:0"}]},"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"280:234:0","text":" @dev Returns the multiplication of two signed integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":17,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nodeType":"FunctionDefinition","parameters":{"id":8,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":17,"src":"532:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4,"name":"int256","nodeType":"ElementaryTypeName","src":"532:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":17,"src":"542:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6,"name":"int256","nodeType":"ElementaryTypeName","src":"542:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"531:20:0"},"returnParameters":{"id":11,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":17,"src":"575:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9,"name":"int256","nodeType":"ElementaryTypeName","src":"575:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"574:8:0"},"scope":63,"src":"519:93:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":31,"nodeType":"Block","src":"961:29:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":29,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":27,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"978:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":28,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"982:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"978:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":26,"id":30,"nodeType":"Return","src":"971:12:0"}]},"documentation":{"id":18,"nodeType":"StructuredDocumentation","src":"618:274:0","text":" @dev Returns the integer division of two signed integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":32,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":32,"src":"910:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":19,"name":"int256","nodeType":"ElementaryTypeName","src":"910:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":22,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":32,"src":"920:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":21,"name":"int256","nodeType":"ElementaryTypeName","src":"920:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"909:20:0"},"returnParameters":{"id":26,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":32,"src":"953:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":24,"name":"int256","nodeType":"ElementaryTypeName","src":"953:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"952:8:0"},"scope":63,"src":"897:93:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":46,"nodeType":"Block","src":"1293:29:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":44,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":42,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"1310:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":43,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"1314:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1310:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":41,"id":45,"nodeType":"Return","src":"1303:12:0"}]},"documentation":{"id":33,"nodeType":"StructuredDocumentation","src":"996:228:0","text":" @dev Returns the subtraction of two signed integers, reverting on\n overflow.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":47,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":38,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":47,"src":"1242:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":34,"name":"int256","nodeType":"ElementaryTypeName","src":"1242:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":37,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":47,"src":"1252:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":36,"name":"int256","nodeType":"ElementaryTypeName","src":"1252:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1241:20:0"},"returnParameters":{"id":41,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":47,"src":"1285:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":39,"name":"int256","nodeType":"ElementaryTypeName","src":"1285:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1284:8:0"},"scope":63,"src":"1229:93:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":61,"nodeType":"Block","src":"1619:29:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":57,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50,"src":"1636:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":58,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"1640:1:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1636:5:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":56,"id":60,"nodeType":"Return","src":"1629:12:0"}]},"documentation":{"id":48,"nodeType":"StructuredDocumentation","src":"1328:222:0","text":" @dev Returns the addition of two signed integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":62,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":53,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":62,"src":"1568:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":49,"name":"int256","nodeType":"ElementaryTypeName","src":"1568:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":52,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":62,"src":"1578:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":51,"name":"int256","nodeType":"ElementaryTypeName","src":"1578:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1567:20:0"},"returnParameters":{"id":56,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":62,"src":"1611:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":54,"name":"int256","nodeType":"ElementaryTypeName","src":"1611:6:0","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1610:8:0"},"scope":63,"src":"1555:93:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":64,"src":"251:1399:0"}],"src":"33:1618:0"}}},"version":"0.8.0+commit.c7dfd78e.Linux.g++"}
