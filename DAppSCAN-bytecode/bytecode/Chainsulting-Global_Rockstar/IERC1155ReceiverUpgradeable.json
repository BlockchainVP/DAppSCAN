{"contracts":{"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-Global_Rockstar/openzeppelin-contracts-upgradeable-master/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol:IERC1155ReceiverUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"bin":"","bin-runtime":"","srcmap":"","srcmap-runtime":""},"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-Global_Rockstar/openzeppelin-contracts-upgradeable-master/contracts/utils/introspection/IERC165Upgradeable.sol:IERC165Upgradeable":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"bin":"","bin-runtime":"","srcmap":"","srcmap-runtime":""}},"sourceList":["/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-Global_Rockstar/openzeppelin-contracts-upgradeable-master/contracts/interfaces/IERC1155ReceiverUpgradeable.sol","/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-Global_Rockstar/openzeppelin-contracts-upgradeable-master/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol","/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-Global_Rockstar/openzeppelin-contracts-upgradeable-master/contracts/utils/introspection/IERC165Upgradeable.sol"],"sources":{"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-Global_Rockstar/openzeppelin-contracts-upgradeable-master/contracts/interfaces/IERC1155ReceiverUpgradeable.sol":{"AST":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-Global_Rockstar/openzeppelin-contracts-upgradeable-master/contracts/interfaces/IERC1155ReceiverUpgradeable.sol","exportedSymbols":{"IERC1155ReceiverUpgradeable":[43],"IERC165Upgradeable":[55]},"id":3,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:0"},{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-Global_Rockstar/openzeppelin-contracts-upgradeable-master/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol","file":"../token/ERC1155/IERC1155ReceiverUpgradeable.sol","id":2,"nodeType":"ImportDirective","scope":3,"sourceUnit":44,"src":"125:58:0","symbolAliases":[],"unitAlias":""}],"src":"100:84:0"}},"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-Global_Rockstar/openzeppelin-contracts-upgradeable-master/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol":{"AST":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-Global_Rockstar/openzeppelin-contracts-upgradeable-master/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol","exportedSymbols":{"IERC1155ReceiverUpgradeable":[43],"IERC165Upgradeable":[55]},"id":44,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:1"},{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-Global_Rockstar/openzeppelin-contracts-upgradeable-master/contracts/utils/introspection/IERC165Upgradeable.sol","file":"../../utils/introspection/IERC165Upgradeable.sol","id":5,"nodeType":"ImportDirective","scope":44,"sourceUnit":56,"src":"143:58:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7,"name":"IERC165Upgradeable","nodeType":"IdentifierPath","referencedDeclaration":55,"src":"284:18:1"},"id":8,"nodeType":"InheritanceSpecifier","src":"284:18:1"}],"contractDependencies":[55],"contractKind":"interface","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"203:39:1","text":" @dev _Available since v3.1._"},"fullyImplemented":false,"id":43,"linearizedBaseContracts":[43,55],"name":"IERC1155ReceiverUpgradeable","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"309:826:1","text":" @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":24,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nodeType":"FunctionDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":24,"src":"1176:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"1176:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":24,"src":"1202:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"1202:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15,"mutability":"mutable","name":"id","nodeType":"VariableDeclaration","scope":24,"src":"1224:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14,"name":"uint256","nodeType":"ElementaryTypeName","src":"1224:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":24,"src":"1244:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16,"name":"uint256","nodeType":"ElementaryTypeName","src":"1244:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":19,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":24,"src":"1267:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":18,"name":"bytes","nodeType":"ElementaryTypeName","src":"1267:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1166:126:1"},"returnParameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":22,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":24,"src":"1311:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":21,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1311:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1310:8:1"},"scope":43,"src":"1140:179:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1325:994:1","text":" @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":42,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nodeType":"FunctionDefinition","parameters":{"id":38,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":42,"src":"2365:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"2365:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":29,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":42,"src":"2391:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"2391:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"ids","nodeType":"VariableDeclaration","scope":42,"src":"2413:22:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":30,"name":"uint256","nodeType":"ElementaryTypeName","src":"2413:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":31,"nodeType":"ArrayTypeName","src":"2413:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":35,"mutability":"mutable","name":"values","nodeType":"VariableDeclaration","scope":42,"src":"2445:25:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"2445:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":34,"nodeType":"ArrayTypeName","src":"2445:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":37,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":42,"src":"2480:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":36,"name":"bytes","nodeType":"ElementaryTypeName","src":"2480:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2355:150:1"},"returnParameters":{"id":41,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":42,"src":"2524:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":39,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2524:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2523:8:1"},"scope":43,"src":"2324:208:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":44,"src":"243:2291:1"}],"src":"118:2417:1"}},"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-Global_Rockstar/openzeppelin-contracts-upgradeable-master/contracts/utils/introspection/IERC165Upgradeable.sol":{"AST":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-Global_Rockstar/openzeppelin-contracts-upgradeable-master/contracts/utils/introspection/IERC165Upgradeable.sol","exportedSymbols":{"IERC165Upgradeable":[55]},"id":56,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":45,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":46,"nodeType":"StructuredDocumentation","src":"125:279:2","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":55,"linearizedBaseContracts":[55],"name":"IERC165Upgradeable","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"440:340:2","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":54,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":54,"src":"812:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":48,"name":"bytes4","nodeType":"ElementaryTypeName","src":"812:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"811:20:2"},"returnParameters":{"id":53,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":54,"src":"855:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":51,"name":"bool","nodeType":"ElementaryTypeName","src":"855:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"854:6:2"},"scope":55,"src":"785:76:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":56,"src":"405:458:2"}],"src":"100:764:2"}}},"version":"0.8.0+commit.c7dfd78e.Linux.g++"}
