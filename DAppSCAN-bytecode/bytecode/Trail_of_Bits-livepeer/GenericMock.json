{"contracts":{"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-livepeer/protocol-929182cc684410d55eb9048f47ed1ec3ab70461a/contracts/test/GenericMock.sol:GenericMock":{"abi":"[{\"constant\":false,\"inputs\":[{\"name\":\"_target\",\"type\":\"address\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_func\",\"type\":\"bytes4\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setMockUint256\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_func\",\"type\":\"bytes4\"},{\"name\":\"_value\",\"type\":\"address\"}],\"name\":\"setMockAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_func\",\"type\":\"bytes4\"},{\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"setMockBool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_func\",\"type\":\"bytes4\"},{\"name\":\"_value\",\"type\":\"bytes32\"}],\"name\":\"setMockBytes32\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","bin":"6060604052341561000f57600080fd5b610c468061001e6000396000f3006060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631cff79cd146104965780631d77d696146104d85780636c33e7eb1461053b5780637c4d18bd1461059c578063d2f65fbc146105e9575b600080359050600080827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160169054906101000a900460ff1615156100e7576100e26000610638565b610493565b600060038111156100f457fe5b600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160159054906101000a900460ff16600381111561016057fe5b14156101c7576101c2600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000206000015461064a565b610492565b600160038111156101d457fe5b600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160159054906101000a900460ff16600381111561024057fe5b14156102a7576102a2600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000206001015461065c565b610491565b600260038111156102b457fe5b600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160159054906101000a900460ff16600381111561032057fe5b14156103945761038f600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160009054906101000a900460ff16610638565b610490565b6003808111156103a057fe5b600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160159054906101000a900460ff16600381111561040c57fe5b141561048f5761048e600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661066e565b5b5b5b5b5b50005b6104d6600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190820180359060200191909192905050610680565b005b34156104e357600080fd5b61052160048080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190919080359060200190919050506106d2565b604051808215151515815260200191505060405180910390f35b341561054657600080fd5b61059a60048080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610812565b005b34156105a757600080fd5b6105e760048080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190919080351515906020019091905050610989565b005b34156105f457600080fd5b61063660048080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909190803560001916906020019091905050610ad9565b005b60405160208101604052818152602081f35b60405160208101604052818152602081f35b60405160208101604052818152602081f35b60405160208101604052818152602081f35b8273ffffffffffffffffffffffffffffffffffffffff163483836040518083838082843782019150509250505060006040518083038185876187965a03f19250505015156106cd57600080fd5b505050565b600080600080857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160156101000a81548160ff0219169083600381111561074357fe5b021790555081600080857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001908152602001600020600001819055506001600080857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160166101000a81548160ff02191690831515021790555092915050565b6003600080847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160156101000a81548160ff0219169083600381111561088257fe5b021790555080600080847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600080847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160166101000a81548160ff0219169083151502179055505050565b6002600080847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160156101000a81548160ff021916908360038111156109f957fe5b021790555080600080847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160006101000a81548160ff0219169083151502179055506001600080847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160166101000a81548160ff0219169083151502179055505050565b6001600080847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160156101000a81548160ff02191690836003811115610b4957fe5b021790555080600080847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060010181600019169055506001600080847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160166101000a81548160ff02191690831515021790555050505600a165627a7a723058201a3d27a35e494238022835e815910d8fe4ee4396c87948f739461493e29323570029","bin-runtime":"6060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631cff79cd146104965780631d77d696146104d85780636c33e7eb1461053b5780637c4d18bd1461059c578063d2f65fbc146105e9575b600080359050600080827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160169054906101000a900460ff1615156100e7576100e26000610638565b610493565b600060038111156100f457fe5b600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160159054906101000a900460ff16600381111561016057fe5b14156101c7576101c2600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000206000015461064a565b610492565b600160038111156101d457fe5b600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160159054906101000a900460ff16600381111561024057fe5b14156102a7576102a2600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020016000206001015461065c565b610491565b600260038111156102b457fe5b600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160159054906101000a900460ff16600381111561032057fe5b14156103945761038f600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160009054906101000a900460ff16610638565b610490565b6003808111156103a057fe5b600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160159054906101000a900460ff16600381111561040c57fe5b141561048f5761048e600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661066e565b5b5b5b5b5b50005b6104d6600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190820180359060200191909192905050610680565b005b34156104e357600080fd5b61052160048080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190919080359060200190919050506106d2565b604051808215151515815260200191505060405180910390f35b341561054657600080fd5b61059a60048080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610812565b005b34156105a757600080fd5b6105e760048080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190919080351515906020019091905050610989565b005b34156105f457600080fd5b61063660048080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909190803560001916906020019091905050610ad9565b005b60405160208101604052818152602081f35b60405160208101604052818152602081f35b60405160208101604052818152602081f35b60405160208101604052818152602081f35b8273ffffffffffffffffffffffffffffffffffffffff163483836040518083838082843782019150509250505060006040518083038185876187965a03f19250505015156106cd57600080fd5b505050565b600080600080857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160156101000a81548160ff0219169083600381111561074357fe5b021790555081600080857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001908152602001600020600001819055506001600080857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160166101000a81548160ff02191690831515021790555092915050565b6003600080847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160156101000a81548160ff0219169083600381111561088257fe5b021790555080600080847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600080847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160166101000a81548160ff0219169083151502179055505050565b6002600080847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160156101000a81548160ff021916908360038111156109f957fe5b021790555080600080847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160006101000a81548160ff0219169083151502179055506001600080847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160166101000a81548160ff0219169083151502179055505050565b6001600080847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160156101000a81548160ff02191690836003811115610b4957fe5b021790555080600080847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060010181600019169055506001600080847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060020160166101000a81548160ff02191690831515021790555050505600a165627a7a723058201a3d27a35e494238022835e815910d8fe4ee4396c87948f739461493e29323570029","srcmap":"137:4765:0:-;;;;;;;;;;;;;;;;;","srcmap-runtime":"137:4765:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2652:11;2705:1;2692:12;2684:23;;2724:10;:16;2735:4;2724:16;;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;2723:21;2719:735;;;2840:21;2855:5;2840:14;:21::i;:::-;2719:735;;;2926:21;2896:51;;;;;;;;:10;:16;2907:4;2896:16;;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;:51;;;;;;;;;2892:552;;;2967:45;2982:10;:16;2993:4;2982:16;;;;;;;;;;;;;;;;;:29;;;2967:14;:45::i;:::-;2892:552;;;3067:21;3037:51;;;;;;;;:10;:16;3048:4;3037:16;;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;:51;;;;;;;;;3033:411;;;3108:45;3123:10;:16;3134:4;3123:16;;;;;;;;;;;;;;;;;:29;;;3108:14;:45::i;:::-;3033:411;;;3208:18;3178:48;;;;;;;;:10;:16;3189:4;3178:16;;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;:48;;;;;;;;;3174:270;;;3246:42;3261:10;:16;3272:4;3261:16;;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;3246:14;:42::i;:::-;3174:270;;;3343:21;3313:51;;;;;;;;:10;:16;3324:4;3313:16;;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;:51;;;;;;;;;3309:135;;;3384:45;3399:10;:16;3410:4;3399:16;;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;3384:14;:45::i;:::-;3309:135;3174:270;3033:411;2892:552;2719:735;2616:844;137:4765;755:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1108:233;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2331:218;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1934:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1531:218;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4293:244;4399:4;4393:5;4445:2;4434:9;4430:3;4424:4;4417:6;4480;4469:9;4462:6;4518:2;4507:9;4500:6;3575:247;3684:4;3678:5;3730:2;3719:9;3715:3;3709:4;3702:6;3765;3754:9;3747:6;3803:2;3792:9;3785:6;3937:247;4046:4;4040:5;4092:2;4081:9;4077:3;4071:4;4064:6;4127;4116:9;4109:6;4165:2;4154:9;4147:6;4653:247;4762:4;4756:5;4808:2;4797:9;4793:3;4787:4;4780:6;4843;4832:9;4825:6;4881:2;4870:9;4863:6;755:162;873:7;:12;;892:9;903:5;;873:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;865:45;;;;;;;;755:162;;;:::o;1108:233::-;1180:4;1226:21;1196:10;:17;1207:5;1196:17;;;;;;;;;;;;;;;;;:27;;;:51;;;;;;;;;;;;;;;;;;;;;;;;1290:6;1257:10;:17;1268:5;1257:17;;;;;;;;;;;;;;;;;:30;;:39;;;;1330:4;1306:10;:17;1317:5;1306:17;;;;;;;;;;;;;;;;;:21;;;:28;;;;;;;;;;;;;;;;;;1108:233;;;;:::o;2331:218::-;2434:21;2404:10;:17;2415:5;2404:17;;;;;;;;;;;;;;;;;:27;;;:51;;;;;;;;;;;;;;;;;;;;;;;;2498:6;2465:10;:17;2476:5;2465:17;;;;;;;;;;;;;;;;;:30;;;:39;;;;;;;;;;;;;;;;;;2538:4;2514:10;:17;2525:5;2514:17;;;;;;;;;;;;;;;;;:21;;;:28;;;;;;;;;;;;;;;;;;2331:218;;:::o;1934:206::-;2031:18;2001:10;:17;2012:5;2001:17;;;;;;;;;;;;;;;;;:27;;;:48;;;;;;;;;;;;;;;;;;;;;;;;2089:6;2059:10;:17;2070:5;2059:17;;;;;;;;;;;;;;;;;:27;;;:36;;;;;;;;;;;;;;;;;;2129:4;2105:10;:17;2116:5;2105:17;;;;;;;;;;;;;;;;;:21;;;:28;;;;;;;;;;;;;;;;;;1934:206;;:::o;1531:218::-;1634:21;1604:10;:17;1615:5;1604:17;;;;;;;;;;;;;;;;;:27;;;:51;;;;;;;;;;;;;;;;;;;;;;;;1698:6;1665:10;:17;1676:5;1665:17;;;;;;;;;;;;;;;;;:30;;:39;;;;;;;1738:4;1714:10;:17;1725:5;1714:17;;;;;;;;;;;;;;;;;:21;;;:28;;;;;;;;;;;;;;;;;;1531:218;;:::o"}},"sourceList":["/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-livepeer/protocol-929182cc684410d55eb9048f47ed1ec3ab70461a/contracts/test/GenericMock.sol"],"sources":{"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-livepeer/protocol-929182cc684410d55eb9048f47ed1ec3ab70461a/contracts/test/GenericMock.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-livepeer/protocol-929182cc684410d55eb9048f47ed1ec3ab70461a/contracts/test/GenericMock.sol","exportedSymbols":{"GenericMock":[277]}},"children":[{"attributes":{"literals":["solidity","^","0.4",".17"]},"id":1,"name":"PragmaDirective","src":"0:24:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[277],"name":"GenericMock","scope":278},"children":[{"attributes":{"canonicalName":"GenericMock.MockValue","name":"MockValue","scope":277,"visibility":"public"},"children":[{"attributes":{"constant":false,"name":"uint256Value","scope":14,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2,"name":"ElementaryTypeName","src":"191:7:0"}],"id":3,"name":"VariableDeclaration","src":"191:20:0"},{"attributes":{"constant":false,"name":"bytes32Value","scope":14,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":4,"name":"ElementaryTypeName","src":"221:7:0"}],"id":5,"name":"VariableDeclaration","src":"221:20:0"},{"attributes":{"constant":false,"name":"boolValue","scope":14,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":6,"name":"ElementaryTypeName","src":"251:4:0"}],"id":7,"name":"VariableDeclaration","src":"251:14:0"},{"attributes":{"constant":false,"name":"addressValue","scope":14,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":8,"name":"ElementaryTypeName","src":"275:7:0"}],"id":9,"name":"VariableDeclaration","src":"275:20:0"},{"attributes":{"constant":false,"name":"valueType","scope":14,"stateVariable":false,"storageLocation":"default","type":"enum GenericMock.MockValueType","value":null,"visibility":"internal"},"children":[{"attributes":{"contractScope":null,"name":"MockValueType","referencedDeclaration":19,"type":"enum GenericMock.MockValueType"},"id":10,"name":"UserDefinedTypeName","src":"305:13:0"}],"id":11,"name":"VariableDeclaration","src":"305:23:0"},{"attributes":{"constant":false,"name":"set","scope":14,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":12,"name":"ElementaryTypeName","src":"338:4:0"}],"id":13,"name":"VariableDeclaration","src":"338:8:0"}],"id":14,"name":"StructDefinition","src":"164:189:0"},{"attributes":{"canonicalName":"GenericMock.MockValueType","name":"MockValueType"},"children":[{"attributes":{"name":"Uint256"},"id":15,"name":"EnumValue","src":"380:7:0"},{"attributes":{"name":"Bytes32"},"id":16,"name":"EnumValue","src":"389:7:0"},{"attributes":{"name":"Bool"},"id":17,"name":"EnumValue","src":"398:4:0"},{"attributes":{"name":"Address"},"id":18,"name":"EnumValue","src":"404:7:0"}],"id":19,"name":"EnumDefinition","src":"359:54:0"},{"attributes":{"constant":false,"name":"mockValues","scope":277,"stateVariable":true,"storageLocation":"default","type":"mapping(bytes4 => struct GenericMock.MockValue storage ref)","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"mapping(bytes4 => struct GenericMock.MockValue storage ref)"},"children":[{"attributes":{"name":"bytes4","type":"bytes4"},"id":20,"name":"ElementaryTypeName","src":"483:6:0"},{"attributes":{"contractScope":null,"name":"MockValue","referencedDeclaration":14,"type":"struct GenericMock.MockValue storage pointer"},"id":21,"name":"UserDefinedTypeName","src":"493:9:0"}],"id":22,"name":"Mapping","src":"474:29:0"}],"id":23,"name":"VariableDeclaration","src":"474:40:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"execute","payable":true,"scope":277,"stateMutability":"payable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_target","scope":42,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":24,"name":"ElementaryTypeName","src":"772:7:0"}],"id":25,"name":"VariableDeclaration","src":"772:15:0"},{"attributes":{"constant":false,"name":"_data","scope":42,"stateVariable":false,"storageLocation":"default","type":"bytes calldata","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes storage pointer"},"id":26,"name":"ElementaryTypeName","src":"789:5:0"}],"id":27,"name":"VariableDeclaration","src":"789:11:0"}],"id":28,"name":"ParameterList","src":"771:30:0"},{"attributes":{"parameters":[null]},"children":[],"id":29,"name":"ParameterList","src":"819:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[null],"referencedDeclaration":298,"type":"function (bool) pure","value":"require"},"id":30,"name":"Identifier","src":"865:7:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"function () payable returns (bool)","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"function (uint256) returns (function () payable returns (bool))"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"call","referencedDeclaration":null,"type":"function () payable returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":25,"type":"address","value":"_target"},"id":31,"name":"Identifier","src":"873:7:0"}],"id":32,"name":"MemberAccess","src":"873:12:0"}],"id":33,"name":"MemberAccess","src":"873:18:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"value","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":280,"type":"msg","value":"msg"},"id":34,"name":"Identifier","src":"892:3:0"}],"id":35,"name":"MemberAccess","src":"892:9:0"}],"id":36,"name":"FunctionCall","src":"873:29:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":27,"type":"bytes calldata","value":"_data"},"id":37,"name":"Identifier","src":"903:5:0"}],"id":38,"name":"FunctionCall","src":"873:36:0"}],"id":39,"name":"FunctionCall","src":"865:45:0"}],"id":40,"name":"ExpressionStatement","src":"865:45:0"}],"id":41,"name":"Block","src":"819:98:0"}],"id":42,"name":"FunctionDefinition","src":"755:162:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"setMockUint256","payable":false,"scope":277,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_func","scope":74,"stateVariable":false,"storageLocation":"default","type":"bytes4","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes4","type":"bytes4"},"id":43,"name":"ElementaryTypeName","src":"1132:6:0"}],"id":44,"name":"VariableDeclaration","src":"1132:12:0"},{"attributes":{"constant":false,"name":"_value","scope":74,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":45,"name":"ElementaryTypeName","src":"1146:7:0"}],"id":46,"name":"VariableDeclaration","src":"1146:14:0"}],"id":47,"name":"ParameterList","src":"1131:30:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":74,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":48,"name":"ElementaryTypeName","src":"1180:4:0"}],"id":49,"name":"VariableDeclaration","src":"1180:4:0"}],"id":50,"name":"ParameterList","src":"1179:6:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum GenericMock.MockValueType"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"valueType","referencedDeclaration":11,"type":"enum GenericMock.MockValueType"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct GenericMock.MockValue storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":23,"type":"mapping(bytes4 => struct GenericMock.MockValue storage ref)","value":"mockValues"},"id":51,"name":"Identifier","src":"1196:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":44,"type":"bytes4","value":"_func"},"id":52,"name":"Identifier","src":"1207:5:0"}],"id":53,"name":"IndexAccess","src":"1196:17:0"}],"id":54,"name":"MemberAccess","src":"1196:27:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Uint256","referencedDeclaration":null,"type":"enum GenericMock.MockValueType"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":19,"type":"type(enum GenericMock.MockValueType)","value":"MockValueType"},"id":55,"name":"Identifier","src":"1226:13:0"}],"id":56,"name":"MemberAccess","src":"1226:21:0"}],"id":57,"name":"Assignment","src":"1196:51:0"}],"id":58,"name":"ExpressionStatement","src":"1196:51:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"uint256Value","referencedDeclaration":3,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct GenericMock.MockValue storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":23,"type":"mapping(bytes4 => struct GenericMock.MockValue storage ref)","value":"mockValues"},"id":59,"name":"Identifier","src":"1257:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":44,"type":"bytes4","value":"_func"},"id":60,"name":"Identifier","src":"1268:5:0"}],"id":61,"name":"IndexAccess","src":"1257:17:0"}],"id":62,"name":"MemberAccess","src":"1257:30:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":46,"type":"uint256","value":"_value"},"id":63,"name":"Identifier","src":"1290:6:0"}],"id":64,"name":"Assignment","src":"1257:39:0"}],"id":65,"name":"ExpressionStatement","src":"1257:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"set","referencedDeclaration":13,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct GenericMock.MockValue storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":23,"type":"mapping(bytes4 => struct GenericMock.MockValue storage ref)","value":"mockValues"},"id":66,"name":"Identifier","src":"1306:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":44,"type":"bytes4","value":"_func"},"id":67,"name":"Identifier","src":"1317:5:0"}],"id":68,"name":"IndexAccess","src":"1306:17:0"}],"id":69,"name":"MemberAccess","src":"1306:21:0"},{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":70,"name":"Literal","src":"1330:4:0"}],"id":71,"name":"Assignment","src":"1306:28:0"}],"id":72,"name":"ExpressionStatement","src":"1306:28:0"}],"id":73,"name":"Block","src":"1186:155:0"}],"id":74,"name":"FunctionDefinition","src":"1108:233:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"setMockBytes32","payable":false,"scope":277,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_func","scope":104,"stateVariable":false,"storageLocation":"default","type":"bytes4","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes4","type":"bytes4"},"id":75,"name":"ElementaryTypeName","src":"1555:6:0"}],"id":76,"name":"VariableDeclaration","src":"1555:12:0"},{"attributes":{"constant":false,"name":"_value","scope":104,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":77,"name":"ElementaryTypeName","src":"1569:7:0"}],"id":78,"name":"VariableDeclaration","src":"1569:14:0"}],"id":79,"name":"ParameterList","src":"1554:30:0"},{"attributes":{"parameters":[null]},"children":[],"id":80,"name":"ParameterList","src":"1594:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum GenericMock.MockValueType"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"valueType","referencedDeclaration":11,"type":"enum GenericMock.MockValueType"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct GenericMock.MockValue storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":23,"type":"mapping(bytes4 => struct GenericMock.MockValue storage ref)","value":"mockValues"},"id":81,"name":"Identifier","src":"1604:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":76,"type":"bytes4","value":"_func"},"id":82,"name":"Identifier","src":"1615:5:0"}],"id":83,"name":"IndexAccess","src":"1604:17:0"}],"id":84,"name":"MemberAccess","src":"1604:27:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Bytes32","referencedDeclaration":null,"type":"enum GenericMock.MockValueType"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":19,"type":"type(enum GenericMock.MockValueType)","value":"MockValueType"},"id":85,"name":"Identifier","src":"1634:13:0"}],"id":86,"name":"MemberAccess","src":"1634:21:0"}],"id":87,"name":"Assignment","src":"1604:51:0"}],"id":88,"name":"ExpressionStatement","src":"1604:51:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"bytes32Value","referencedDeclaration":5,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct GenericMock.MockValue storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":23,"type":"mapping(bytes4 => struct GenericMock.MockValue storage ref)","value":"mockValues"},"id":89,"name":"Identifier","src":"1665:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":76,"type":"bytes4","value":"_func"},"id":90,"name":"Identifier","src":"1676:5:0"}],"id":91,"name":"IndexAccess","src":"1665:17:0"}],"id":92,"name":"MemberAccess","src":"1665:30:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":78,"type":"bytes32","value":"_value"},"id":93,"name":"Identifier","src":"1698:6:0"}],"id":94,"name":"Assignment","src":"1665:39:0"}],"id":95,"name":"ExpressionStatement","src":"1665:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"set","referencedDeclaration":13,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct GenericMock.MockValue storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":23,"type":"mapping(bytes4 => struct GenericMock.MockValue storage ref)","value":"mockValues"},"id":96,"name":"Identifier","src":"1714:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":76,"type":"bytes4","value":"_func"},"id":97,"name":"Identifier","src":"1725:5:0"}],"id":98,"name":"IndexAccess","src":"1714:17:0"}],"id":99,"name":"MemberAccess","src":"1714:21:0"},{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":100,"name":"Literal","src":"1738:4:0"}],"id":101,"name":"Assignment","src":"1714:28:0"}],"id":102,"name":"ExpressionStatement","src":"1714:28:0"}],"id":103,"name":"Block","src":"1594:155:0"}],"id":104,"name":"FunctionDefinition","src":"1531:218:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"setMockBool","payable":false,"scope":277,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_func","scope":134,"stateVariable":false,"storageLocation":"default","type":"bytes4","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes4","type":"bytes4"},"id":105,"name":"ElementaryTypeName","src":"1955:6:0"}],"id":106,"name":"VariableDeclaration","src":"1955:12:0"},{"attributes":{"constant":false,"name":"_value","scope":134,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":107,"name":"ElementaryTypeName","src":"1969:4:0"}],"id":108,"name":"VariableDeclaration","src":"1969:11:0"}],"id":109,"name":"ParameterList","src":"1954:27:0"},{"attributes":{"parameters":[null]},"children":[],"id":110,"name":"ParameterList","src":"1991:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum GenericMock.MockValueType"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"valueType","referencedDeclaration":11,"type":"enum GenericMock.MockValueType"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct GenericMock.MockValue storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":23,"type":"mapping(bytes4 => struct GenericMock.MockValue storage ref)","value":"mockValues"},"id":111,"name":"Identifier","src":"2001:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":106,"type":"bytes4","value":"_func"},"id":112,"name":"Identifier","src":"2012:5:0"}],"id":113,"name":"IndexAccess","src":"2001:17:0"}],"id":114,"name":"MemberAccess","src":"2001:27:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Bool","referencedDeclaration":null,"type":"enum GenericMock.MockValueType"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":19,"type":"type(enum GenericMock.MockValueType)","value":"MockValueType"},"id":115,"name":"Identifier","src":"2031:13:0"}],"id":116,"name":"MemberAccess","src":"2031:18:0"}],"id":117,"name":"Assignment","src":"2001:48:0"}],"id":118,"name":"ExpressionStatement","src":"2001:48:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"boolValue","referencedDeclaration":7,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct GenericMock.MockValue storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":23,"type":"mapping(bytes4 => struct GenericMock.MockValue storage ref)","value":"mockValues"},"id":119,"name":"Identifier","src":"2059:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":106,"type":"bytes4","value":"_func"},"id":120,"name":"Identifier","src":"2070:5:0"}],"id":121,"name":"IndexAccess","src":"2059:17:0"}],"id":122,"name":"MemberAccess","src":"2059:27:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":108,"type":"bool","value":"_value"},"id":123,"name":"Identifier","src":"2089:6:0"}],"id":124,"name":"Assignment","src":"2059:36:0"}],"id":125,"name":"ExpressionStatement","src":"2059:36:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"set","referencedDeclaration":13,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct GenericMock.MockValue storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":23,"type":"mapping(bytes4 => struct GenericMock.MockValue storage ref)","value":"mockValues"},"id":126,"name":"Identifier","src":"2105:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":106,"type":"bytes4","value":"_func"},"id":127,"name":"Identifier","src":"2116:5:0"}],"id":128,"name":"IndexAccess","src":"2105:17:0"}],"id":129,"name":"MemberAccess","src":"2105:21:0"},{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":130,"name":"Literal","src":"2129:4:0"}],"id":131,"name":"Assignment","src":"2105:28:0"}],"id":132,"name":"ExpressionStatement","src":"2105:28:0"}],"id":133,"name":"Block","src":"1991:149:0"}],"id":134,"name":"FunctionDefinition","src":"1934:206:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"setMockAddress","payable":false,"scope":277,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"_func","scope":164,"stateVariable":false,"storageLocation":"default","type":"bytes4","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes4","type":"bytes4"},"id":135,"name":"ElementaryTypeName","src":"2355:6:0"}],"id":136,"name":"VariableDeclaration","src":"2355:12:0"},{"attributes":{"constant":false,"name":"_value","scope":164,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":137,"name":"ElementaryTypeName","src":"2369:7:0"}],"id":138,"name":"VariableDeclaration","src":"2369:14:0"}],"id":139,"name":"ParameterList","src":"2354:30:0"},{"attributes":{"parameters":[null]},"children":[],"id":140,"name":"ParameterList","src":"2394:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"enum GenericMock.MockValueType"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"valueType","referencedDeclaration":11,"type":"enum GenericMock.MockValueType"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct GenericMock.MockValue storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":23,"type":"mapping(bytes4 => struct GenericMock.MockValue storage ref)","value":"mockValues"},"id":141,"name":"Identifier","src":"2404:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":136,"type":"bytes4","value":"_func"},"id":142,"name":"Identifier","src":"2415:5:0"}],"id":143,"name":"IndexAccess","src":"2404:17:0"}],"id":144,"name":"MemberAccess","src":"2404:27:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Address","referencedDeclaration":null,"type":"enum GenericMock.MockValueType"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":19,"type":"type(enum GenericMock.MockValueType)","value":"MockValueType"},"id":145,"name":"Identifier","src":"2434:13:0"}],"id":146,"name":"MemberAccess","src":"2434:21:0"}],"id":147,"name":"Assignment","src":"2404:51:0"}],"id":148,"name":"ExpressionStatement","src":"2404:51:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"addressValue","referencedDeclaration":9,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct GenericMock.MockValue storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":23,"type":"mapping(bytes4 => struct GenericMock.MockValue storage ref)","value":"mockValues"},"id":149,"name":"Identifier","src":"2465:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":136,"type":"bytes4","value":"_func"},"id":150,"name":"Identifier","src":"2476:5:0"}],"id":151,"name":"IndexAccess","src":"2465:17:0"}],"id":152,"name":"MemberAccess","src":"2465:30:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":138,"type":"address","value":"_value"},"id":153,"name":"Identifier","src":"2498:6:0"}],"id":154,"name":"Assignment","src":"2465:39:0"}],"id":155,"name":"ExpressionStatement","src":"2465:39:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"member_name":"set","referencedDeclaration":13,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct GenericMock.MockValue storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":23,"type":"mapping(bytes4 => struct GenericMock.MockValue storage ref)","value":"mockValues"},"id":156,"name":"Identifier","src":"2514:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":136,"type":"bytes4","value":"_func"},"id":157,"name":"Identifier","src":"2525:5:0"}],"id":158,"name":"IndexAccess","src":"2514:17:0"}],"id":159,"name":"MemberAccess","src":"2514:21:0"},{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":160,"name":"Literal","src":"2538:4:0"}],"id":161,"name":"Assignment","src":"2514:28:0"}],"id":162,"name":"ExpressionStatement","src":"2514:28:0"}],"id":163,"name":"Block","src":"2394:155:0"}],"id":164,"name":"FunctionDefinition","src":"2331:218:0"},{"attributes":{"constant":false,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"","payable":true,"scope":277,"stateMutability":"payable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":165,"name":"ParameterList","src":"2624:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":166,"name":"ParameterList","src":"2642:0:0"},{"children":[{"attributes":{"assignments":[null],"initialValue":null},"children":[{"attributes":{"constant":false,"name":"func","scope":248,"stateVariable":false,"storageLocation":"default","type":"bytes4","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes4","type":"bytes4"},"id":167,"name":"ElementaryTypeName","src":"2652:6:0"}],"id":168,"name":"VariableDeclaration","src":"2652:11:0"}],"id":169,"name":"VariableDeclarationStatement","src":"2652:12:0"},{"attributes":{"externalReferences":[{"func":{"declaration":168,"isOffset":false,"isSlot":false,"src":"2684:4:0","valueSize":1}}],"operations":"{\n    func := calldataload(0)\n}"},"children":[],"id":170,"name":"InlineAssembly","src":"2673:48:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!","prefix":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"set","referencedDeclaration":13,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct GenericMock.MockValue storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":23,"type":"mapping(bytes4 => struct GenericMock.MockValue storage ref)","value":"mockValues"},"id":171,"name":"Identifier","src":"2724:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":168,"type":"bytes4","value":"func"},"id":172,"name":"Identifier","src":"2735:4:0"}],"id":173,"name":"IndexAccess","src":"2724:16:0"}],"id":174,"name":"MemberAccess","src":"2724:20:0"}],"id":175,"name":"UnaryOperation","src":"2723:21:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[255,262,269,276],"referencedDeclaration":269,"type":"function (bool) pure","value":"mLoadAndReturn"},"id":176,"name":"Identifier","src":"2840:14:0"},{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":177,"name":"Literal","src":"2855:5:0"}],"id":178,"name":"FunctionCall","src":"2840:21:0"}],"id":179,"name":"ExpressionStatement","src":"2840:21:0"}],"id":180,"name":"Block","src":"2746:126:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_MockValueType_$19","typeString":"enum GenericMock.MockValueType"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"valueType","referencedDeclaration":11,"type":"enum GenericMock.MockValueType"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct GenericMock.MockValue storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":23,"type":"mapping(bytes4 => struct GenericMock.MockValue storage ref)","value":"mockValues"},"id":181,"name":"Identifier","src":"2896:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":168,"type":"bytes4","value":"func"},"id":182,"name":"Identifier","src":"2907:4:0"}],"id":183,"name":"IndexAccess","src":"2896:16:0"}],"id":184,"name":"MemberAccess","src":"2896:26:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Uint256","referencedDeclaration":null,"type":"enum GenericMock.MockValueType"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":19,"type":"type(enum GenericMock.MockValueType)","value":"MockValueType"},"id":185,"name":"Identifier","src":"2926:13:0"}],"id":186,"name":"MemberAccess","src":"2926:21:0"}],"id":187,"name":"BinaryOperation","src":"2896:51:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[255,262,269,276],"referencedDeclaration":255,"type":"function (uint256) pure","value":"mLoadAndReturn"},"id":188,"name":"Identifier","src":"2967:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"uint256Value","referencedDeclaration":3,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct GenericMock.MockValue storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":23,"type":"mapping(bytes4 => struct GenericMock.MockValue storage ref)","value":"mockValues"},"id":189,"name":"Identifier","src":"2982:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":168,"type":"bytes4","value":"func"},"id":190,"name":"Identifier","src":"2993:4:0"}],"id":191,"name":"IndexAccess","src":"2982:16:0"}],"id":192,"name":"MemberAccess","src":"2982:29:0"}],"id":193,"name":"FunctionCall","src":"2967:45:0"}],"id":194,"name":"ExpressionStatement","src":"2967:45:0"}],"id":195,"name":"Block","src":"2949:78:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_MockValueType_$19","typeString":"enum GenericMock.MockValueType"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"valueType","referencedDeclaration":11,"type":"enum GenericMock.MockValueType"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct GenericMock.MockValue storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":23,"type":"mapping(bytes4 => struct GenericMock.MockValue storage ref)","value":"mockValues"},"id":196,"name":"Identifier","src":"3037:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":168,"type":"bytes4","value":"func"},"id":197,"name":"Identifier","src":"3048:4:0"}],"id":198,"name":"IndexAccess","src":"3037:16:0"}],"id":199,"name":"MemberAccess","src":"3037:26:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Bytes32","referencedDeclaration":null,"type":"enum GenericMock.MockValueType"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":19,"type":"type(enum GenericMock.MockValueType)","value":"MockValueType"},"id":200,"name":"Identifier","src":"3067:13:0"}],"id":201,"name":"MemberAccess","src":"3067:21:0"}],"id":202,"name":"BinaryOperation","src":"3037:51:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"overloadedDeclarations":[255,262,269,276],"referencedDeclaration":262,"type":"function (bytes32) pure","value":"mLoadAndReturn"},"id":203,"name":"Identifier","src":"3108:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"bytes32Value","referencedDeclaration":5,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct GenericMock.MockValue storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":23,"type":"mapping(bytes4 => struct GenericMock.MockValue storage ref)","value":"mockValues"},"id":204,"name":"Identifier","src":"3123:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":168,"type":"bytes4","value":"func"},"id":205,"name":"Identifier","src":"3134:4:0"}],"id":206,"name":"IndexAccess","src":"3123:16:0"}],"id":207,"name":"MemberAccess","src":"3123:29:0"}],"id":208,"name":"FunctionCall","src":"3108:45:0"}],"id":209,"name":"ExpressionStatement","src":"3108:45:0"}],"id":210,"name":"Block","src":"3090:78:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_MockValueType_$19","typeString":"enum GenericMock.MockValueType"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"valueType","referencedDeclaration":11,"type":"enum GenericMock.MockValueType"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct GenericMock.MockValue storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":23,"type":"mapping(bytes4 => struct GenericMock.MockValue storage ref)","value":"mockValues"},"id":211,"name":"Identifier","src":"3178:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":168,"type":"bytes4","value":"func"},"id":212,"name":"Identifier","src":"3189:4:0"}],"id":213,"name":"IndexAccess","src":"3178:16:0"}],"id":214,"name":"MemberAccess","src":"3178:26:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Bool","referencedDeclaration":null,"type":"enum GenericMock.MockValueType"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":19,"type":"type(enum GenericMock.MockValueType)","value":"MockValueType"},"id":215,"name":"Identifier","src":"3208:13:0"}],"id":216,"name":"MemberAccess","src":"3208:18:0"}],"id":217,"name":"BinaryOperation","src":"3178:48:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"overloadedDeclarations":[255,262,269,276],"referencedDeclaration":269,"type":"function (bool) pure","value":"mLoadAndReturn"},"id":218,"name":"Identifier","src":"3246:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"boolValue","referencedDeclaration":7,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct GenericMock.MockValue storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":23,"type":"mapping(bytes4 => struct GenericMock.MockValue storage ref)","value":"mockValues"},"id":219,"name":"Identifier","src":"3261:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":168,"type":"bytes4","value":"func"},"id":220,"name":"Identifier","src":"3272:4:0"}],"id":221,"name":"IndexAccess","src":"3261:16:0"}],"id":222,"name":"MemberAccess","src":"3261:26:0"}],"id":223,"name":"FunctionCall","src":"3246:42:0"}],"id":224,"name":"ExpressionStatement","src":"3246:42:0"}],"id":225,"name":"Block","src":"3228:75:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_enum$_MockValueType_$19","typeString":"enum GenericMock.MockValueType"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"valueType","referencedDeclaration":11,"type":"enum GenericMock.MockValueType"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct GenericMock.MockValue storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":23,"type":"mapping(bytes4 => struct GenericMock.MockValue storage ref)","value":"mockValues"},"id":226,"name":"Identifier","src":"3313:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":168,"type":"bytes4","value":"func"},"id":227,"name":"Identifier","src":"3324:4:0"}],"id":228,"name":"IndexAccess","src":"3313:16:0"}],"id":229,"name":"MemberAccess","src":"3313:26:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"Address","referencedDeclaration":null,"type":"enum GenericMock.MockValueType"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":19,"type":"type(enum GenericMock.MockValueType)","value":"MockValueType"},"id":230,"name":"Identifier","src":"3343:13:0"}],"id":231,"name":"MemberAccess","src":"3343:21:0"}],"id":232,"name":"BinaryOperation","src":"3313:51:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"overloadedDeclarations":[255,262,269,276],"referencedDeclaration":276,"type":"function (address) pure","value":"mLoadAndReturn"},"id":233,"name":"Identifier","src":"3384:14:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"member_name":"addressValue","referencedDeclaration":9,"type":"address"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"struct GenericMock.MockValue storage ref"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":23,"type":"mapping(bytes4 => struct GenericMock.MockValue storage ref)","value":"mockValues"},"id":234,"name":"Identifier","src":"3399:10:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":168,"type":"bytes4","value":"func"},"id":235,"name":"Identifier","src":"3410:4:0"}],"id":236,"name":"IndexAccess","src":"3399:16:0"}],"id":237,"name":"MemberAccess","src":"3399:29:0"}],"id":238,"name":"FunctionCall","src":"3384:45:0"}],"id":239,"name":"ExpressionStatement","src":"3384:45:0"}],"id":240,"name":"Block","src":"3366:78:0"}],"id":241,"name":"IfStatement","src":"3309:135:0"}],"id":242,"name":"IfStatement","src":"3174:270:0"}],"id":243,"name":"IfStatement","src":"3033:411:0"}],"id":244,"name":"IfStatement","src":"2892:552:0"}],"id":245,"name":"Block","src":"2878:576:0"}],"id":246,"name":"IfStatement","src":"2719:735:0"}],"id":247,"name":"Block","src":"2642:818:0"}],"id":248,"name":"FunctionDefinition","src":"2616:844:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"mLoadAndReturn","payable":false,"scope":277,"stateMutability":"pure","superFunction":null,"visibility":"private"},"children":[{"children":[{"attributes":{"constant":false,"name":"_value","scope":255,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":249,"name":"ElementaryTypeName","src":"3599:7:0"}],"id":250,"name":"VariableDeclaration","src":"3599:14:0"}],"id":251,"name":"ParameterList","src":"3598:16:0"},{"attributes":{"parameters":[null]},"children":[],"id":252,"name":"ParameterList","src":"3628:0:0"},{"children":[{"attributes":{"externalReferences":[{"_value":{"declaration":250,"isOffset":false,"isSlot":false,"src":"3765:6:0","valueSize":1}}],"operations":"{\n    let memOffset := mload(0x40)\n    mstore(0x40, add(memOffset, 32))\n    mstore(memOffset, _value)\n    return(memOffset, 32)\n}"},"children":[],"id":253,"name":"InlineAssembly","src":"3638:184:0"}],"id":254,"name":"Block","src":"3628:194:0"}],"id":255,"name":"FunctionDefinition","src":"3575:247:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"mLoadAndReturn","payable":false,"scope":277,"stateMutability":"pure","superFunction":null,"visibility":"private"},"children":[{"children":[{"attributes":{"constant":false,"name":"_value","scope":262,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":256,"name":"ElementaryTypeName","src":"3961:7:0"}],"id":257,"name":"VariableDeclaration","src":"3961:14:0"}],"id":258,"name":"ParameterList","src":"3960:16:0"},{"attributes":{"parameters":[null]},"children":[],"id":259,"name":"ParameterList","src":"3990:0:0"},{"children":[{"attributes":{"externalReferences":[{"_value":{"declaration":257,"isOffset":false,"isSlot":false,"src":"4127:6:0","valueSize":1}}],"operations":"{\n    let memOffset := mload(0x40)\n    mstore(0x40, add(memOffset, 32))\n    mstore(memOffset, _value)\n    return(memOffset, 32)\n}"},"children":[],"id":260,"name":"InlineAssembly","src":"4000:184:0"}],"id":261,"name":"Block","src":"3990:194:0"}],"id":262,"name":"FunctionDefinition","src":"3937:247:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"mLoadAndReturn","payable":false,"scope":277,"stateMutability":"pure","superFunction":null,"visibility":"private"},"children":[{"children":[{"attributes":{"constant":false,"name":"_value","scope":269,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":263,"name":"ElementaryTypeName","src":"4317:4:0"}],"id":264,"name":"VariableDeclaration","src":"4317:11:0"}],"id":265,"name":"ParameterList","src":"4316:13:0"},{"attributes":{"parameters":[null]},"children":[],"id":266,"name":"ParameterList","src":"4343:0:0"},{"children":[{"attributes":{"externalReferences":[{"_value":{"declaration":264,"isOffset":false,"isSlot":false,"src":"4480:6:0","valueSize":1}}],"operations":"{\n    let memOffset := mload(0x40)\n    mstore(0x40, add(memOffset, 32))\n    mstore(memOffset, _value)\n    return(memOffset, 32)\n}"},"children":[],"id":267,"name":"InlineAssembly","src":"4353:184:0"}],"id":268,"name":"Block","src":"4343:194:0"}],"id":269,"name":"FunctionDefinition","src":"4293:244:0"},{"attributes":{"constant":true,"implemented":true,"isConstructor":false,"modifiers":[null],"name":"mLoadAndReturn","payable":false,"scope":277,"stateMutability":"pure","superFunction":null,"visibility":"private"},"children":[{"children":[{"attributes":{"constant":false,"name":"_value","scope":276,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","type":"address"},"id":270,"name":"ElementaryTypeName","src":"4677:7:0"}],"id":271,"name":"VariableDeclaration","src":"4677:14:0"}],"id":272,"name":"ParameterList","src":"4676:16:0"},{"attributes":{"parameters":[null]},"children":[],"id":273,"name":"ParameterList","src":"4706:0:0"},{"children":[{"attributes":{"externalReferences":[{"_value":{"declaration":271,"isOffset":false,"isSlot":false,"src":"4843:6:0","valueSize":1}}],"operations":"{\n    let memOffset := mload(0x40)\n    mstore(0x40, add(memOffset, 32))\n    mstore(memOffset, _value)\n    return(memOffset, 32)\n}"},"children":[],"id":274,"name":"InlineAssembly","src":"4716:184:0"}],"id":275,"name":"Block","src":"4706:194:0"}],"id":276,"name":"FunctionDefinition","src":"4653:247:0"}],"id":277,"name":"ContractDefinition","src":"137:4765:0"}],"id":278,"name":"SourceUnit","src":"0:4903:0"}}},"version":"0.4.17+commit.bdeb9e52.Linux.g++"}
