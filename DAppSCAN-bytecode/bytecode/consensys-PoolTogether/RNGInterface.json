{"contracts":{"/home/yemx6/solc-dApp/code/consensys-PoolTogether/node_modules/@pooltogether/pooltogether-rng-contracts/contracts/RNGInterface.sol:RNGInterface":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint32","name":"requestId","type":"uint32"},{"indexed":false,"internalType":"uint256","name":"randomNumber","type":"uint256"}],"name":"RandomNumberCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint32","name":"requestId","type":"uint32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RandomNumberRequested","type":"event"},{"inputs":[],"name":"getLastRequestId","outputs":[{"internalType":"uint32","name":"requestId","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRequestFee","outputs":[{"internalType":"address","name":"feeToken","type":"address"},{"internalType":"uint256","name":"requestFee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"requestId","type":"uint32"}],"name":"isRequestComplete","outputs":[{"internalType":"bool","name":"isCompleted","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"requestId","type":"uint32"}],"name":"randomNumber","outputs":[{"internalType":"uint256","name":"randomNum","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"requestRandomNumber","outputs":[{"internalType":"uint32","name":"requestId","type":"uint32"},{"internalType":"uint32","name":"lockBlock","type":"uint32"}],"stateMutability":"nonpayable","type":"function"}],"bin":"","bin-runtime":"","srcmap":"","srcmap-runtime":""}},"sourceList":["/home/yemx6/solc-dApp/code/consensys-PoolTogether/node_modules/@pooltogether/pooltogether-rng-contracts/contracts/RNGInterface.sol"],"sources":{"/home/yemx6/solc-dApp/code/consensys-PoolTogether/node_modules/@pooltogether/pooltogether-rng-contracts/contracts/RNGInterface.sol":{"AST":{"absolutePath":"/home/yemx6/solc-dApp/code/consensys-PoolTogether/node_modules/@pooltogether/pooltogether-rng-contracts/contracts/RNGInterface.sol","exportedSymbols":{"RNGInterface":[55]},"id":56,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","0.8",".6"],"nodeType":"PragmaDirective","src":"37:22:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"61:180:0","text":" @title Random Number Generator Interface\n @notice Provides an interface for requesting random numbers from 3rd-party RNG services (Chainlink VRF, Starkware VDF, etc..)"},"fullyImplemented":false,"id":55,"linearizedBaseContracts":[55],"name":"RNGInterface","nameLocation":"252:12:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"269:251:0","text":" @notice Emitted when a new request for a random number has been submitted\n @param requestId The indexed ID of the request used to get the results of the RNG service\n @param sender The indexed address of the sender of the request"},"id":9,"name":"RandomNumberRequested","nameLocation":"529:21:0","nodeType":"EventDefinition","parameters":{"id":8,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"566:9:0","nodeType":"VariableDeclaration","scope":9,"src":"551:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4,"name":"uint32","nodeType":"ElementaryTypeName","src":"551:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":7,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"593:6:0","nodeType":"VariableDeclaration","scope":9,"src":"577:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"577:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"550:50:0"},"src":"523:78:0"},{"anonymous":false,"documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"605:266:0","text":" @notice Emitted when an existing request for a random number has been completed\n @param requestId The indexed ID of the request used to get the results of the RNG service\n @param randomNumber The random number produced by the 3rd-party service"},"id":16,"name":"RandomNumberCompleted","nameLocation":"880:21:0","nodeType":"EventDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"917:9:0","nodeType":"VariableDeclaration","scope":16,"src":"902:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":11,"name":"uint32","nodeType":"ElementaryTypeName","src":"902:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":14,"indexed":false,"mutability":"mutable","name":"randomNumber","nameLocation":"936:12:0","nodeType":"VariableDeclaration","scope":16,"src":"928:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"928:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:48:0"},"src":"874:76:0"},{"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"954:139:0","text":" @notice Gets the last request id used by the RNG service\n @return requestId The last request id used in the last request"},"functionSelector":"19c2b4c3","id":22,"implemented":false,"kind":"function","modifiers":[],"name":"getLastRequestId","nameLocation":"1105:16:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1121:2:0"},"returnParameters":{"id":21,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"mutability":"mutable","name":"requestId","nameLocation":"1154:9:0","nodeType":"VariableDeclaration","scope":22,"src":"1147:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":19,"name":"uint32","nodeType":"ElementaryTypeName","src":"1147:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1146:18:0"},"scope":55,"src":"1096:69:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":23,"nodeType":"StructuredDocumentation","src":"1169:221:0","text":" @notice Gets the Fee for making a Request against an RNG service\n @return feeToken The address of the token that is used to pay fees\n @return requestFee The fee required to be paid to make a request"},"functionSelector":"0d37b537","id":30,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestFee","nameLocation":"1402:13:0","nodeType":"FunctionDefinition","parameters":{"id":24,"nodeType":"ParameterList","parameters":[],"src":"1415:2:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26,"mutability":"mutable","name":"feeToken","nameLocation":"1449:8:0","nodeType":"VariableDeclaration","scope":30,"src":"1441:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25,"name":"address","nodeType":"ElementaryTypeName","src":"1441:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":28,"mutability":"mutable","name":"requestFee","nameLocation":"1467:10:0","nodeType":"VariableDeclaration","scope":30,"src":"1459:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27,"name":"uint256","nodeType":"ElementaryTypeName","src":"1459:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1440:38:0"},"scope":55,"src":"1393:86:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1483:574:0","text":" @notice Sends a request for a random number to the 3rd-party service\n @dev Some services will complete the request immediately, others may have a time-delay\n @dev Some services require payment in the form of a token, such as $LINK for Chainlink VRF\n @return requestId The ID of the request used to get the results of the RNG service\n @return lockBlock The block number at which the RNG service will start generating time-delayed randomness.\n The calling contract should \"lock\" all activity until the result is available via the `requestId`"},"functionSelector":"8678a7b2","id":38,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomNumber","nameLocation":"2069:19:0","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[],"src":"2088:2:0"},"returnParameters":{"id":37,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"requestId","nameLocation":"2116:9:0","nodeType":"VariableDeclaration","scope":38,"src":"2109:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":33,"name":"uint32","nodeType":"ElementaryTypeName","src":"2109:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":36,"mutability":"mutable","name":"lockBlock","nameLocation":"2134:9:0","nodeType":"VariableDeclaration","scope":38,"src":"2127:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":35,"name":"uint32","nodeType":"ElementaryTypeName","src":"2127:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2108:36:0"},"scope":55,"src":"2060:85:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"2149:383:0","text":" @notice Checks if the request for randomness from the 3rd-party service has completed\n @dev For time-delayed requests, this function is used to check/confirm completion\n @param requestId The ID of the request used to get the results of the RNG service\n @return isCompleted True if the request has completed and a random number is available, false otherwise"},"functionSelector":"3a19b9bc","id":46,"implemented":false,"kind":"function","modifiers":[],"name":"isRequestComplete","nameLocation":"2544:17:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"requestId","nameLocation":"2569:9:0","nodeType":"VariableDeclaration","scope":46,"src":"2562:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":40,"name":"uint32","nodeType":"ElementaryTypeName","src":"2562:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2561:18:0"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"isCompleted","nameLocation":"2608:11:0","nodeType":"VariableDeclaration","scope":46,"src":"2603:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":43,"name":"bool","nodeType":"ElementaryTypeName","src":"2603:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2602:18:0"},"scope":55,"src":"2535:86:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"2625:207:0","text":" @notice Gets the random number produced by the 3rd-party service\n @param requestId The ID of the request used to get the results of the RNG service\n @return randomNum The random number"},"functionSelector":"9d2a5f98","id":54,"implemented":false,"kind":"function","modifiers":[],"name":"randomNumber","nameLocation":"2844:12:0","nodeType":"FunctionDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"requestId","nameLocation":"2864:9:0","nodeType":"VariableDeclaration","scope":54,"src":"2857:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":48,"name":"uint32","nodeType":"ElementaryTypeName","src":"2857:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2856:18:0"},"returnParameters":{"id":53,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52,"mutability":"mutable","name":"randomNum","nameLocation":"2901:9:0","nodeType":"VariableDeclaration","scope":54,"src":"2893:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51,"name":"uint256","nodeType":"ElementaryTypeName","src":"2893:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2892:19:0"},"scope":55,"src":"2835:77:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":56,"src":"242:2672:0","usedErrors":[]}],"src":"37:2878:0"}}},"version":"0.8.6+commit.11564f7e.Linux.g++"}
