{"contracts":{"/home/sdb/yemx6/solc-DApp/labeledCode/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/libs/math/SafeMath.sol:SafeMath":{"abi":"[]","bin":"604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a723058205394c1630b04468f5bc9f6681558902a3bac076115356789bc1e291ed29a0b5e0029","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a723058205394c1630b04468f5bc9f6681558902a3bac076115356789bc1e291ed29a0b5e0029","srcmap":"589:4709:0:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24","srcmap-runtime":"589:4709:0:-;;;;;;;;"},"/home/sdb/yemx6/solc-DApp/labeledCode/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/math/SafeMathMock.sol:SafeMathMock":{"abi":"[{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"add\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"div\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"sub\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"mul\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"mod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}]","bin":"608060405234801561001057600080fd5b50610746806100206000396000f3fe60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063771602f714610072578063a391c15b146100cb578063b67d77c514610124578063c8a4ac9c1461017d578063f43f523a146101d6575b600080fd5b34801561007e57600080fd5b506100b56004803603604081101561009557600080fd5b81019080803590602001909291908035906020019092919050505061022f565b6040518082815260200191505060405180910390f35b3480156100d757600080fd5b5061010e600480360360408110156100ee57600080fd5b810190808035906020019092919080359060200190929190505050610243565b6040518082815260200191505060405180910390f35b34801561013057600080fd5b506101676004803603604081101561014757600080fd5b810190808035906020019092919080359060200190929190505050610257565b6040518082815260200191505060405180910390f35b34801561018957600080fd5b506101c0600480360360408110156101a057600080fd5b81019080803590602001909291908035906020019092919050505061026b565b6040518082815260200191505060405180910390f35b3480156101e257600080fd5b50610219600480360360408110156101f957600080fd5b81019080803590602001909291908035906020019092919050505061027f565b6040518082815260200191505060405180910390f35b600061023b8383610293565b905092915050565b600061024f838361031d565b905092915050565b60006102638383610367565b905092915050565b600061027783836103b1565b905092915050565b600061028b838361047e565b905092915050565b6000808284019050838110151515610313576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600061035f83836040805190810160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506104c8565b905092915050565b60006103a983836040805190810160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610593565b905092915050565b6000808314156103c45760009050610478565b600082840290508284828115156103d757fe5b04141515610473576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b809150505b92915050565b60006104c083836040805190810160405280601881526020017f536166654d6174683a206d6f64756c6f206279207a65726f0000000000000000815250610655565b905092915050565b60008083141582901515610577576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561053c578082015181840152602081019050610521565b50505050905090810190601f1680156105695780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581151561058557fe5b049050809150509392505050565b60008383111582901515610642576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156106075780820151818401526020810190506105ec565b50505050905090810190601f1680156106345780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008083141582901515610704576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156106c95780820151818401526020810190506106ae565b50505050905090810190601f1680156106f65780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50828481151561071057fe5b069050939250505056fea165627a7a72305820ad8ed26c32347145b8c116f41b81f4179bf9c744e9720fd5094d811162ff98de0029","bin-runtime":"60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063771602f714610072578063a391c15b146100cb578063b67d77c514610124578063c8a4ac9c1461017d578063f43f523a146101d6575b600080fd5b34801561007e57600080fd5b506100b56004803603604081101561009557600080fd5b81019080803590602001909291908035906020019092919050505061022f565b6040518082815260200191505060405180910390f35b3480156100d757600080fd5b5061010e600480360360408110156100ee57600080fd5b810190808035906020019092919080359060200190929190505050610243565b6040518082815260200191505060405180910390f35b34801561013057600080fd5b506101676004803603604081101561014757600080fd5b810190808035906020019092919080359060200190929190505050610257565b6040518082815260200191505060405180910390f35b34801561018957600080fd5b506101c0600480360360408110156101a057600080fd5b81019080803590602001909291908035906020019092919050505061026b565b6040518082815260200191505060405180910390f35b3480156101e257600080fd5b50610219600480360360408110156101f957600080fd5b81019080803590602001909291908035906020019092919050505061027f565b6040518082815260200191505060405180910390f35b600061023b8383610293565b905092915050565b600061024f838361031d565b905092915050565b60006102638383610367565b905092915050565b600061027783836103b1565b905092915050565b600061028b838361047e565b905092915050565b6000808284019050838110151515610313576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600061035f83836040805190810160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506104c8565b905092915050565b60006103a983836040805190810160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610593565b905092915050565b6000808314156103c45760009050610478565b600082840290508284828115156103d757fe5b04141515610473576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b809150505b92915050565b60006104c083836040805190810160405280601881526020017f536166654d6174683a206d6f64756c6f206279207a65726f0000000000000000815250610655565b905092915050565b60008083141582901515610577576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561053c578082015181840152602081019050610521565b50505050905090810190601f1680156105695780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581151561058557fe5b049050809150509392505050565b60008383111582901515610642576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156106075780820151818401526020810190506105ec565b50505050905090810190601f1680156106345780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008083141582901515610704576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156106c95780820151818401526020810190506106ae565b50505050905090810190601f1680156106f65780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50828481151561071057fe5b069050939250505056fea165627a7a72305820ad8ed26c32347145b8c116f41b81f4179bf9c744e9720fd5094d811162ff98de0029","srcmap":"83:587:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;83:587:1;;;;;;;","srcmap-runtime":"83:587:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;224:107;;8:9:-1;5:2;;;30:1;27;20:12;5:2;224:107:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;224:107:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;449;;8:9:-1;5:2;;;30:1;27;20:12;5:2;449:107:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;449:107:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;111;;8:9:-1;5:2;;;30:1;27;20:12;5:2;111:107:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;111:107:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;336;;8:9:-1;5:2;;;30:1;27;20:12;5:2;336:107:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;336:107:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;561;;8:9:-1;5:2;;;30:1;27;20:12;5:2;561:107:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;561:107:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;224;280:7;306:18;319:1;322;306:12;:18::i;:::-;299:25;;224:107;;;;:::o;449:::-;505:7;531:18;544:1;547;531:12;:18::i;:::-;524:25;;449:107;;;;:::o;111:::-;167:7;193:18;206:1;209;193:12;:18::i;:::-;186:25;;111:107;;;;:::o;336:::-;392:7;418:18;431:1;434;418:12;:18::i;:::-;411:25;;336:107;;;;:::o;561:::-;617:7;643:18;656:1;659;643:12;:18::i;:::-;636:25;;561:107;;;;:::o;834:176:0:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;3073:130::-;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3150:46;;3073:130;;;;:::o;1274:134::-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;2159:459::-;2217:7;2463:1;2458;:6;2454:45;;;2487:1;2480:8;;;;2454:45;2509:9;2525:1;2521;:5;2509:17;;2553:1;2548;2544;:5;;;;;;;;:10;2536:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2603:8;;;2159:459;;;;;:::o;4501:128::-;4559:7;4585:37;4589:1;4592;4585:37;;;;;;;;;;;;;;;;;;:3;:37::i;:::-;4578:44;;4501:128;;;;:::o;3718:339::-;3804:7;3902:1;3897;:6;;3905:12;3889:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3889:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3928:9;3944:1;3940;:5;;;;;;;;3928:17;;4049:1;4042:8;;;3718:339;;;;;:::o;1732:187::-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;5133:163::-;5219:7;5251:1;5246;:6;;5254:12;5238:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5238:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5288:1;5284;:5;;;;;;;;5277:12;;5133:163;;;;;:::o"}},"sourceList":["/home/sdb/yemx6/solc-DApp/labeledCode/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/libs/math/SafeMath.sol","/home/sdb/yemx6/solc-DApp/labeledCode/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/math/SafeMathMock.sol"],"sources":{"/home/sdb/yemx6/solc-DApp/labeledCode/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/libs/math/SafeMath.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/libs/math/SafeMath.sol","exportedSymbols":{"SafeMath":[270]}},"children":[{"attributes":{"literals":["solidity","^","0.5",".0"]},"id":85,"name":"PragmaDirective","src":"0:23:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.","fullyImplemented":true,"linearizedBaseContracts":[270],"name":"SafeMath","scope":271},"children":[{"attributes":{"documentation":"@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"add","scope":270,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":110,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":86,"name":"ElementaryTypeName","src":"847:7:0"}],"id":87,"name":"VariableDeclaration","src":"847:9:0"},{"attributes":{"constant":false,"name":"b","scope":110,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":88,"name":"ElementaryTypeName","src":"858:7:0"}],"id":89,"name":"VariableDeclaration","src":"858:9:0"}],"id":90,"name":"ParameterList","src":"846:22:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":110,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":91,"name":"ElementaryTypeName","src":"892:7:0"}],"id":92,"name":"VariableDeclaration","src":"892:7:0"}],"id":93,"name":"ParameterList","src":"891:9:0"},{"children":[{"attributes":{"assignments":[95]},"children":[{"attributes":{"constant":false,"name":"c","scope":109,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":94,"name":"ElementaryTypeName","src":"911:7:0"}],"id":95,"name":"VariableDeclaration","src":"911:9:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":87,"type":"uint256","value":"a"},"id":96,"name":"Identifier","src":"923:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":89,"type":"uint256","value":"b"},"id":97,"name":"Identifier","src":"927:1:0"}],"id":98,"name":"BinaryOperation","src":"923:5:0"}],"id":99,"name":"VariableDeclarationStatement","src":"911:17:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""}],"overloadedDeclarations":[288,289],"referencedDeclaration":289,"type":"function (bool,string memory) pure","value":"require"},"id":100,"name":"Identifier","src":"938:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":95,"type":"uint256","value":"c"},"id":101,"name":"Identifier","src":"946:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":87,"type":"uint256","value":"a"},"id":102,"name":"Identifier","src":"951:1:0"}],"id":103,"name":"BinaryOperation","src":"946:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"536166654d6174683a206164646974696f6e206f766572666c6f77","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"SafeMath: addition overflow\"","value":"SafeMath: addition overflow"},"id":104,"name":"Literal","src":"954:29:0"}],"id":105,"name":"FunctionCall","src":"938:46:0"}],"id":106,"name":"ExpressionStatement","src":"938:46:0"},{"attributes":{"functionReturnParameters":93},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":95,"type":"uint256","value":"c"},"id":107,"name":"Identifier","src":"1002:1:0"}],"id":108,"name":"Return","src":"995:8:0"}],"id":109,"name":"Block","src":"901:109:0"}],"id":110,"name":"FunctionDefinition","src":"834:176:0"},{"attributes":{"documentation":"@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"sub","scope":270,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":126,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":111,"name":"ElementaryTypeName","src":"1287:7:0"}],"id":112,"name":"VariableDeclaration","src":"1287:9:0"},{"attributes":{"constant":false,"name":"b","scope":126,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":113,"name":"ElementaryTypeName","src":"1298:7:0"}],"id":114,"name":"VariableDeclaration","src":"1298:9:0"}],"id":115,"name":"ParameterList","src":"1286:22:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":126,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":116,"name":"ElementaryTypeName","src":"1332:7:0"}],"id":117,"name":"VariableDeclaration","src":"1332:7:0"}],"id":118,"name":"ParameterList","src":"1331:9:0"},{"children":[{"attributes":{"functionReturnParameters":118},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""}],"overloadedDeclarations":[126,153],"referencedDeclaration":153,"type":"function (uint256,uint256,string memory) pure returns (uint256)","value":"sub"},"id":119,"name":"Identifier","src":"1358:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":112,"type":"uint256","value":"a"},"id":120,"name":"Identifier","src":"1362:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":114,"type":"uint256","value":"b"},"id":121,"name":"Identifier","src":"1365:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"536166654d6174683a207375627472616374696f6e206f766572666c6f77","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"SafeMath: subtraction overflow\"","value":"SafeMath: subtraction overflow"},"id":122,"name":"Literal","src":"1368:32:0"}],"id":123,"name":"FunctionCall","src":"1358:43:0"}],"id":124,"name":"Return","src":"1351:50:0"}],"id":125,"name":"Block","src":"1341:67:0"}],"id":126,"name":"FunctionDefinition","src":"1274:134:0"},{"attributes":{"documentation":"@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.\n     * _Available since v2.4.0._","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"sub","scope":270,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":153,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":127,"name":"ElementaryTypeName","src":"1745:7:0"}],"id":128,"name":"VariableDeclaration","src":"1745:9:0"},{"attributes":{"constant":false,"name":"b","scope":153,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":129,"name":"ElementaryTypeName","src":"1756:7:0"}],"id":130,"name":"VariableDeclaration","src":"1756:9:0"},{"attributes":{"constant":false,"name":"errorMessage","scope":153,"stateVariable":false,"storageLocation":"memory","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":131,"name":"ElementaryTypeName","src":"1767:6:0"}],"id":132,"name":"VariableDeclaration","src":"1767:26:0"}],"id":133,"name":"ParameterList","src":"1744:50:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":153,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":134,"name":"ElementaryTypeName","src":"1818:7:0"}],"id":135,"name":"VariableDeclaration","src":"1818:7:0"}],"id":136,"name":"ParameterList","src":"1817:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"overloadedDeclarations":[288,289],"referencedDeclaration":289,"type":"function (bool,string memory) pure","value":"require"},"id":137,"name":"Identifier","src":"1837:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":130,"type":"uint256","value":"b"},"id":138,"name":"Identifier","src":"1845:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":128,"type":"uint256","value":"a"},"id":139,"name":"Identifier","src":"1850:1:0"}],"id":140,"name":"BinaryOperation","src":"1845:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":132,"type":"string memory","value":"errorMessage"},"id":141,"name":"Identifier","src":"1853:12:0"}],"id":142,"name":"FunctionCall","src":"1837:29:0"}],"id":143,"name":"ExpressionStatement","src":"1837:29:0"},{"attributes":{"assignments":[145]},"children":[{"attributes":{"constant":false,"name":"c","scope":152,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":144,"name":"ElementaryTypeName","src":"1876:7:0"}],"id":145,"name":"VariableDeclaration","src":"1876:9:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":128,"type":"uint256","value":"a"},"id":146,"name":"Identifier","src":"1888:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":130,"type":"uint256","value":"b"},"id":147,"name":"Identifier","src":"1892:1:0"}],"id":148,"name":"BinaryOperation","src":"1888:5:0"}],"id":149,"name":"VariableDeclarationStatement","src":"1876:17:0"},{"attributes":{"functionReturnParameters":136},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":145,"type":"uint256","value":"c"},"id":150,"name":"Identifier","src":"1911:1:0"}],"id":151,"name":"Return","src":"1904:8:0"}],"id":152,"name":"Block","src":"1827:92:0"}],"id":153,"name":"FunctionDefinition","src":"1732:187:0"},{"attributes":{"documentation":"@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"mul","scope":270,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":187,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":154,"name":"ElementaryTypeName","src":"2172:7:0"}],"id":155,"name":"VariableDeclaration","src":"2172:9:0"},{"attributes":{"constant":false,"name":"b","scope":187,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":156,"name":"ElementaryTypeName","src":"2183:7:0"}],"id":157,"name":"VariableDeclaration","src":"2183:9:0"}],"id":158,"name":"ParameterList","src":"2171:22:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":187,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":159,"name":"ElementaryTypeName","src":"2217:7:0"}],"id":160,"name":"VariableDeclaration","src":"2217:7:0"}],"id":161,"name":"ParameterList","src":"2216:9:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":155,"type":"uint256","value":"a"},"id":162,"name":"Identifier","src":"2458:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":163,"name":"Literal","src":"2463:1:0"}],"id":164,"name":"BinaryOperation","src":"2458:6:0"},{"children":[{"attributes":{"functionReturnParameters":161},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":165,"name":"Literal","src":"2487:1:0"}],"id":166,"name":"Return","src":"2480:8:0"}],"id":167,"name":"Block","src":"2466:33:0"}],"id":168,"name":"IfStatement","src":"2454:45:0"},{"attributes":{"assignments":[170]},"children":[{"attributes":{"constant":false,"name":"c","scope":186,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":169,"name":"ElementaryTypeName","src":"2509:7:0"}],"id":170,"name":"VariableDeclaration","src":"2509:9:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":155,"type":"uint256","value":"a"},"id":171,"name":"Identifier","src":"2521:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":157,"type":"uint256","value":"b"},"id":172,"name":"Identifier","src":"2525:1:0"}],"id":173,"name":"BinaryOperation","src":"2521:5:0"}],"id":174,"name":"VariableDeclarationStatement","src":"2509:17:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""}],"overloadedDeclarations":[288,289],"referencedDeclaration":289,"type":"function (bool,string memory) pure","value":"require"},"id":175,"name":"Identifier","src":"2536:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":170,"type":"uint256","value":"c"},"id":176,"name":"Identifier","src":"2544:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":155,"type":"uint256","value":"a"},"id":177,"name":"Identifier","src":"2548:1:0"}],"id":178,"name":"BinaryOperation","src":"2544:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":157,"type":"uint256","value":"b"},"id":179,"name":"Identifier","src":"2553:1:0"}],"id":180,"name":"BinaryOperation","src":"2544:10:0"},{"attributes":{"argumentTypes":null,"hexvalue":"536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"SafeMath: multiplication overflow\"","value":"SafeMath: multiplication overflow"},"id":181,"name":"Literal","src":"2556:35:0"}],"id":182,"name":"FunctionCall","src":"2536:56:0"}],"id":183,"name":"ExpressionStatement","src":"2536:56:0"},{"attributes":{"functionReturnParameters":161},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":170,"type":"uint256","value":"c"},"id":184,"name":"Identifier","src":"2610:1:0"}],"id":185,"name":"Return","src":"2603:8:0"}],"id":186,"name":"Block","src":"2226:392:0"}],"id":187,"name":"FunctionDefinition","src":"2159:459:0"},{"attributes":{"documentation":"@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"div","scope":270,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":203,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":188,"name":"ElementaryTypeName","src":"3086:7:0"}],"id":189,"name":"VariableDeclaration","src":"3086:9:0"},{"attributes":{"constant":false,"name":"b","scope":203,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":190,"name":"ElementaryTypeName","src":"3097:7:0"}],"id":191,"name":"VariableDeclaration","src":"3097:9:0"}],"id":192,"name":"ParameterList","src":"3085:22:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":203,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":193,"name":"ElementaryTypeName","src":"3131:7:0"}],"id":194,"name":"VariableDeclaration","src":"3131:7:0"}],"id":195,"name":"ParameterList","src":"3130:9:0"},{"children":[{"attributes":{"functionReturnParameters":195},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""}],"overloadedDeclarations":[203,230],"referencedDeclaration":230,"type":"function (uint256,uint256,string memory) pure returns (uint256)","value":"div"},"id":196,"name":"Identifier","src":"3157:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":189,"type":"uint256","value":"a"},"id":197,"name":"Identifier","src":"3161:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":191,"type":"uint256","value":"b"},"id":198,"name":"Identifier","src":"3164:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"536166654d6174683a206469766973696f6e206279207a65726f","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"SafeMath: division by zero\"","value":"SafeMath: division by zero"},"id":199,"name":"Literal","src":"3167:28:0"}],"id":200,"name":"FunctionCall","src":"3157:39:0"}],"id":201,"name":"Return","src":"3150:46:0"}],"id":202,"name":"Block","src":"3140:63:0"}],"id":203,"name":"FunctionDefinition","src":"3073:130:0"},{"attributes":{"documentation":"@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.\n     * _Available since v2.4.0._","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"div","scope":270,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":230,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":204,"name":"ElementaryTypeName","src":"3731:7:0"}],"id":205,"name":"VariableDeclaration","src":"3731:9:0"},{"attributes":{"constant":false,"name":"b","scope":230,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":206,"name":"ElementaryTypeName","src":"3742:7:0"}],"id":207,"name":"VariableDeclaration","src":"3742:9:0"},{"attributes":{"constant":false,"name":"errorMessage","scope":230,"stateVariable":false,"storageLocation":"memory","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":208,"name":"ElementaryTypeName","src":"3753:6:0"}],"id":209,"name":"VariableDeclaration","src":"3753:26:0"}],"id":210,"name":"ParameterList","src":"3730:50:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":230,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":211,"name":"ElementaryTypeName","src":"3804:7:0"}],"id":212,"name":"VariableDeclaration","src":"3804:7:0"}],"id":213,"name":"ParameterList","src":"3803:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"overloadedDeclarations":[288,289],"referencedDeclaration":289,"type":"function (bool,string memory) pure","value":"require"},"id":214,"name":"Identifier","src":"3889:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":207,"type":"uint256","value":"b"},"id":215,"name":"Identifier","src":"3897:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":216,"name":"Literal","src":"3902:1:0"}],"id":217,"name":"BinaryOperation","src":"3897:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":209,"type":"string memory","value":"errorMessage"},"id":218,"name":"Identifier","src":"3905:12:0"}],"id":219,"name":"FunctionCall","src":"3889:29:0"}],"id":220,"name":"ExpressionStatement","src":"3889:29:0"},{"attributes":{"assignments":[222]},"children":[{"attributes":{"constant":false,"name":"c","scope":229,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":221,"name":"ElementaryTypeName","src":"3928:7:0"}],"id":222,"name":"VariableDeclaration","src":"3928:9:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":205,"type":"uint256","value":"a"},"id":223,"name":"Identifier","src":"3940:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":207,"type":"uint256","value":"b"},"id":224,"name":"Identifier","src":"3944:1:0"}],"id":225,"name":"BinaryOperation","src":"3940:5:0"}],"id":226,"name":"VariableDeclarationStatement","src":"3928:17:0"},{"attributes":{"functionReturnParameters":213},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":222,"type":"uint256","value":"c"},"id":227,"name":"Identifier","src":"4049:1:0"}],"id":228,"name":"Return","src":"4042:8:0"}],"id":229,"name":"Block","src":"3813:244:0"}],"id":230,"name":"FunctionDefinition","src":"3718:339:0"},{"attributes":{"documentation":"@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"mod","scope":270,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":246,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":231,"name":"ElementaryTypeName","src":"4514:7:0"}],"id":232,"name":"VariableDeclaration","src":"4514:9:0"},{"attributes":{"constant":false,"name":"b","scope":246,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":233,"name":"ElementaryTypeName","src":"4525:7:0"}],"id":234,"name":"VariableDeclaration","src":"4525:9:0"}],"id":235,"name":"ParameterList","src":"4513:22:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":246,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":236,"name":"ElementaryTypeName","src":"4559:7:0"}],"id":237,"name":"VariableDeclaration","src":"4559:7:0"}],"id":238,"name":"ParameterList","src":"4558:9:0"},{"children":[{"attributes":{"functionReturnParameters":238},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""}],"overloadedDeclarations":[246,269],"referencedDeclaration":269,"type":"function (uint256,uint256,string memory) pure returns (uint256)","value":"mod"},"id":239,"name":"Identifier","src":"4585:3:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":232,"type":"uint256","value":"a"},"id":240,"name":"Identifier","src":"4589:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":234,"type":"uint256","value":"b"},"id":241,"name":"Identifier","src":"4592:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"536166654d6174683a206d6f64756c6f206279207a65726f","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"SafeMath: modulo by zero\"","value":"SafeMath: modulo by zero"},"id":242,"name":"Literal","src":"4595:26:0"}],"id":243,"name":"FunctionCall","src":"4585:37:0"}],"id":244,"name":"Return","src":"4578:44:0"}],"id":245,"name":"Block","src":"4568:61:0"}],"id":246,"name":"FunctionDefinition","src":"4501:128:0"},{"attributes":{"documentation":"@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.\n     * _Available since v2.4.0._","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"mod","scope":270,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":269,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":247,"name":"ElementaryTypeName","src":"5146:7:0"}],"id":248,"name":"VariableDeclaration","src":"5146:9:0"},{"attributes":{"constant":false,"name":"b","scope":269,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":249,"name":"ElementaryTypeName","src":"5157:7:0"}],"id":250,"name":"VariableDeclaration","src":"5157:9:0"},{"attributes":{"constant":false,"name":"errorMessage","scope":269,"stateVariable":false,"storageLocation":"memory","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":251,"name":"ElementaryTypeName","src":"5168:6:0"}],"id":252,"name":"VariableDeclaration","src":"5168:26:0"}],"id":253,"name":"ParameterList","src":"5145:50:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":269,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":254,"name":"ElementaryTypeName","src":"5219:7:0"}],"id":255,"name":"VariableDeclaration","src":"5219:7:0"}],"id":256,"name":"ParameterList","src":"5218:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"overloadedDeclarations":[288,289],"referencedDeclaration":289,"type":"function (bool,string memory) pure","value":"require"},"id":257,"name":"Identifier","src":"5238:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":250,"type":"uint256","value":"b"},"id":258,"name":"Identifier","src":"5246:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":259,"name":"Literal","src":"5251:1:0"}],"id":260,"name":"BinaryOperation","src":"5246:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":252,"type":"string memory","value":"errorMessage"},"id":261,"name":"Identifier","src":"5254:12:0"}],"id":262,"name":"FunctionCall","src":"5238:29:0"}],"id":263,"name":"ExpressionStatement","src":"5238:29:0"},{"attributes":{"functionReturnParameters":256},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"%","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":248,"type":"uint256","value":"a"},"id":264,"name":"Identifier","src":"5284:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":250,"type":"uint256","value":"b"},"id":265,"name":"Identifier","src":"5288:1:0"}],"id":266,"name":"BinaryOperation","src":"5284:5:0"}],"id":267,"name":"Return","src":"5277:12:0"}],"id":268,"name":"Block","src":"5228:68:0"}],"id":269,"name":"FunctionDefinition","src":"5133:163:0"}],"id":270,"name":"ContractDefinition","src":"589:4709:0"}],"id":271,"name":"SourceUnit","src":"0:5299:0"}},"/home/sdb/yemx6/solc-DApp/labeledCode/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/math/SafeMathMock.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/mocks/libs/math/SafeMathMock.sol","exportedSymbols":{"SafeMathMock":[83]}},"children":[{"attributes":{"literals":["solidity","^","0.5",".0"]},"id":1,"name":"PragmaDirective","src":"0:23:1"},{"attributes":{"SourceUnit":271,"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/BlockSec-blocksec_polynetwork_v2.0/eth-contracts-2b1cbe073e40a7bd26022d1cda9341b4780d07ee/contracts/libs/math/SafeMath.sol","file":"../../../../contracts/libs/math/SafeMath.sol","scope":84,"symbolAliases":[null],"unitAlias":""},"id":2,"name":"ImportDirective","src":"26:54:1"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[83],"name":"SafeMathMock","scope":84},"children":[{"attributes":{"documentation":null,"implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"sub","scope":83,"stateMutability":"pure","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":18,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":3,"name":"ElementaryTypeName","src":"124:7:1"}],"id":4,"name":"VariableDeclaration","src":"124:9:1"},{"attributes":{"constant":false,"name":"b","scope":18,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":5,"name":"ElementaryTypeName","src":"135:7:1"}],"id":6,"name":"VariableDeclaration","src":"135:9:1"}],"id":7,"name":"ParameterList","src":"123:22:1"},{"children":[{"attributes":{"constant":false,"name":"","scope":18,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":8,"name":"ElementaryTypeName","src":"167:7:1"}],"id":9,"name":"VariableDeclaration","src":"167:7:1"}],"id":10,"name":"ParameterList","src":"166:9:1"},{"children":[{"attributes":{"functionReturnParameters":10},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"sub","referencedDeclaration":126,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":270,"type":"type(library SafeMath)","value":"SafeMath"},"id":11,"name":"Identifier","src":"193:8:1"}],"id":12,"name":"MemberAccess","src":"193:12:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4,"type":"uint256","value":"a"},"id":13,"name":"Identifier","src":"206:1:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":6,"type":"uint256","value":"b"},"id":14,"name":"Identifier","src":"209:1:1"}],"id":15,"name":"FunctionCall","src":"193:18:1"}],"id":16,"name":"Return","src":"186:25:1"}],"id":17,"name":"Block","src":"176:42:1"}],"id":18,"name":"FunctionDefinition","src":"111:107:1"},{"attributes":{"documentation":null,"implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"add","scope":83,"stateMutability":"pure","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":34,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":19,"name":"ElementaryTypeName","src":"237:7:1"}],"id":20,"name":"VariableDeclaration","src":"237:9:1"},{"attributes":{"constant":false,"name":"b","scope":34,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":21,"name":"ElementaryTypeName","src":"248:7:1"}],"id":22,"name":"VariableDeclaration","src":"248:9:1"}],"id":23,"name":"ParameterList","src":"236:22:1"},{"children":[{"attributes":{"constant":false,"name":"","scope":34,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":24,"name":"ElementaryTypeName","src":"280:7:1"}],"id":25,"name":"VariableDeclaration","src":"280:7:1"}],"id":26,"name":"ParameterList","src":"279:9:1"},{"children":[{"attributes":{"functionReturnParameters":26},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"add","referencedDeclaration":110,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":270,"type":"type(library SafeMath)","value":"SafeMath"},"id":27,"name":"Identifier","src":"306:8:1"}],"id":28,"name":"MemberAccess","src":"306:12:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":20,"type":"uint256","value":"a"},"id":29,"name":"Identifier","src":"319:1:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":22,"type":"uint256","value":"b"},"id":30,"name":"Identifier","src":"322:1:1"}],"id":31,"name":"FunctionCall","src":"306:18:1"}],"id":32,"name":"Return","src":"299:25:1"}],"id":33,"name":"Block","src":"289:42:1"}],"id":34,"name":"FunctionDefinition","src":"224:107:1"},{"attributes":{"documentation":null,"implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"mul","scope":83,"stateMutability":"pure","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":50,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":35,"name":"ElementaryTypeName","src":"349:7:1"}],"id":36,"name":"VariableDeclaration","src":"349:9:1"},{"attributes":{"constant":false,"name":"b","scope":50,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":37,"name":"ElementaryTypeName","src":"360:7:1"}],"id":38,"name":"VariableDeclaration","src":"360:9:1"}],"id":39,"name":"ParameterList","src":"348:22:1"},{"children":[{"attributes":{"constant":false,"name":"","scope":50,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":40,"name":"ElementaryTypeName","src":"392:7:1"}],"id":41,"name":"VariableDeclaration","src":"392:7:1"}],"id":42,"name":"ParameterList","src":"391:9:1"},{"children":[{"attributes":{"functionReturnParameters":42},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"mul","referencedDeclaration":187,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":270,"type":"type(library SafeMath)","value":"SafeMath"},"id":43,"name":"Identifier","src":"418:8:1"}],"id":44,"name":"MemberAccess","src":"418:12:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":36,"type":"uint256","value":"a"},"id":45,"name":"Identifier","src":"431:1:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":38,"type":"uint256","value":"b"},"id":46,"name":"Identifier","src":"434:1:1"}],"id":47,"name":"FunctionCall","src":"418:18:1"}],"id":48,"name":"Return","src":"411:25:1"}],"id":49,"name":"Block","src":"401:42:1"}],"id":50,"name":"FunctionDefinition","src":"336:107:1"},{"attributes":{"documentation":null,"implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"div","scope":83,"stateMutability":"pure","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":66,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":51,"name":"ElementaryTypeName","src":"462:7:1"}],"id":52,"name":"VariableDeclaration","src":"462:9:1"},{"attributes":{"constant":false,"name":"b","scope":66,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":53,"name":"ElementaryTypeName","src":"473:7:1"}],"id":54,"name":"VariableDeclaration","src":"473:9:1"}],"id":55,"name":"ParameterList","src":"461:22:1"},{"children":[{"attributes":{"constant":false,"name":"","scope":66,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":56,"name":"ElementaryTypeName","src":"505:7:1"}],"id":57,"name":"VariableDeclaration","src":"505:7:1"}],"id":58,"name":"ParameterList","src":"504:9:1"},{"children":[{"attributes":{"functionReturnParameters":58},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"div","referencedDeclaration":203,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":270,"type":"type(library SafeMath)","value":"SafeMath"},"id":59,"name":"Identifier","src":"531:8:1"}],"id":60,"name":"MemberAccess","src":"531:12:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":52,"type":"uint256","value":"a"},"id":61,"name":"Identifier","src":"544:1:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":54,"type":"uint256","value":"b"},"id":62,"name":"Identifier","src":"547:1:1"}],"id":63,"name":"FunctionCall","src":"531:18:1"}],"id":64,"name":"Return","src":"524:25:1"}],"id":65,"name":"Block","src":"514:42:1"}],"id":66,"name":"FunctionDefinition","src":"449:107:1"},{"attributes":{"documentation":null,"implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"mod","scope":83,"stateMutability":"pure","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","scope":82,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":67,"name":"ElementaryTypeName","src":"574:7:1"}],"id":68,"name":"VariableDeclaration","src":"574:9:1"},{"attributes":{"constant":false,"name":"b","scope":82,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":69,"name":"ElementaryTypeName","src":"585:7:1"}],"id":70,"name":"VariableDeclaration","src":"585:9:1"}],"id":71,"name":"ParameterList","src":"573:22:1"},{"children":[{"attributes":{"constant":false,"name":"","scope":82,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":72,"name":"ElementaryTypeName","src":"617:7:1"}],"id":73,"name":"VariableDeclaration","src":"617:7:1"}],"id":74,"name":"ParameterList","src":"616:9:1"},{"children":[{"attributes":{"functionReturnParameters":74},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"mod","referencedDeclaration":246,"type":"function (uint256,uint256) pure returns (uint256)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":270,"type":"type(library SafeMath)","value":"SafeMath"},"id":75,"name":"Identifier","src":"643:8:1"}],"id":76,"name":"MemberAccess","src":"643:12:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":68,"type":"uint256","value":"a"},"id":77,"name":"Identifier","src":"656:1:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":70,"type":"uint256","value":"b"},"id":78,"name":"Identifier","src":"659:1:1"}],"id":79,"name":"FunctionCall","src":"643:18:1"}],"id":80,"name":"Return","src":"636:25:1"}],"id":81,"name":"Block","src":"626:42:1"}],"id":82,"name":"FunctionDefinition","src":"561:107:1"}],"id":83,"name":"ContractDefinition","src":"83:587:1"}],"id":84,"name":"SourceUnit","src":"0:671:1"}}},"version":"0.5.0+commit.1d4f565a.Linux.g++"}
