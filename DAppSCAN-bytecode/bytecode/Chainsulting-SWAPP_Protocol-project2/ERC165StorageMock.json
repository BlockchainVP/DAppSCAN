{"contracts":{"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-SWAPP_Protocol-project2/openzeppelin-contracts-4.2.0/contracts/mocks/ERC165StorageMock.sol:ERC165StorageMock":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"registerInterface","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"bin":"608060405234801561001057600080fd5b506103a7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b578063214cdb801461006b575b600080fd5b6100556004803603810190610050919061025e565b610087565b60405161006291906102d6565b60405180910390f35b6100856004803603810190610080919061025e565b6100fe565b005b60006100928261010a565b806100f75750600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff165b9050919050565b61010781610174565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156101dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d4906102f1565b60405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000813590506102588161035a565b92915050565b60006020828403121561027057600080fd5b600061027e84828501610249565b91505092915050565b61029081610322565b82525050565b60006102a3601c83610311565b91507f4552433136353a20696e76616c696420696e74657266616365206964000000006000830152602082019050919050565b60006020820190506102eb6000830184610287565b92915050565b6000602082019050818103600083015261030a81610296565b9050919050565b600082825260208201905092915050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6103638161032e565b811461036e57600080fd5b5056fea2646970667358221220fdff4d2c1efeacc5aa68c38f5c417e357be0df782e05a64c7e41f0140725613364736f6c63430008000033","bin-runtime":"608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b578063214cdb801461006b575b600080fd5b6100556004803603810190610050919061025e565b610087565b60405161006291906102d6565b60405180910390f35b6100856004803603810190610080919061025e565b6100fe565b005b60006100928261010a565b806100f75750600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff165b9050919050565b61010781610174565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156101dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d4906102f1565b60405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000813590506102588161035a565b92915050565b60006020828403121561027057600080fd5b600061027e84828501610249565b91505092915050565b61029081610322565b82525050565b60006102a3601c83610311565b91507f4552433136353a20696e76616c696420696e74657266616365206964000000006000830152602082019050919050565b60006020820190506102eb6000830184610287565b92915050565b6000602082019050818103600083015261030a81610296565b9050919050565b600082825260208201905092915050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6103638161032e565b811461036e57600080fd5b5056fea2646970667358221220fdff4d2c1efeacc5aa68c38f5c417e357be0df782e05a64c7e41f0140725613364736f6c63430008000033","srcmap":"110:154:0:-:0;;;;;;;;;;;;;;;;;;;","srcmap-runtime":"110:154:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;523:188:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;160:102:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;523:188:2;608:4;631:36;655:11;631:23;:36::i;:::-;:73;;;;671:20;:33;692:11;671:33;;;;;;;;;;;;;;;;;;;;;;;;;;;631:73;624:80;;523:188;;;:::o;160:102:0:-;224:31;243:11;224:18;:31::i;:::-;160:102;:::o;763:155:1:-;848:4;886:25;871:40;;;:11;:40;;;;864:47;;763:155;;;:::o;1105:198:2:-;1203:10;1188:25;;:11;:25;;;;;1180:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1292:4;1256:20;:33;1277:11;1256:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1105:198;:::o;7:137:4:-;;90:6;77:20;68:29;;106:32;132:5;106:32;:::i;:::-;58:86;;;;:::o;150:260::-;;257:2;245:9;236:7;232:23;228:32;225:2;;;273:1;270;263:12;225:2;316:1;341:52;385:7;376:6;365:9;361:22;341:52;:::i;:::-;331:62;;287:116;215:195;;;;:::o;416:109::-;497:21;512:5;497:21;:::i;:::-;492:3;485:34;475:50;;:::o;531:326::-;;694:67;758:2;753:3;694:67;:::i;:::-;687:74;;791:30;787:1;782:3;778:11;771:51;848:2;843:3;839:12;832:19;;677:180;;;:::o;863:210::-;;988:2;977:9;973:18;965:26;;1001:65;1063:1;1052:9;1048:17;1039:6;1001:65;:::i;:::-;955:118;;;;:::o;1079:419::-;;1283:2;1272:9;1268:18;1260:26;;1332:9;1326:4;1322:20;1318:1;1307:9;1303:17;1296:47;1360:131;1486:4;1360:131;:::i;:::-;1352:139;;1250:248;;;:::o;1504:169::-;;1622:6;1617:3;1610:19;1662:4;1657:3;1653:14;1638:29;;1600:73;;;;:::o;1679:90::-;;1756:5;1749:13;1742:21;1731:32;;1721:48;;;:::o;1775:149::-;;1851:66;1844:5;1840:78;1829:89;;1819:105;;;:::o;1930:120::-;2002:23;2019:5;2002:23;:::i;:::-;1995:5;1992:34;1982:2;;2040:1;2037;2030:12;1982:2;1972:78;:::o"},"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-SWAPP_Protocol-project2/openzeppelin-contracts-4.2.0/contracts/utils/introspection/ERC165.sol:ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"bin":"","bin-runtime":"","srcmap":"","srcmap-runtime":""},"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-SWAPP_Protocol-project2/openzeppelin-contracts-4.2.0/contracts/utils/introspection/ERC165Storage.sol:ERC165Storage":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"bin":"","bin-runtime":"","srcmap":"","srcmap-runtime":""},"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-SWAPP_Protocol-project2/openzeppelin-contracts-4.2.0/contracts/utils/introspection/IERC165.sol:IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"bin":"","bin-runtime":"","srcmap":"","srcmap-runtime":""}},"sourceList":["/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-SWAPP_Protocol-project2/openzeppelin-contracts-4.2.0/contracts/mocks/ERC165StorageMock.sol","/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-SWAPP_Protocol-project2/openzeppelin-contracts-4.2.0/contracts/utils/introspection/ERC165.sol","/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-SWAPP_Protocol-project2/openzeppelin-contracts-4.2.0/contracts/utils/introspection/ERC165Storage.sol","/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-SWAPP_Protocol-project2/openzeppelin-contracts-4.2.0/contracts/utils/introspection/IERC165.sol"],"sources":{"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-SWAPP_Protocol-project2/openzeppelin-contracts-4.2.0/contracts/mocks/ERC165StorageMock.sol":{"AST":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-SWAPP_Protocol-project2/openzeppelin-contracts-4.2.0/contracts/mocks/ERC165StorageMock.sol","exportedSymbols":{"ERC165":[90],"ERC165Storage":[66],"ERC165StorageMock":[15],"IERC165":[102]},"id":16,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:0"},{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-SWAPP_Protocol-project2/openzeppelin-contracts-4.2.0/contracts/utils/introspection/ERC165Storage.sol","file":"../utils/introspection/ERC165Storage.sol","id":2,"nodeType":"ImportDirective","scope":16,"sourceUnit":67,"src":"58:50:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3,"name":"ERC165Storage","nodeType":"IdentifierPath","referencedDeclaration":66,"src":"140:13:0"},"id":4,"nodeType":"InheritanceSpecifier","src":"140:13:0"}],"contractDependencies":[66,90,102],"contractKind":"contract","fullyImplemented":true,"id":15,"linearizedBaseContracts":[15,66,90,102],"name":"ERC165StorageMock","nodeType":"ContractDefinition","nodes":[{"body":{"id":13,"nodeType":"Block","src":"214:48:0","statements":[{"expression":{"arguments":[{"id":10,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"243:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9,"name":"_registerInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"224:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes4_$returns$__$","typeString":"function (bytes4)"}},"id":11,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"224:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":12,"nodeType":"ExpressionStatement","src":"224:31:0"}]},"functionSelector":"214cdb80","id":14,"implemented":true,"kind":"function","modifiers":[],"name":"registerInterface","nodeType":"FunctionDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":14,"src":"187:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5,"name":"bytes4","nodeType":"ElementaryTypeName","src":"187:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"186:20:0"},"returnParameters":{"id":8,"nodeType":"ParameterList","parameters":[],"src":"214:0:0"},"scope":15,"src":"160:102:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":16,"src":"110:154:0"}],"src":"33:232:0"}},"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-SWAPP_Protocol-project2/openzeppelin-contracts-4.2.0/contracts/utils/introspection/ERC165.sol":{"AST":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-SWAPP_Protocol-project2/openzeppelin-contracts-4.2.0/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[90],"IERC165":[102]},"id":91,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":68,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:1"},{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-SWAPP_Protocol-project2/openzeppelin-contracts-4.2.0/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":69,"nodeType":"ImportDirective","scope":91,"sourceUnit":103,"src":"58:23:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":71,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":102,"src":"688:7:1"},"id":72,"nodeType":"InheritanceSpecifier","src":"688:7:1"}],"contractDependencies":[102],"contractKind":"contract","documentation":{"id":70,"nodeType":"StructuredDocumentation","src":"83:576:1","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":90,"linearizedBaseContracts":[90,102],"name":"ERC165","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[101],"body":{"id":88,"nodeType":"Block","src":"854:64:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":86,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":81,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":75,"src":"871:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":83,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"891:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$102_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$102_$","typeString":"type(contract IERC165)"}],"id":82,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"886:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"886:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$102","typeString":"type(contract IERC165)"}},"id":85,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"886:25:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"871:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":80,"id":87,"nodeType":"Return","src":"864:47:1"}]},"documentation":{"id":73,"nodeType":"StructuredDocumentation","src":"702:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":89,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","overrides":{"id":77,"nodeType":"OverrideSpecifier","overrides":[],"src":"830:8:1"},"parameters":{"id":76,"nodeType":"ParameterList","parameters":[{"constant":false,"id":75,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":89,"src":"790:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":74,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:1"},"returnParameters":{"id":80,"nodeType":"ParameterList","parameters":[{"constant":false,"id":79,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":89,"src":"848:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":78,"name":"bool","nodeType":"ElementaryTypeName","src":"848:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"847:6:1"},"scope":90,"src":"763:155:1","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":91,"src":"660:260:1"}],"src":"33:888:1"}},"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-SWAPP_Protocol-project2/openzeppelin-contracts-4.2.0/contracts/utils/introspection/ERC165Storage.sol":{"AST":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-SWAPP_Protocol-project2/openzeppelin-contracts-4.2.0/contracts/utils/introspection/ERC165Storage.sol","exportedSymbols":{"ERC165":[90],"ERC165Storage":[66],"IERC165":[102]},"id":67,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":17,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:2"},{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-SWAPP_Protocol-project2/openzeppelin-contracts-4.2.0/contracts/utils/introspection/ERC165.sol","file":"./ERC165.sol","id":18,"nodeType":"ImportDirective","scope":67,"sourceUnit":91,"src":"58:22:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":20,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":90,"src":"303:6:2"},"id":21,"nodeType":"InheritanceSpecifier","src":"303:6:2"}],"contractDependencies":[90,102],"contractKind":"contract","documentation":{"id":19,"nodeType":"StructuredDocumentation","src":"82:185:2","text":" @dev Storage based implementation of the {IERC165} interface.\n Contracts may inherit from this and call {_registerInterface} to declare\n their support of an interface."},"fullyImplemented":true,"id":66,"linearizedBaseContracts":[66,90,102],"name":"ERC165Storage","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"316:82:2","text":" @dev Mapping of interface ids to whether or not it's supported."},"id":26,"mutability":"mutable","name":"_supportedInterfaces","nodeType":"VariableDeclaration","scope":66,"src":"403:52:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"},"typeName":{"id":25,"keyType":{"id":23,"name":"bytes4","nodeType":"ElementaryTypeName","src":"411:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"Mapping","src":"403:23:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"},"valueType":{"id":24,"name":"bool","nodeType":"ElementaryTypeName","src":"421:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"baseFunctions":[89],"body":{"id":44,"nodeType":"Block","src":"614:97:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":42,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":37,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"655:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":35,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"631:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC165Storage_$66_$","typeString":"type(contract super ERC165Storage)"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":89,"src":"631:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":38,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"631:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"baseExpression":{"id":39,"name":"_supportedInterfaces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"671:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":41,"indexExpression":{"id":40,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"692:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"671:33:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"631:73:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":34,"id":43,"nodeType":"Return","src":"624:80:2"}]},"documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"462:56:2","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":45,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","overrides":{"id":31,"nodeType":"OverrideSpecifier","overrides":[],"src":"590:8:2"},"parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":45,"src":"550:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":28,"name":"bytes4","nodeType":"ElementaryTypeName","src":"550:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"549:20:2"},"returnParameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":45,"src":"608:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":32,"name":"bool","nodeType":"ElementaryTypeName","src":"608:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"607:6:2"},"scope":66,"src":"523:188:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":64,"nodeType":"Block","src":"1170:133:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":52,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"1188:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30786666666666666666","id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1203:10:2","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"1188:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433136353a20696e76616c696420696e74657266616365206964","id":55,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1215:30:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee","typeString":"literal_string \"ERC165: invalid interface id\""},"value":"ERC165: invalid interface id"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_282912c0dfceceb28d77d0333f496b83948f9ba5b3154358a8b140b849289dee","typeString":"literal_string \"ERC165: invalid interface id\""}],"id":51,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1180:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1180:66:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":57,"nodeType":"ExpressionStatement","src":"1180:66:2"},{"expression":{"id":62,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":58,"name":"_supportedInterfaces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"1256:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":60,"indexExpression":{"id":59,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"1277:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1256:33:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":61,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1292:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1256:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":63,"nodeType":"ExpressionStatement","src":"1256:40:2"}]},"documentation":{"id":46,"nodeType":"StructuredDocumentation","src":"717:383:2","text":" @dev Registers the contract as an implementer of the interface defined by\n `interfaceId`. Support of the actual ERC165 interface is automatic and\n registering its interface id is not required.\n See {IERC165-supportsInterface}.\n Requirements:\n - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`)."},"id":65,"implemented":true,"kind":"function","modifiers":[],"name":"_registerInterface","nodeType":"FunctionDefinition","parameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":65,"src":"1133:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":47,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1133:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1132:20:2"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[],"src":"1170:0:2"},"scope":66,"src":"1105:198:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":67,"src":"268:1037:2"}],"src":"33:1273:2"}},"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-SWAPP_Protocol-project2/openzeppelin-contracts-4.2.0/contracts/utils/introspection/IERC165.sol":{"AST":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-SWAPP_Protocol-project2/openzeppelin-contracts-4.2.0/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[102]},"id":103,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":92,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"58:279:3","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":102,"linearizedBaseContracts":[102],"name":"IERC165","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"362:340:3","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":101,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","parameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":101,"src":"734:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":95,"name":"bytes4","nodeType":"ElementaryTypeName","src":"734:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"733:20:3"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":101,"src":"777:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":98,"name":"bool","nodeType":"ElementaryTypeName","src":"777:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"776:6:3"},"scope":102,"src":"707:76:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":103,"src":"338:447:3"}],"src":"33:753:3"}}},"version":"0.8.0+commit.c7dfd78e.Linux.g++"}
