{"contracts":{"/home/sdb/yemx6/solc-DApp/labeledCode/QuillAudits-MetaGameStarter_Smart_Contract/Tokenomics-Contracts-f3899d0a31dbb7386eacb7efefbff2ac32ce7cbb/contracts/ProxyClones/Proxy.sol:Proxy":{"abi":[{"stateMutability":"payable","type":"fallback"},{"stateMutability":"payable","type":"receive"}],"bin":"","bin-runtime":"","srcmap":"","srcmap-runtime":""}},"sourceList":["/home/sdb/yemx6/solc-DApp/labeledCode/QuillAudits-MetaGameStarter_Smart_Contract/Tokenomics-Contracts-f3899d0a31dbb7386eacb7efefbff2ac32ce7cbb/contracts/ProxyClones/Proxy.sol"],"sources":{"/home/sdb/yemx6/solc-DApp/labeledCode/QuillAudits-MetaGameStarter_Smart_Contract/Tokenomics-Contracts-f3899d0a31dbb7386eacb7efefbff2ac32ce7cbb/contracts/ProxyClones/Proxy.sol":{"AST":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/QuillAudits-MetaGameStarter_Smart_Contract/Tokenomics-Contracts-f3899d0a31dbb7386eacb7efefbff2ac32ce7cbb/contracts/ProxyClones/Proxy.sol","exportedSymbols":{"Proxy":[37]},"id":38,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:0"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"58:598:0","text":" @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."},"fullyImplemented":false,"id":37,"linearizedBaseContracts":[37],"name":"Proxy","nodeType":"ContractDefinition","nodes":[{"body":{"id":9,"nodeType":"Block","src":"943:835:0","statements":[{"AST":{"nodeType":"YulBlock","src":"962:810:0","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1215:1:0","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1218:1:0","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1221:12:0"},"nodeType":"YulFunctionCall","src":"1221:14:0"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1202:12:0"},"nodeType":"YulFunctionCall","src":"1202:34:0"},"nodeType":"YulExpressionStatement","src":"1202:34:0"},{"nodeType":"YulVariableDeclaration","src":"1363:74:0","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"1390:3:0"},"nodeType":"YulFunctionCall","src":"1390:5:0"},{"name":"implementation","nodeType":"YulIdentifier","src":"1397:14:0"},{"kind":"number","nodeType":"YulLiteral","src":"1413:1:0","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1416:12:0"},"nodeType":"YulFunctionCall","src":"1416:14:0"},{"kind":"number","nodeType":"YulLiteral","src":"1432:1:0","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1435:1:0","type":"","value":"0"}],"functionName":{"name":"delegatecall","nodeType":"YulIdentifier","src":"1377:12:0"},"nodeType":"YulFunctionCall","src":"1377:60:0"},"variables":[{"name":"result","nodeType":"YulTypedName","src":"1367:6:0","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1505:1:0","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1508:1:0","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1511:14:0"},"nodeType":"YulFunctionCall","src":"1511:16:0"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"1490:14:0"},"nodeType":"YulFunctionCall","src":"1490:38:0"},"nodeType":"YulExpressionStatement","src":"1490:38:0"},{"cases":[{"body":{"nodeType":"YulBlock","src":"1623:59:0","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1648:1:0","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1651:14:0"},"nodeType":"YulFunctionCall","src":"1651:16:0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1641:6:0"},"nodeType":"YulFunctionCall","src":"1641:27:0"},"nodeType":"YulExpressionStatement","src":"1641:27:0"}]},"nodeType":"YulCase","src":"1616:66:0","value":{"kind":"number","nodeType":"YulLiteral","src":"1621:1:0","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"1703:59:0","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1728:1:0","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1731:14:0"},"nodeType":"YulFunctionCall","src":"1731:16:0"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"1721:6:0"},"nodeType":"YulFunctionCall","src":"1721:27:0"},"nodeType":"YulExpressionStatement","src":"1721:27:0"}]},"nodeType":"YulCase","src":"1695:67:0","value":"default"}],"expression":{"name":"result","nodeType":"YulIdentifier","src":"1549:6:0"},"nodeType":"YulSwitch","src":"1542:220:0"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":5,"isOffset":false,"isSlot":false,"src":"1397:14:0","valueSize":1}],"id":8,"nodeType":"InlineAssembly","src":"953:819:0"}]},"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"687:191:0","text":" @dev Delegates the current call to `implementation`.\n This function does not return to its internall call site, it will return directly to the external caller."},"id":10,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nodeType":"FunctionDefinition","parameters":{"id":6,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"implementation","nodeType":"VariableDeclaration","scope":10,"src":"902:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"902:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"901:24:0"},"returnParameters":{"id":7,"nodeType":"ParameterList","parameters":[],"src":"943:0:0"},"scope":37,"src":"883:895:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"1784:172:0","text":" @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\n and {_fallback} should delegate."},"id":16,"implemented":false,"kind":"function","modifiers":[],"name":"_implementation","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"1985:2:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":16,"src":"2019:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"2019:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2018:9:0"},"scope":37,"src":"1961:67:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":25,"nodeType":"Block","src":"2261:43:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":21,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"2279:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":22,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2279:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":20,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2269:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2269:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":24,"nodeType":"ExpressionStatement","src":"2269:28:0"}]},"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"2034:186:0","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."},"id":26,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"2233:2:0"},"returnParameters":{"id":19,"nodeType":"ParameterList","parameters":[],"src":"2261:0:0"},"scope":37,"src":"2225:79:0","stateMutability":"payable","virtual":true,"visibility":"external"},{"body":{"id":35,"nodeType":"Block","src":"2499:43:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":31,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"2517:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":32,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2517:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":30,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2507:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":33,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2507:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":34,"nodeType":"ExpressionStatement","src":"2507:28:0"}]},"documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"2310:149:0","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n is empty."},"id":36,"implemented":true,"kind":"receive","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[],"src":"2471:2:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"2499:0:0"},"scope":37,"src":"2464:78:0","stateMutability":"payable","virtual":true,"visibility":"external"}],"scope":38,"src":"657:1887:0"}],"src":"33:2512:0"}}},"version":"0.8.0+commit.c7dfd78e.Linux.g++"}
