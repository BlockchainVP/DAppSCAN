{"contracts":{"/home/sdb/yemx6/solc-DApp/labeledCode/Runtime_V\u0435rification-GnosisSafe/safe-contracts-427d6f7e779431333c54bcb4d4cde31e4d57ce96/contracts/libraries/MultiSend.sol:MultiSend":{"abi":"[{\"constant\":false,\"inputs\":[{\"name\":\"transactions\",\"type\":\"bytes\"}],\"name\":\"multiSend\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","bin":"608060405234801561001057600080fd5b506101c8806100206000396000f3fe608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638d80ff0a14610046575b600080fd5b34801561005257600080fd5b5061010c6004803603602081101561006957600080fd5b810190808035906020019064010000000081111561008657600080fd5b82018360208201111561009857600080fd5b803590602001918460018302840111640100000000831117156100ba57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061010e565b005b805160205b81811015610197578083015160208201840151604083018501516080840186015160a0850187016000856000811461015257600181146101625761016d565b6000808585888a5af1915061016d565b6000808585895af491505b50600081141561017c57600080fd5b602080601f8501040260a00187019650505050505050610113565b50505056fea165627a7a72305820e2797cad007cb767bf406ea73f49a78188bf78f55055276c681e6d67044a5e300029","bin-runtime":"608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680638d80ff0a14610046575b600080fd5b34801561005257600080fd5b5061010c6004803603602081101561006957600080fd5b810190808035906020019064010000000081111561008657600080fd5b82018360208201111561009857600080fd5b803590602001918460018302840111640100000000831117156100ba57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061010e565b005b805160205b81811015610197578083015160208201840151604083018501516080840186015160a0850187016000856000811461015257600181146101625761016d565b6000808585888a5af1915061016d565b6000808585895af491505b50600081141561017c57600080fd5b602080601f8501040260a00187019650505050505050610113565b50505056fea165627a7a72305820e2797cad007cb767bf406ea73f49a78188bf78f55055276c681e6d67044a5e300029","srcmap":"253:1431:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;253:1431:0;;;;;;;","srcmap-runtime":"253:1431:0:-;;;;;;;;;;;;;;;;;;;;;;;;695:987;;8:9:-1;5:2;;;30:1;27;20:12;5:2;695:987:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;695:987:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;695:987:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;695:987:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;695:987:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;695:987:0;;;;;;;;;;;;;;;;;;;877:12;871:19;912:4;929:737;943:6;940:1;937:13;929:737;;;1014:1;1000:12;996:20;990:27;1075:4;1072:1;1068:12;1054;1050:31;1044:38;1143:4;1140:1;1136:12;1122;1118:31;1112:38;1216:4;1213:1;1209:12;1195;1191:31;1185:38;1277:4;1274:1;1270:12;1256;1252:31;1315:1;1340:9;1372:1;1367:66;;;;1455:1;1450:67;;;;1333:184;;1367:66;1429:1;1426;1414:10;1408:4;1401:5;1397:2;1392:3;1387:44;1376:55;;1367:66;;1450:67;1513:1;1510;1498:10;1492:4;1488:2;1483:3;1470:45;1459:56;;1333:184;;1549:1;1540:7;1537:14;1534:2;;;1564:1;1561;1554:12;1534:2;1645:4;1638;1631;1619:10;1615:21;1611:32;1607:43;1601:4;1597:54;1594:1;1590:62;1585:67;;955:711;;;;;;929:737;;;843:833;;;:::o"}},"sourceList":["/home/sdb/yemx6/solc-DApp/labeledCode/Runtime_V\u0435rification-GnosisSafe/safe-contracts-427d6f7e779431333c54bcb4d4cde31e4d57ce96/contracts/libraries/MultiSend.sol"],"sources":{"/home/sdb/yemx6/solc-DApp/labeledCode/Runtime_V\u0435rification-GnosisSafe/safe-contracts-427d6f7e779431333c54bcb4d4cde31e4d57ce96/contracts/libraries/MultiSend.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Runtime_V\u0435rification-GnosisSafe/safe-contracts-427d6f7e779431333c54bcb4d4cde31e4d57ce96/contracts/libraries/MultiSend.sol","exportedSymbols":{"MultiSend":[9]}},"children":[{"attributes":{"literals":["solidity","^","0.5",".0"]},"id":1,"name":"PragmaDirective","src":"0:23:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title Multi Send - Allows to batch multiple transactions into one.\n @author Nick Dodson - <nick.dodson@consensys.net>\n @author Gon\u00e7alo S\u00e1 - <goncalo.sa@consensys.net>\n @author Stefan George - <stefan@gnosis.pm>","fullyImplemented":true,"linearizedBaseContracts":[9],"name":"MultiSend","scope":10},"children":[{"attributes":{"documentation":"@dev Sends multiple transactions and reverts all if one fails.\n @param transactions Encoded transactions. Each transaction is encoded as a \n                     tuple(operation,address,uint256,bytes), where operation \n                     can be 0 for a call or 1 for a delegatecall. The bytes \n                     of all encoded transactions are concatenated to form the input.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"multiSend","scope":9,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"transactions","scope":8,"stateVariable":false,"storageLocation":"memory","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":2,"name":"ElementaryTypeName","src":"714:5:0"}],"id":3,"name":"VariableDeclaration","src":"714:25:0"}],"id":4,"name":"ParameterList","src":"713:27:0"},{"attributes":{"parameters":[null]},"children":[],"id":5,"name":"ParameterList","src":"760:0:0"},{"children":[{"attributes":{"externalReferences":[{"transactions":{"declaration":3,"isOffset":false,"isSlot":false,"src":"877:12:0","valueSize":1}},{"transactions":{"declaration":3,"isOffset":false,"isSlot":false,"src":"1000:12:0","valueSize":1}},{"transactions":{"declaration":3,"isOffset":false,"isSlot":false,"src":"1054:12:0","valueSize":1}},{"transactions":{"declaration":3,"isOffset":false,"isSlot":false,"src":"1122:12:0","valueSize":1}},{"transactions":{"declaration":3,"isOffset":false,"isSlot":false,"src":"1195:12:0","valueSize":1}},{"transactions":{"declaration":3,"isOffset":false,"isSlot":false,"src":"1256:12:0","valueSize":1}}],"operations":"{\n    let length := mload(transactions)\n    let i := 0x20\n    for {\n    }\n    lt(i, length)\n    {\n    }\n    {\n        let operation := mload(add(transactions, i))\n        let to := mload(add(transactions, add(i, 0x20)))\n        let value := mload(add(transactions, add(i, 0x40)))\n        let dataLength := mload(add(transactions, add(i, 0x80)))\n        let data := add(transactions, add(i, 0xa0))\n        let success := 0\n        switch operation\n        case 0 {\n            success := call(gas(), to, value, data, dataLength, 0, 0)\n        }\n        case 1 {\n            success := delegatecall(gas(), to, data, dataLength, 0, 0)\n        }\n        if eq(success, 0)\n        {\n            revert(0, 0)\n        }\n        i := add(i, add(0xa0, mul(div(add(dataLength, 0x1f), 0x20), 0x20)))\n    }\n}"},"children":[],"id":6,"name":"InlineAssembly","src":"834:848:0"}],"id":7,"name":"Block","src":"760:922:0"}],"id":8,"name":"FunctionDefinition","src":"695:987:0"}],"id":9,"name":"ContractDefinition","src":"253:1431:0"}],"id":10,"name":"SourceUnit","src":"0:1685:0"}}},"version":"0.5.0+commit.1d4f565a.Linux.g++"}
