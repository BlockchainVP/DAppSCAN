{"contracts":{"/home/sdb/yemx6/solc-DApp/labeledCode/ConsenSys_Diligence-AZTEC_Protocol/AZTEC-7a020f4ced9680f6e4a452fe570671aac0802471/packages/protocol/contracts/ACE/validators/bilateralSwap/BilateralSwapABIEncoder.sol:BilateralSwapABIEncoder":{"abi":"[]","bin":"604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820a285a098b80b70228600292abc69564e2af1bd1a47608e9d7238c0a47922a9a20029","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820a285a098b80b70228600292abc69564e2af1bd1a47608e9d7238c0a47922a9a20029","srcmap":"685:26905:0:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24","srcmap-runtime":"685:26905:0:-;;;;;;;;"},"/home/sdb/yemx6/solc-DApp/labeledCode/ConsenSys_Diligence-AZTEC_Protocol/AZTEC-7a020f4ced9680f6e4a452fe570671aac0802471/packages/protocol/contracts/ACE/validators/bilateralSwap/BilateralSwapABIEncoderTest.sol:BilateralSwapABIEncoderTest":{"abi":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256[6]\"}],\"name\":\"validateBilateralSwap\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}]","bin":"608060405234801561001057600080fd5b50610563806100206000396000f3fe608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680636b9cc11d14610046575b600080fd5b34801561005257600080fd5b506100f5600480360361010081101561006a57600080fd5b810190808035906020019064010000000081111561008757600080fd5b82018360208201111561009957600080fd5b803590602001918460018302840111640100000000831117156100bb57600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908060c001909192919290505050610170565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013557808201518184015260208101905061011a565b50505050905090810190601f1680156101625780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b606061017a610182565b949350505050565b610144356101040161016435610124016101843561014401602082033560041460208203356002141615156101b657600080fd5b60206101605260026101a05260806101c05260c06102205261020061024052600061026052600061028052610124356102a0526101206102c05260016102e052606061030052600160005260806060840160203760c06103205260016103405281356103605260a06000206103805260406103a0527f800000000000000000000000000000000000000000000000000000000000000060016040511602602051176103c0527f800000000000000000000000000000000000000000000000000000000000000060016080511602606051176103e05260016104205260606104405260806101e0840160203760016104805260408201356104a05260a06000206104c052803580604083030135806040016104e0527f80000000000000000000000000000000000000000000000000000000000000006001604051160260205117610500527f800000000000000000000000000000000000000000000000000000000000000060016080511602606051176105205280602084038301610540378060c00161046052806101200161040052806103200161020052806103c0016101e052806105400160c06020820152610200604082015260006060820152600060808201526101243560e052602060e02060a082015261012060c0820152600160e0820152606061010082015260806102a0870160203760c06101208201526001610140820152606085013561016082015260a060002061018082015260406101a08201527f800000000000000000000000000000000000000000000000000000000000000060016040511602602051176101c08201527f800000000000000000000000000000000000000000000000000000000000000060016080511602606051176101e08201526001610220820152606061024082015260806101208701602037600161028082015260208501356102a082015260a06000206102c082015260208401359250826040850301359150816040016102e08201527f800000000000000000000000000000000000000000000000000000000000000060016040511602602051176103008201527f80000000000000000000000000000000000000000000000000000000000000006001608051160260605117610320820152816020850384016103408301378160c00161026082015281610120016102008201528161032001815261020051826103c001016101805260406101805101610160f3fea165627a7a7230582046e76f7e8f400122e27780eca79bc5732f3c1d212ac70319bfe8dd9583bd03b00029","bin-runtime":"608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680636b9cc11d14610046575b600080fd5b34801561005257600080fd5b506100f5600480360361010081101561006a57600080fd5b810190808035906020019064010000000081111561008757600080fd5b82018360208201111561009957600080fd5b803590602001918460018302840111640100000000831117156100bb57600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908060c001909192919290505050610170565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013557808201518184015260208101905061011a565b50505050905090810190601f1680156101625780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b606061017a610182565b949350505050565b610144356101040161016435610124016101843561014401602082033560041460208203356002141615156101b657600080fd5b60206101605260026101a05260806101c05260c06102205261020061024052600061026052600061028052610124356102a0526101206102c05260016102e052606061030052600160005260806060840160203760c06103205260016103405281356103605260a06000206103805260406103a0527f800000000000000000000000000000000000000000000000000000000000000060016040511602602051176103c0527f800000000000000000000000000000000000000000000000000000000000000060016080511602606051176103e05260016104205260606104405260806101e0840160203760016104805260408201356104a05260a06000206104c052803580604083030135806040016104e0527f80000000000000000000000000000000000000000000000000000000000000006001604051160260205117610500527f800000000000000000000000000000000000000000000000000000000000000060016080511602606051176105205280602084038301610540378060c00161046052806101200161040052806103200161020052806103c0016101e052806105400160c06020820152610200604082015260006060820152600060808201526101243560e052602060e02060a082015261012060c0820152600160e0820152606061010082015260806102a0870160203760c06101208201526001610140820152606085013561016082015260a060002061018082015260406101a08201527f800000000000000000000000000000000000000000000000000000000000000060016040511602602051176101c08201527f800000000000000000000000000000000000000000000000000000000000000060016080511602606051176101e08201526001610220820152606061024082015260806101208701602037600161028082015260208501356102a082015260a06000206102c082015260208401359250826040850301359150816040016102e08201527f800000000000000000000000000000000000000000000000000000000000000060016040511602602051176103008201527f80000000000000000000000000000000000000000000000000000000000000006001608051160260605117610320820152816020850384016103408301378160c00161026082015281610120016102008201528161032001815261020051826103c001016101805260406101805101610160f3fea165627a7a7230582046e76f7e8f400122e27780eca79bc5732f3c1d212ac70319bfe8dd9583bd03b00029","srcmap":"686:276:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;686:276:1;;;;;;;","srcmap-runtime":"686:276:1:-;;;;;;;;;;;;;;;;;;;;;;;;729:231;;8:9:-1;5:2;;;30:1;27;20:12;5:2;729:231:1;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;729:231:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;729:231:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;729:231:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;729:231:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;729:231:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;885:12;914:39;:37;:39::i;:::-;729:231;;;;;;:::o;1484:26104:0:-;1633:5;1620:19;1613:5;1609:31;1695:5;1682:19;1675:5;1671:31;1797:5;1784:19;1777:5;1773:31;2276:4;2264:10;2260:21;2247:35;2241:4;2238:45;2213:4;2200:11;2196:22;2183:36;2177:4;2174:46;2153:144;2146:152;2143:2;;;2330:4;2324;2317:18;2143:2;5584:4;5577:5;5570:19;6365:4;6358:5;6351:19;6513:4;6506:5;6499:19;7334:4;7327:5;7320:19;7718:5;7711;7704:20;7907:4;7900:5;7893:19;7982:4;7975:5;7968:19;8070:5;8057:19;8050:5;8043:34;8958:5;8951;8944:20;9035:4;9028:5;9021:19;9144:4;9137:5;9130:19;9966:4;9960;9953:18;10438:4;10431;10424:5;10420:16;10414:4;10401:42;10554:4;10547:5;10540:19;10638:4;10631:5;10624:19;10798:10;10785:24;10778:5;10771:39;10947:4;10941;10931:21;10924:5;10917:36;11053:4;11046:5;11039:19;12005:66;11974:4;11967;11961:11;11957:22;11885:208;11837:4;11831:11;11807:304;11784:5;11760:365;12353:66;12326:4;12319;12313:11;12309:22;12284:157;12257:4;12251:11;12227:232;12204:5;12180:293;13195:4;13188:5;13181:19;13294:4;13287:5;13280:19;14586:4;14578:5;14571;14567:17;14561:4;14548:43;14751:4;14744:5;14737:19;14990:4;14978:10;14974:21;14961:35;14954:5;14947:50;15088:4;15082;15072:21;15065:5;15058:36;15516:11;15503:25;16658:13;16651:4;16638:11;16634:22;16630:42;16617:56;16775:14;16769:4;16765:25;16758:5;16751:40;17042:66;17011:4;17004;16998:11;16994:22;16965:165;16938:4;16932:11;16908:240;16885:5;16861:301;17413:66;17382:4;17375;17369:11;17365:22;17336:165;17309:4;17303:11;17279:240;17256:5;17232:301;18153:14;18145:4;18132:11;18128:22;18113:13;18109:42;18102:5;18089:79;18643:14;18637:4;18633:25;18626:5;18619:40;18861:14;18854:5;18850:26;18843:5;18836:41;19084:14;19077:5;19073:26;19066:5;19059:41;19645:14;19638:5;19634:26;19627:5;19620:41;19984:14;19977:5;19973:26;20175:4;20168;20158:8;20154:19;20147:33;20287:5;20280:4;20270:8;20266:19;20259:34;20386:4;20379;20369:8;20365:19;20358:33;20499:4;20492;20482:8;20478:19;20471:33;20709:5;20696:19;20690:4;20683:33;20773:4;20767;20757:21;20750:4;20740:8;20736:19;20729:50;21031:5;21024:4;21014:8;21010:19;21003:34;21143:4;21136;21126:8;21122:19;21115:33;21269:4;21261:5;21251:8;21247:20;21240:34;21624:4;21616:5;21609;21605:17;21599:4;21586:43;21741:4;21733:5;21723:8;21719:20;21712:34;21877:4;21869:5;21859:8;21855:20;21848:34;22030:4;22018:10;22014:21;22001:35;21993:5;21983:8;21979:20;21972:65;22156:4;22150;22140:21;22132:5;22122:8;22118:20;22111:51;22283:4;22275:5;22265:8;22261:20;22254:34;22564:66;22533:4;22526;22520:11;22516:22;22487:165;22460:4;22454:11;22430:240;22406:5;22396:8;22392:20;22368:316;22960:66;22929:4;22922;22916:11;22912:22;22883:165;22856:4;22850:11;22826:240;22802:5;22792:8;22788:20;22764:316;23407:4;23399:5;23389:8;23385:20;23378:34;23521:4;23513:5;23503:8;23499:20;23492:34;23871:4;23863:5;23856;23852:17;23846:4;23833:43;24056:4;24048:5;24038:8;24034:20;24027:34;24209:4;24197:10;24193:21;24180:35;24172:5;24162:8;24158:20;24151:65;24321:4;24315;24305:21;24297:5;24287:8;24283:20;24276:51;24528:4;24515:11;24511:22;24498:36;24481:53;;24606:13;24599:4;24586:11;24582:22;24578:42;24565:56;24547:74;;24750:14;24744:4;24740:25;24732:5;24722:8;24718:20;24711:55;25042:66;25011:4;25004;24998:11;24994:22;24965:165;24938:4;24932:11;24908:240;24884:5;24874:8;24870:20;24846:316;25438:66;25407:4;25400;25394:11;25390:22;25361:165;25334:4;25328:11;25304:240;25280:5;25270:8;25266:20;25242:316;25710:14;25702:4;25689:11;25685:22;25670:13;25666:42;25658:5;25648:8;25644:20;25631:94;25943:14;25937:4;25933:25;25925:5;25915:8;25911:20;25904:55;26109:14;26102:5;26098:26;26090:5;26080:8;26076:20;26069:56;26245:14;26238:5;26234:26;26224:8;26217:44;27071:5;27065:12;27048:14;27041:5;27037:26;27033:45;27026:5;27019:60;27548:4;27540:5;27534:12;27530:23;27523:5;27516:38"}},"sourceList":["/home/sdb/yemx6/solc-DApp/labeledCode/ConsenSys_Diligence-AZTEC_Protocol/AZTEC-7a020f4ced9680f6e4a452fe570671aac0802471/packages/protocol/contracts/ACE/validators/bilateralSwap/BilateralSwapABIEncoder.sol","/home/sdb/yemx6/solc-DApp/labeledCode/ConsenSys_Diligence-AZTEC_Protocol/AZTEC-7a020f4ced9680f6e4a452fe570671aac0802471/packages/protocol/contracts/ACE/validators/bilateralSwap/BilateralSwapABIEncoderTest.sol"],"sources":{"/home/sdb/yemx6/solc-DApp/labeledCode/ConsenSys_Diligence-AZTEC_Protocol/AZTEC-7a020f4ced9680f6e4a452fe570671aac0802471/packages/protocol/contracts/ACE/validators/bilateralSwap/BilateralSwapABIEncoder.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/ConsenSys_Diligence-AZTEC_Protocol/AZTEC-7a020f4ced9680f6e4a452fe570671aac0802471/packages/protocol/contracts/ACE/validators/bilateralSwap/BilateralSwapABIEncoder.sol","exportedSymbols":{"BilateralSwapABIEncoder":[30]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0","<","0.6",".0"]},"id":24,"name":"PragmaDirective","src":"0:31:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@title Library to ABI encode the output of a bilateral swap proof verification\n@author AZTEC\n@dev Don't include this as an internal library. This contract uses a static memory table to cache\nelliptic curve primitives and hashes.\nCalling this internally from another function will lead to memory mutation and undefined behaviour.\nThe intended use case is to call this externally via `staticcall`.\nExternal calls to OptimizedAZTEC can be treated as pure functions as this contract contains no\nstorage and makes no external calls (other than to precompiles)\nCopyright Spilsbury Holdings Ltd 2019. All rights reserved.*","fullyImplemented":true,"linearizedBaseContracts":[30],"name":"BilateralSwapABIEncoder","scope":31},"children":[{"attributes":{"documentation":"Calldata map\n0x04:0x24      = calldata location of proofData byte array - pointer to the proofData. \n0x24:0x44      = message sender // sender\n0x44:0x64      = h_x     // crs\n0x64:0x84      = h_y     // crs\n0x84:0xa4      = t2_x0   // crs\n0xa4:0xc4      = t2_x1   // crs\n0xa4:0xc4      = t2_x1   // crs\n0xc4:0xe4      = t2_y0   // crs\n0xe4:0x104     = t2_y1   // crs\n0x104:0x124    = length of proofData byte array \n0x124:0x144    = challenge\n0x144:0x164    = offset in byte array to notes\n0x164:0x184    = offset in byte array to inputOwners\n0x184:0x1a4    = offset in byte array to outputOwners\n0x1a4:0x1c4    = offset in byte array to metadata*","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"encodeAndExit","scope":30,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":25,"name":"ParameterList","src":"1506:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":26,"name":"ParameterList","src":"1523:0:0"},{"children":[{"attributes":{"externalReferences":[null],"operations":"{\n    let notes := add(0x104, calldataload(0x144))\n    let noteOwners := add(0x124, calldataload(0x164))\n    let metadataPtr := add(0x144, calldataload(0x184))\n    if iszero(and(eq(0x02, calldataload(sub(metadataPtr, 0x20))), eq(0x04, calldataload(sub(noteOwners, 0x20)))))\n    {\n        revert(0x00, 0x00)\n    }\n    mstore(0x160, 0x20)\n    mstore(0x1a0, 0x02)\n    mstore(0x1c0, 0x80)\n    mstore(0x220, 0xc0)\n    mstore(0x240, 0x200)\n    mstore(0x260, 0x00)\n    mstore(0x280, 0x00)\n    mstore(0x2a0, calldataload(0x124))\n    mstore(0x2c0, 0x120)\n    mstore(0x2e0, 0x01)\n    mstore(0x300, 0x60)\n    mstore(0x00, 0x01)\n    calldatacopy(0x20, add(notes, 0x60), 0x80)\n    mstore(0x320, 0xc0)\n    mstore(0x340, 0x01)\n    mstore(0x360, calldataload(noteOwners))\n    mstore(0x380, keccak256(0x00, 0xa0))\n    mstore(0x3a0, 0x40)\n    mstore(0x3c0, or(mload(0x20), mul(and(mload(0x40), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    mstore(0x3e0, or(mload(0x60), mul(and(mload(0x80), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    mstore(0x420, 0x01)\n    mstore(0x440, 0x60)\n    calldatacopy(0x20, add(notes, 0x1e0), 0x80)\n    mstore(0x480, 0x01)\n    mstore(0x4a0, calldataload(add(noteOwners, 0x40)))\n    mstore(0x4c0, keccak256(0x00, 0xa0))\n    let metadataIndex := calldataload(metadataPtr)\n    let metadataLength := calldataload(add(sub(metadataPtr, 0x40), metadataIndex))\n    mstore(0x4e0, add(0x40, metadataLength))\n    mstore(0x500, or(mload(0x20), mul(and(mload(0x40), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    mstore(0x520, or(mload(0x60), mul(and(mload(0x80), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    calldatacopy(0x540, add(metadataIndex, sub(metadataPtr, 0x20)), metadataLength)\n    mstore(0x460, add(0xc0, metadataLength))\n    mstore(0x400, add(0x120, metadataLength))\n    mstore(0x200, add(0x320, metadataLength))\n    mstore(0x1e0, add(0x3c0, metadataLength))\n    let proofPtr := add(0x540, metadataLength)\n    mstore(add(proofPtr, 0x20), 0xc0)\n    mstore(add(proofPtr, 0x40), 0x200)\n    mstore(add(proofPtr, 0x60), 0x00)\n    mstore(add(proofPtr, 0x80), 0x00)\n    mstore(0xe0, calldataload(0x124))\n    mstore(add(proofPtr, 0xa0), keccak256(0xe0, 0x20))\n    mstore(add(proofPtr, 0xc0), 0x120)\n    mstore(add(proofPtr, 0xe0), 0x01)\n    mstore(add(proofPtr, 0x100), 0x60)\n    calldatacopy(0x20, add(notes, 0x2a0), 0x80)\n    mstore(add(proofPtr, 0x120), 0xc0)\n    mstore(add(proofPtr, 0x140), 0x01)\n    mstore(add(proofPtr, 0x160), calldataload(add(noteOwners, 0x60)))\n    mstore(add(proofPtr, 0x180), keccak256(0x00, 0xa0))\n    mstore(add(proofPtr, 0x1a0), 0x40)\n    mstore(add(proofPtr, 0x1c0), or(mload(0x20), mul(and(mload(0x40), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    mstore(add(proofPtr, 0x1e0), or(mload(0x60), mul(and(mload(0x80), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    mstore(add(proofPtr, 0x220), 0x01)\n    mstore(add(proofPtr, 0x240), 0x60)\n    calldatacopy(0x20, add(notes, 0x120), 0x80)\n    mstore(add(proofPtr, 0x280), 0x01)\n    mstore(add(proofPtr, 0x2a0), calldataload(add(noteOwners, 0x20)))\n    mstore(add(proofPtr, 0x2c0), keccak256(0x00, 0xa0))\n    metadataIndex := calldataload(add(metadataPtr, 0x20))\n    metadataLength := calldataload(add(sub(metadataPtr, 0x40), metadataIndex))\n    mstore(add(proofPtr, 0x2e0), add(0x40, metadataLength))\n    mstore(add(proofPtr, 0x300), or(mload(0x20), mul(and(mload(0x40), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    mstore(add(proofPtr, 0x320), or(mload(0x60), mul(and(mload(0x80), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    calldatacopy(add(proofPtr, 0x340), add(metadataIndex, sub(metadataPtr, 0x20)), metadataLength)\n    mstore(add(proofPtr, 0x260), add(0xc0, metadataLength))\n    mstore(add(proofPtr, 0x200), add(0x120, metadataLength))\n    mstore(proofPtr, add(0x320, metadataLength))\n    mstore(0x180, add(add(0x3c0, metadataLength), mload(0x200)))\n    return(0x160, add(mload(0x180), 0x40))\n}"},"children":[],"id":27,"name":"InlineAssembly","src":"1533:26055:0"}],"id":28,"name":"Block","src":"1523:26065:0"}],"id":29,"name":"FunctionDefinition","src":"1484:26104:0"}],"id":30,"name":"ContractDefinition","src":"685:26905:0"}],"id":31,"name":"SourceUnit","src":"0:27591:0"}},"/home/sdb/yemx6/solc-DApp/labeledCode/ConsenSys_Diligence-AZTEC_Protocol/AZTEC-7a020f4ced9680f6e4a452fe570671aac0802471/packages/protocol/contracts/ACE/validators/bilateralSwap/BilateralSwapABIEncoderTest.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/ConsenSys_Diligence-AZTEC_Protocol/AZTEC-7a020f4ced9680f6e4a452fe570671aac0802471/packages/protocol/contracts/ACE/validators/bilateralSwap/BilateralSwapABIEncoderTest.sol","exportedSymbols":{"BilateralSwapABIEncoderTest":[22]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0","<","0.6",".0"]},"id":1,"name":"PragmaDirective","src":"0:31:1"},{"attributes":{"SourceUnit":31,"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/ConsenSys_Diligence-AZTEC_Protocol/AZTEC-7a020f4ced9680f6e4a452fe570671aac0802471/packages/protocol/contracts/ACE/validators/bilateralSwap/BilateralSwapABIEncoder.sol","file":"./BilateralSwapABIEncoder.sol","scope":23,"symbolAliases":[null],"unitAlias":""},"id":2,"name":"ImportDirective","src":"33:39:1"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title Bilateral Swap ABI Encoder Test\n@author AZTEC\n@dev Don't include this as an internal library. This contract uses a static memory table to cache\nelliptic curve primitives and hashes.\nCalling this internally from another function will lead to memory mutation and undefined behaviour.\nThe intended use case is to call this externally via `staticcall`.\nExternal calls to OptimizedAZTEC can be treated as pure functions as this contract contains no\nstorage and makes no external calls (other than to precompiles)\nCopyright Spilsbury Holdings Ltd 2019. All rights reserved.*","fullyImplemented":true,"linearizedBaseContracts":[22],"name":"BilateralSwapABIEncoderTest","scope":23},"children":[{"attributes":{"documentation":null,"implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"validateBilateralSwap","scope":22,"stateMutability":"pure","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"","scope":21,"stateVariable":false,"storageLocation":"calldata","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":3,"name":"ElementaryTypeName","src":"769:5:1"}],"id":4,"name":"VariableDeclaration","src":"769:14:1"},{"attributes":{"constant":false,"name":"","scope":21,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":5,"name":"ElementaryTypeName","src":"794:7:1"}],"id":6,"name":"VariableDeclaration","src":"794:7:1"},{"attributes":{"constant":false,"name":"","scope":21,"stateVariable":false,"storageLocation":"calldata","type":"uint256[6]","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"uint256[6]"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":7,"name":"ElementaryTypeName","src":"812:4:1"},{"attributes":{"argumentTypes":null,"hexvalue":"36","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":null,"value":"6"},"id":8,"name":"Literal","src":"817:1:1"}],"id":9,"name":"ArrayTypeName","src":"812:7:1"}],"id":10,"name":"VariableDeclaration","src":"812:16:1"}],"id":11,"name":"ParameterList","src":"759:75:1"},{"children":[{"attributes":{"constant":false,"name":"","scope":21,"stateVariable":false,"storageLocation":"memory","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":12,"name":"ElementaryTypeName","src":"885:5:1"}],"id":13,"name":"VariableDeclaration","src":"885:12:1"}],"id":14,"name":"ParameterList","src":"884:14:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"encodeAndExit","referencedDeclaration":29,"type":"function () pure"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":30,"type":"type(library BilateralSwapABIEncoder)","value":"BilateralSwapABIEncoder"},"id":15,"name":"Identifier","src":"914:23:1"}],"id":17,"name":"MemberAccess","src":"914:37:1"}],"id":18,"name":"FunctionCall","src":"914:39:1"}],"id":19,"name":"ExpressionStatement","src":"914:39:1"}],"id":20,"name":"Block","src":"904:56:1"}],"id":21,"name":"FunctionDefinition","src":"729:231:1"}],"id":22,"name":"ContractDefinition","src":"686:276:1"}],"id":23,"name":"SourceUnit","src":"0:963:1"}}},"version":"0.5.0+commit.1d4f565a.Linux.g++"}
