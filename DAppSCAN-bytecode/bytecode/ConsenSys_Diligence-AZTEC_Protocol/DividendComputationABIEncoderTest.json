{"contracts":{"/home/sdb/yemx6/solc-DApp/labeledCode/ConsenSys_Diligence-AZTEC_Protocol/AZTEC-7a020f4ced9680f6e4a452fe570671aac0802471/packages/protocol/contracts/ACE/validators/dividendComputation/DividendComputationABIEncoder.sol:DividendComputationABIEncoder":{"abi":"[]","bin":"604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a723058208b400c1ebb3250f8ded2bede082f29b4945a76fb0983675b1a23c315177cca590029","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a723058208b400c1ebb3250f8ded2bede082f29b4945a76fb0983675b1a23c315177cca590029","srcmap":"701:10030:0:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24","srcmap-runtime":"701:10030:0:-;;;;;;;;"},"/home/sdb/yemx6/solc-DApp/labeledCode/ConsenSys_Diligence-AZTEC_Protocol/AZTEC-7a020f4ced9680f6e4a452fe570671aac0802471/packages/protocol/contracts/ACE/validators/dividendComputation/DividendComputationABIEncoderTest.sol:DividendComputationABIEncoderTest":{"abi":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256[6]\"}],\"name\":\"validateDividendComputation\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}]","bin":"608060405234801561001057600080fd5b50610425806100206000396000f3fe608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063484b99d514610046575b600080fd5b34801561005257600080fd5b506100f5600480360361010081101561006a57600080fd5b810190808035906020019064010000000081111561008757600080fd5b82018360208201111561009957600080fd5b803590602001918460018302840111640100000000831117156100bb57600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908060c001909192919290505050610170565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013557808201518184015260208101905061011a565b50505050905090810190601f1680156101625780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b606061017a610182565b949350505050565b6101843561010401803560016101a435610124016101c435610124016101e4356101440160016101a05260606101c05260c0610200526000610240526000806102605261012435610280526102a0856020820152602086026102e00160005b878110156102ac5760c0810260208b0101600160005260806040820160203760c08352600160208401528735604084015260a06000206060840152604060808401527f800000000000000000000000000000000000000000000000000000000000000060016060830135160260408201351760a08401527f8000000000000000000000000000000000000000000000000000000000000000600160a0830135160260808201351760c08401528383036020830260408601015260e083019250506001810190506101e1565b50602082820303825281810360c00161022052809150868803602083015260208789030260400181019050865b888110156103ca5760c0810260208b01016020898303028601358060408803013560016000526080604084016020378060c00185526001602086015260208b850302890135604086015260a060002060608601528060400160808601527f8000000000000000000000000000000000000000000000000000000000000000600160405116026020511760a08601527f8000000000000000000000000000000000000000000000000000000000000000600160805116026060511760c08601528060208903830160e087013785850360208c8603026040880101526020855101850194505050506001810190506102d9565b5060208282030382526102a081038060a0016101e0528061010001610180526020610160528061014001610160f3fea165627a7a72305820fa711364dac72078eacbad3276fc146d03ddedc1372b36e566b10330c80f0b4d0029","bin-runtime":"608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063484b99d514610046575b600080fd5b34801561005257600080fd5b506100f5600480360361010081101561006a57600080fd5b810190808035906020019064010000000081111561008757600080fd5b82018360208201111561009957600080fd5b803590602001918460018302840111640100000000831117156100bb57600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908060c001909192919290505050610170565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013557808201518184015260208101905061011a565b50505050905090810190601f1680156101625780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b606061017a610182565b949350505050565b6101843561010401803560016101a435610124016101c435610124016101e4356101440160016101a05260606101c05260c0610200526000610240526000806102605261012435610280526102a0856020820152602086026102e00160005b878110156102ac5760c0810260208b0101600160005260806040820160203760c08352600160208401528735604084015260a06000206060840152604060808401527f800000000000000000000000000000000000000000000000000000000000000060016060830135160260408201351760a08401527f8000000000000000000000000000000000000000000000000000000000000000600160a0830135160260808201351760c08401528383036020830260408601015260e083019250506001810190506101e1565b50602082820303825281810360c00161022052809150868803602083015260208789030260400181019050865b888110156103ca5760c0810260208b01016020898303028601358060408803013560016000526080604084016020378060c00185526001602086015260208b850302890135604086015260a060002060608601528060400160808601527f8000000000000000000000000000000000000000000000000000000000000000600160405116026020511760a08601527f8000000000000000000000000000000000000000000000000000000000000000600160805116026060511760c08601528060208903830160e087013785850360208c8603026040880101526020855101850194505050506001810190506102d9565b5060208282030382526102a081038060a0016101e0528061010001610180526020610160528061014001610160f3fea165627a7a72305820fa711364dac72078eacbad3276fc146d03ddedc1372b36e566b10330c80f0b4d0029","srcmap":"697:294:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;697:294:1;;;;;;;","srcmap-runtime":"697:294:1:-;;;;;;;;;;;;;;;;;;;;;;;;746:243;;8:9:-1;5:2;;;30:1;27;20:12;5:2;746:243:1;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;746:243:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;746:243:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;746:243:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;746:243:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;746:243:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;908:12;937:45;:43;:45::i;:::-;746:243;;;;;;:::o;1519:9210:0:-;1668:5;1655:19;1648:5;1644:31;1710:5;1697:19;1738:1;1795:5;1782:19;1775:5;1771:31;1896:5;1883:19;1876:5;1872:31;1993:5;1980:19;1973:5;1969:31;3962:4;3955:5;3948:19;4041:4;4034:5;4027:19;4175:4;4168:5;4161:19;4314:4;4307:5;4300:19;4535:1;4563:7;4556:5;4549:22;4645:5;4632:19;4625:5;4618:34;4682:5;4783:1;4776:4;4766:8;4762:19;4755:30;4952:4;4949:1;4945:12;4938:5;4934:24;4987:1;4972:2108;4997:1;4994;4991:8;4972:2108;;;5086:4;5083:1;5079:12;5072:4;5065:5;5061:16;5057:35;5171:4;5165;5158:18;5261:4;5254;5243:9;5239:20;5233:4;5220:46;5359:4;5356:1;5349:15;5460:4;5453;5450:1;5446:12;5439:26;5566:11;5553:25;5546:4;5543:1;5539:12;5532:47;5695:4;5689;5679:21;5672:4;5669:1;5665:12;5658:43;5823:4;5816;5813:1;5809:12;5802:26;6175:66;6140:4;6132;6121:9;6117:20;6104:34;6100:45;6067:200;6035:4;6024:9;6020:20;6007:34;5979:310;5952:4;5949:1;5945:12;5917:390;6654:66;6619:4;6611;6600:9;6596:20;6583:34;6579:45;6546:200;6514:4;6503:9;6499:20;6486:34;6458:310;6431:4;6428:1;6424:12;6396:390;6941:8;6938:1;6934:16;6926:4;6923:1;6919:12;6912:4;6902:8;6898:19;6894:38;6887:64;7061:4;7058:1;7054:12;7049:17;;5022:2058;5014:4;5011:1;5007:12;5002:17;;4972:2108;;;4976:14;7268:4;7257:8;7254:1;7250:16;7246:27;7236:8;7229:45;7318:8;7315:1;7311:16;7305:4;7301:27;7294:5;7287:42;7401:1;7389:13;;7450:1;7447;7443:9;7436:4;7426:8;7422:19;7415:38;7535:4;7531:1;7528;7524:9;7520:20;7514:4;7510:31;7507:1;7503:39;7498:44;;7599:1;7584:2474;7609:1;7606;7603:8;7584:2474;;;7732:4;7729:1;7725:12;7718:4;7711:5;7707:16;7703:35;7861:4;7857:1;7854;7850:9;7846:20;7836:8;7832:35;7819:49;7985:13;7978:4;7968:8;7964:19;7960:39;7947:53;8031:4;8025;8018:18;8170:4;8163;8152:9;8148:20;8142:4;8129:46;8277:14;8271:4;8267:25;8264:1;8257:36;8389:4;8382;8379:1;8375:12;8368:26;8539:4;8535:1;8532;8528:9;8524:20;8510:12;8506:39;8493:53;8486:4;8483:1;8479:12;8472:75;8636:4;8630;8620:21;8613:4;8610:1;8606:12;8599:43;8750:14;8744:4;8740:25;8733:4;8730:1;8726:12;8719:47;9067:66;9032:4;9025;9019:11;9015:22;8982:177;8951:4;8945:11;8917:264;8890:4;8887:1;8883:12;8855:344;9476:66;9445:4;9438;9432:11;9428:22;9399:165;9372:4;9366:11;9342:240;9319:4;9316:1;9312:12;9288:312;9734:14;9726:4;9716:8;9712:19;9697:13;9693:39;9686:4;9683:1;9679:12;9666:83;9912:8;9909:1;9905:16;9897:4;9893:1;9890;9886:9;9882:20;9875:4;9865:8;9861:19;9857:46;9850:72;10038:4;10034:1;10028:8;10024:19;10021:1;10017:27;10012:32;;7634:2424;;;7626:4;7623:1;7619:12;7614:17;;7584:2474;;;7588:14;10180:4;10169:8;10166:1;10162:16;10158:27;10148:8;10141:45;10280:5;10277:1;10273:13;10493:11;10487:4;10483:22;10476:5;10469:37;10544:11;10537:5;10533:23;10526:5;10519:38;10626:4;10619:5;10612:19;10669:11;10662:5;10658:23;10651:5;10644:38"}},"sourceList":["/home/sdb/yemx6/solc-DApp/labeledCode/ConsenSys_Diligence-AZTEC_Protocol/AZTEC-7a020f4ced9680f6e4a452fe570671aac0802471/packages/protocol/contracts/ACE/validators/dividendComputation/DividendComputationABIEncoder.sol","/home/sdb/yemx6/solc-DApp/labeledCode/ConsenSys_Diligence-AZTEC_Protocol/AZTEC-7a020f4ced9680f6e4a452fe570671aac0802471/packages/protocol/contracts/ACE/validators/dividendComputation/DividendComputationABIEncoderTest.sol"],"sources":{"/home/sdb/yemx6/solc-DApp/labeledCode/ConsenSys_Diligence-AZTEC_Protocol/AZTEC-7a020f4ced9680f6e4a452fe570671aac0802471/packages/protocol/contracts/ACE/validators/dividendComputation/DividendComputationABIEncoder.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/ConsenSys_Diligence-AZTEC_Protocol/AZTEC-7a020f4ced9680f6e4a452fe570671aac0802471/packages/protocol/contracts/ACE/validators/dividendComputation/DividendComputationABIEncoder.sol","exportedSymbols":{"DividendComputationABIEncoder":[30]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0","<","0.6",".0"]},"id":24,"name":"PragmaDirective","src":"0:31:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@title Library to ABI encode the output of a dividend computation proof verification operation\n@author AZTEC\n@dev Don't include this as an internal library. This contract uses a static memory table to cache\nelliptic curve primitives and hashes.\nCalling this internally from another function will lead to memory mutation and undefined behaviour.\nThe intended use case is to call this externally via `staticcall`.\nExternal calls to OptimizedAZTEC can be treated as pure functions as this contract contains no\nstorage and makes no external calls (other than to precompiles)\nCopyright Spilsbury Holdings Ltd 2019. All rights reserved.*","fullyImplemented":true,"linearizedBaseContracts":[30],"name":"DividendComputationABIEncoder","scope":31},"children":[{"attributes":{"documentation":"New calldata map\n0x04:0x24      = calldata location of proofData byte array  // proof data byte array\n0x24:0x44      = message sender // address\n0x44:0x64      = h_x     // crs\n0x64:0x84      = h_y     // crs\n0x84:0xa4      = t2_x0   // crs\n0xa4:0xc4      = t2_x1   // crs\n0xc4:0xe4      = t2_y0   // crs\n0xe4:0x104     = t2_y1   // crs\n0x104:0x124    = length of proofData byte array\n0x124:0x144    = challenge\n0x144:0x164    = za\n0x164:0x184    = zb\n0x184:0x1a4    = offset in byte array to notes\n0x1a4:0x1c4    = offset in byte array to inputOwners\n0x1c4:0x1e4    = offset in byte array to outputOwners\n0x1e4:0x204    = offset in byte array to metadata","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"encodeAndExit","scope":30,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":25,"name":"ParameterList","src":"1541:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":26,"name":"ParameterList","src":"1558:0:0"},{"children":[{"attributes":{"externalReferences":[null],"operations":"{\n    let notes := add(0x104, calldataload(0x184))\n    let n := calldataload(notes)\n    let m := 1\n    let inputOwners := add(0x124, calldataload(0x1a4))\n    let outputOwners := add(0x124, calldataload(0x1c4))\n    let metadata := add(0x144, calldataload(0x1e4))\n    mstore(0x1a0, 0x01)\n    mstore(0x1c0, 0x60)\n    mstore(0x200, 0xc0)\n    mstore(0x240, 0x00)\n    let kPublic := 0\n    mstore(0x260, kPublic)\n    mstore(0x280, calldataload(0x124))\n    let inputPtr := 0x2a0\n    mstore(add(inputPtr, 0x20), m)\n    let s := add(0x2e0, mul(m, 0x20))\n    for {\n        let i := 0\n    }\n    lt(i, m)\n    {\n        i := add(i, 0x01)\n    }\n    {\n        let noteIndex := add(add(notes, 0x20), mul(i, 0xc0))\n        mstore(0x00, 0x01)\n        calldatacopy(0x20, add(noteIndex, 0x40), 0x80)\n        mstore(s, 0xc0)\n        mstore(add(s, 0x20), 0x01)\n        mstore(add(s, 0x40), calldataload(inputOwners))\n        mstore(add(s, 0x60), keccak256(0x00, 0xa0))\n        mstore(add(s, 0x80), 0x40)\n        mstore(add(s, 0xa0), or(calldataload(add(noteIndex, 0x40)), mul(and(calldataload(add(noteIndex, 0x60)), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n        mstore(add(s, 0xc0), or(calldataload(add(noteIndex, 0x80)), mul(and(calldataload(add(noteIndex, 0xa0)), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n        mstore(add(add(inputPtr, 0x40), mul(i, 0x20)), sub(s, inputPtr))\n        s := add(s, 0xe0)\n    }\n    mstore(inputPtr, sub(sub(s, inputPtr), 0x20))\n    mstore(0x220, add(0xc0, sub(s, inputPtr)))\n    inputPtr := s\n    mstore(add(inputPtr, 0x20), sub(n, m))\n    s := add(s, add(0x40, mul(sub(n, m), 0x20)))\n    for {\n        let i := m\n    }\n    lt(i, n)\n    {\n        i := add(i, 0x01)\n    }\n    {\n        let noteIndex := add(add(notes, 0x20), mul(i, 0xc0))\n        let metadataIndex := calldataload(add(metadata, mul(sub(i, m), 0x20)))\n        let metadataLength := calldataload(add(sub(metadata, 0x40), metadataIndex))\n        mstore(0x00, 0x01)\n        calldatacopy(0x20, add(noteIndex, 0x40), 0x80)\n        mstore(s, add(0xc0, metadataLength))\n        mstore(add(s, 0x20), 0x01)\n        mstore(add(s, 0x40), calldataload(add(outputOwners, mul(sub(i, m), 0x20))))\n        mstore(add(s, 0x60), keccak256(0x00, 0xa0))\n        mstore(add(s, 0x80), add(0x40, metadataLength))\n        mstore(add(s, 0xa0), or(mload(0x20), mul(and(mload(0x40), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n        mstore(add(s, 0xc0), or(mload(0x60), mul(and(mload(0x80), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n        calldatacopy(add(s, 0xe0), add(metadataIndex, sub(metadata, 0x20)), metadataLength)\n        mstore(add(add(inputPtr, 0x40), mul(sub(i, m), 0x20)), sub(s, inputPtr))\n        s := add(s, add(mload(s), 0x20))\n    }\n    mstore(inputPtr, sub(sub(s, inputPtr), 0x20))\n    let notesLength := sub(s, 0x2a0)\n    mstore(0x1e0, add(0xa0, notesLength))\n    mstore(0x180, add(0x100, notesLength))\n    mstore(0x160, 0x20)\n    return(0x160, add(0x140, notesLength))\n}"},"children":[],"id":27,"name":"InlineAssembly","src":"1568:9161:0"}],"id":28,"name":"Block","src":"1558:9171:0"}],"id":29,"name":"FunctionDefinition","src":"1519:9210:0"}],"id":30,"name":"ContractDefinition","src":"701:10030:0"}],"id":31,"name":"SourceUnit","src":"0:10732:0"}},"/home/sdb/yemx6/solc-DApp/labeledCode/ConsenSys_Diligence-AZTEC_Protocol/AZTEC-7a020f4ced9680f6e4a452fe570671aac0802471/packages/protocol/contracts/ACE/validators/dividendComputation/DividendComputationABIEncoderTest.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/ConsenSys_Diligence-AZTEC_Protocol/AZTEC-7a020f4ced9680f6e4a452fe570671aac0802471/packages/protocol/contracts/ACE/validators/dividendComputation/DividendComputationABIEncoderTest.sol","exportedSymbols":{"DividendComputationABIEncoderTest":[22]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0","<","0.6",".0"]},"id":1,"name":"PragmaDirective","src":"0:31:1"},{"attributes":{"SourceUnit":31,"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/ConsenSys_Diligence-AZTEC_Protocol/AZTEC-7a020f4ced9680f6e4a452fe570671aac0802471/packages/protocol/contracts/ACE/validators/dividendComputation/DividendComputationABIEncoder.sol","file":"./DividendComputationABIEncoder.sol","scope":23,"symbolAliases":[null],"unitAlias":""},"id":2,"name":"ImportDirective","src":"33:45:1"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title Dividend computation ABI Encoder Test\n@author AZTEC\n@dev Don't include this as an internal library. This contract uses a static memory table to cache\nelliptic curve primitives and hashes.\nCalling this internally from another function will lead to memory mutation and undefined behaviour.\nThe intended use case is to call this externally via `staticcall`.\nExternal calls to OptimizedAZTEC can be treated as pure functions as this contract contains no\nstorage and makes no external calls (other than to precompiles)\nCopyright Spilsbury Holdings Ltd 2019. All rights reserved.*","fullyImplemented":true,"linearizedBaseContracts":[22],"name":"DividendComputationABIEncoderTest","scope":23},"children":[{"attributes":{"documentation":null,"implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"validateDividendComputation","scope":22,"stateMutability":"pure","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"","scope":21,"stateVariable":false,"storageLocation":"calldata","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":3,"name":"ElementaryTypeName","src":"792:5:1"}],"id":4,"name":"VariableDeclaration","src":"792:14:1"},{"attributes":{"constant":false,"name":"","scope":21,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":5,"name":"ElementaryTypeName","src":"817:7:1"}],"id":6,"name":"VariableDeclaration","src":"817:7:1"},{"attributes":{"constant":false,"name":"","scope":21,"stateVariable":false,"storageLocation":"calldata","type":"uint256[6]","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"uint256[6]"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":7,"name":"ElementaryTypeName","src":"835:4:1"},{"attributes":{"argumentTypes":null,"hexvalue":"36","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":null,"value":"6"},"id":8,"name":"Literal","src":"840:1:1"}],"id":9,"name":"ArrayTypeName","src":"835:7:1"}],"id":10,"name":"VariableDeclaration","src":"835:16:1"}],"id":11,"name":"ParameterList","src":"782:75:1"},{"children":[{"attributes":{"constant":false,"name":"","scope":21,"stateVariable":false,"storageLocation":"memory","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":12,"name":"ElementaryTypeName","src":"908:5:1"}],"id":13,"name":"VariableDeclaration","src":"908:12:1"}],"id":14,"name":"ParameterList","src":"907:14:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"encodeAndExit","referencedDeclaration":29,"type":"function () pure"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":30,"type":"type(library DividendComputationABIEncoder)","value":"DividendComputationABIEncoder"},"id":15,"name":"Identifier","src":"937:29:1"}],"id":17,"name":"MemberAccess","src":"937:43:1"}],"id":18,"name":"FunctionCall","src":"937:45:1"}],"id":19,"name":"ExpressionStatement","src":"937:45:1"}],"id":20,"name":"Block","src":"927:62:1"}],"id":21,"name":"FunctionDefinition","src":"746:243:1"}],"id":22,"name":"ContractDefinition","src":"697:294:1"}],"id":23,"name":"SourceUnit","src":"0:992:1"}}},"version":"0.5.0+commit.1d4f565a.Linux.g++"}
