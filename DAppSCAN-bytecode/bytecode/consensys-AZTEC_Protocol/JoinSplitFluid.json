{"contracts":{"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/joinSplitFluid/JoinSplitFluid.sol:JoinSplitFluid":{"abi":"[{\"constant\":true,\"inputs\":[],\"name\":\"EIP712_DOMAIN_HASH\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]","bin":"608060405260405160200180807f454950373132446f6d61696e2800000000000000000000000000000000000000815250600d01807f737472696e67206e616d652c0000000000000000000000000000000000000000815250600c01807f737472696e672076657273696f6e2c0000000000000000000000000000000000815250600f01807f6164647265737320766572696679696e67436f6e747261637400000000000000815250601901807f29000000000000000000000000000000000000000000000000000000000000008152506001019050604051602081830303815290604052805190602001206040805190810160405280601981526020017f415a5445435f43525950544f4752415048595f454e47494e4500000000000000815250805190602001206040805190810160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152508051906020012030604051602001808581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405160208183030381529060405280519060200120600081905550610883806101e26000396000f3fe608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063e306f779146105a5575b61004961004e565b6102da565b60443560805260643560a0526101443561010401600181357f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001806101243506828411156100a15761019460005260206000fd5b828414156100b55761019460005260206000fd5b60006024356102a05260006102c052846102e0526100d3848761055f565b6080840261030001600160005b8681101561029b5760c0810260208a010160006020820135878a600186011460018114610114576000811461011c57610121565b889350610121565b843593505b5061012d8284866104b0565b89600051870995508b600186011160018114610150576000811461016f57610176565b8a848c038a0898508a87850993508a87840992508a878b099150610176565b8a848a0898505b5060406080850160e0376040808501602037808a0361012052826060528160c05260406101a0606060e060075afa60406101206060602060075afa8116905060406101606060608060075afa811690506040610160608061012060065afa81169050604088608061016060065afa811690508c86141561023057602051610260526040516102805260e0516101e052610100517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4703610200525b8c861115610272578160605260406102206060602060075afa811690506040610260608061022060065afa8116905060406101e060806101a060065afa811690505b8015156102855761019060005260206000fd5b60408801975050505050506001810190506100e0565b50858710156102af576102ae60846102df565b5b846102a083036102a0200684811415156102cf5761019460005260206000fd5b505050505050505050565b6104ab565b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4781356020830135604084013560608501357f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81147f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa83147f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c285147f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed87148415861588158a1517171717171717156103bd5761019060005260206000fd5b6101e051602052610200516040527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6080527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26060527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa60c0527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b60a0526102605160e05261028051610100528361014052826101205281610180528061016052602080610180602060085afa60205115811517156104a25761019060005260206000fd5b50505050505050565b61055a565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760408301356060840135608085013560a086013584838409856003878789898a090908148582830986600388868a888909090814166001891189888b06141660018b118b898d0614161616151561054f5761019060005260206000fd5b505050505050505050565b61059b565b60005b8281101561058b57606060c0820283010160808160808402610300013750600181019050610562565b5060808202610300206000525050565b6105a36105d0565b005b3480156105b157600080fd5b506105ba610851565b6040518082815260200191505060405180910390f35b61014435610104018035610164356101240161018435610124016101a4356101440160026101a05260806101c05260c061022052600061026052600061028052610124356102a05260016102e052606061030052803560016000526080610120870160203760c06103205260016103405282356103605260a06000206103805260406103a05260016040511660ff1b602051176103c05260016080511660ff1b606051176103e052610200610240526101206102c052604082038101358061012001610400526001610420526060610440526080606088016020378060c0016104605260016104805284356104a05260a06000206104c052806040016104e05260016040511660ff1b602051176105005260016080511660ff1b606051176105205280602084038301610540376060600061044001528061054001816103200161020052816103c0016101e0528060c0602082015261010060408201526000606082015260006080820152610124356020526020802060a0820152602060c0820152600060e0820152610100810160028903602082015260028903602002610140830101915060025b89811015610826576020600182030287013595508560408803013594506001600052608060c0820260608d01016020378460c00183526001602084015260206001820302880135604084015260a0600020606084015284604001608084015260016040511660ff1b6020511760a084015260016080511660ff1b6060511760c08401528460208803870160e085013781830360208202830152602083510183019250600181019050610779565b5060208183030381528282036020810384526101a08303610180526020610160526101608303610160f35b6000548156fea165627a7a723058204fd813e58c02af5e59c7dcbd34be2600ae292a117f291bc76c9b7c3bb2c70bb50029","bin-runtime":"608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063e306f779146105a5575b61004961004e565b6102da565b60443560805260643560a0526101443561010401600181357f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001806101243506828411156100a15761019460005260206000fd5b828414156100b55761019460005260206000fd5b60006024356102a05260006102c052846102e0526100d3848761055f565b6080840261030001600160005b8681101561029b5760c0810260208a010160006020820135878a600186011460018114610114576000811461011c57610121565b889350610121565b843593505b5061012d8284866104b0565b89600051870995508b600186011160018114610150576000811461016f57610176565b8a848c038a0898508a87850993508a87840992508a878b099150610176565b8a848a0898505b5060406080850160e0376040808501602037808a0361012052826060528160c05260406101a0606060e060075afa60406101206060602060075afa8116905060406101606060608060075afa811690506040610160608061012060065afa81169050604088608061016060065afa811690508c86141561023057602051610260526040516102805260e0516101e052610100517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4703610200525b8c861115610272578160605260406102206060602060075afa811690506040610260608061022060065afa8116905060406101e060806101a060065afa811690505b8015156102855761019060005260206000fd5b60408801975050505050506001810190506100e0565b50858710156102af576102ae60846102df565b5b846102a083036102a0200684811415156102cf5761019460005260206000fd5b505050505050505050565b6104ab565b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4781356020830135604084013560608501357f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81147f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa83147f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c285147f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed87148415861588158a1517171717171717156103bd5761019060005260206000fd5b6101e051602052610200516040527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6080527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26060527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa60c0527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b60a0526102605160e05261028051610100528361014052826101205281610180528061016052602080610180602060085afa60205115811517156104a25761019060005260206000fd5b50505050505050565b61055a565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760408301356060840135608085013560a086013584838409856003878789898a090908148582830986600388868a888909090814166001891189888b06141660018b118b898d0614161616151561054f5761019060005260206000fd5b505050505050505050565b61059b565b60005b8281101561058b57606060c0820283010160808160808402610300013750600181019050610562565b5060808202610300206000525050565b6105a36105d0565b005b3480156105b157600080fd5b506105ba610851565b6040518082815260200191505060405180910390f35b61014435610104018035610164356101240161018435610124016101a4356101440160026101a05260806101c05260c061022052600061026052600061028052610124356102a05260016102e052606061030052803560016000526080610120870160203760c06103205260016103405282356103605260a06000206103805260406103a05260016040511660ff1b602051176103c05260016080511660ff1b606051176103e052610200610240526101206102c052604082038101358061012001610400526001610420526060610440526080606088016020378060c0016104605260016104805284356104a05260a06000206104c052806040016104e05260016040511660ff1b602051176105005260016080511660ff1b606051176105205280602084038301610540376060600061044001528061054001816103200161020052816103c0016101e0528060c0602082015261010060408201526000606082015260006080820152610124356020526020802060a0820152602060c0820152600060e0820152610100810160028903602082015260028903602002610140830101915060025b89811015610826576020600182030287013595508560408803013594506001600052608060c0820260608d01016020378460c00183526001602084015260206001820302880135604084015260a0600020606084015284604001608084015260016040511660ff1b6020511760a084015260016080511660ff1b6060511760c08401528460208803870160e085013781830360208202830152602083510183019250600181019050610779565b5060208183030381528282036020810384526101a08303610180526020610160526101608303610160f35b6000548156fea165627a7a723058204fd813e58c02af5e59c7dcbd34be2600ae292a117f291bc76c9b7c3bb2c70bb50029","srcmap":"1379:16511:0:-;;;1086:160:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1086:160:3;;;1076:171;;;;;;1558:18;;;;;;;;;;;;;;;;;;1542:36;;;;;;1608:21;;;;;;;;;;;;;;;;;;1592:39;;;;;;1653:4;1469:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1469:199:3;;;1459:210;;;;;;1438:18;:231;;;;1379:16511:0;;;;;;","srcmap-runtime":"1379:16511:0:-;;;;;;;;;;;;;;;;;;;;;2361:24;;;;3177:8463;;;3255:4;3242:18;3236:4;3229:32;3304:4;3291:18;3285:4;3278:32;3364:5;3351:19;3344:5;3340:31;3424:1;3464:5;3451:19;3504:66;3629:9;3621:5;3608:19;3604:35;3701:1;3698;3695:8;3692:2;;;3739:3;3733:4;3726:17;3777:4;3771;3764:18;3692:2;3827:1;3824;3821:8;3818:2;;;3865:3;3859:4;3852:17;3903:4;3897;3890:18;3818:2;3954:1;4047:4;4034:18;4027:5;4020:33;4084:1;4077:5;4070:16;4150:1;4143:5;4136:16;4199:25;4222:1;4215:5;4199:25;;;4328:4;4325:1;4321:12;4314:5;4310:24;4361:1;4685;4670:5724;4695:1;4692;4689:8;4670:5724;;;4840:4;4837:1;4833:12;4826:4;4819:5;4815:16;4811:35;;6006:4;5995:9;5991:20;5978:34;6038:9;6089:1;6082:4;6079:1;6075:12;6072:19;6117:1;6112:62;;;;6200:1;6195:39;;;;6065:169;;6112:62;6150:2;6145:7;;6112:62;;6195:39;6222:9;6209:23;6204:28;;6065:169;;6312:35;6345:1;6342;6331:9;6312:35;;;6394:9;6387:4;6381:11;6378:1;6371:33;6366:38;;6575:1;6568:4;6565:1;6561:12;6558:19;6599:1;6594:346;;;;6963:1;6958:181;;;;6551:588;;6594:346;6756:9;6752:1;6741:9;6737:17;6733:2;6726:40;6720:46;;6806:9;6803:1;6800;6793:23;6788:28;;6855:9;6852:1;6849;6842:23;6837:28;;6912:9;6909:1;6898:9;6891:31;6886:36;;6594:346;;6958:181;7111:9;7108:1;7104:2;7097:24;7091:30;;6551:588;;7594:4;7587;7576:9;7572:20;7566:4;7553:46;7657:4;7650;7639:9;7635:20;7629:4;7616:46;7708:1;7697:9;7693:17;7686:5;7679:32;7741:1;7735:4;7728:15;7773:1;7767:4;7760:15;8155:4;8148:5;8142:4;8136;8133:1;8128:3;8117:43;8237:4;8230:5;8224:4;8218;8215:1;8210:3;8199:43;8191:6;8187:56;8177:66;;8320:4;8313:5;8307:4;8301;8298:1;8293:3;8282:43;8274:6;8270:56;8260:66;;8591:4;8584:5;8578:4;8571:5;8568:1;8563:3;8552:44;8544:6;8540:57;8530:67;;8814:4;8811:1;8805:4;8798:5;8795:1;8790:3;8779:40;8771:6;8767:53;8757:63;;9093:1;9090;9087:8;9084:2;;;9138:4;9132:11;9125:5;9118:26;9185:4;9179:11;9172:5;9165:26;9232:4;9226:11;9219:5;9212:26;9351:5;9345:12;9277:66;9273:85;9266:5;9259:100;9084:2;9649:1;9646;9643:8;9640:2;;;9687:1;9681:4;9674:15;9770:4;9763:5;9757:4;9751;9748:1;9743:3;9732:43;9724:6;9720:56;9710:66;;9947:4;9940:5;9934:4;9927:5;9924:1;9919:3;9908:44;9900:6;9896:57;9886:67;;10122:4;10115:5;10109:4;10102:5;10099:1;10094:3;10083:44;10075:6;10071:57;10061:67;;9640:2;10257:6;10250:14;10247:2;;;10280:3;10274:4;10267:17;10298:4;10292;10285:18;10247:2;10338:4;10335:1;10331:12;10326:17;;4720:5674;;;;;4712:4;4709:1;4705:12;4700:17;;4670:5724;;;4674:14;10842:1;10839;10836:8;10833:2;;;10867:21;10883:4;10867:21;;;10833:2;11248:9;11239:5;11236:1;11232:13;11225:5;11215:31;11211:47;11299:9;11289:8;11286:23;11279:31;11276:2;;;11396:3;11390:4;11383:17;11434:4;11428;11421:18;11276:2;3211:8429;;;;;;;;;;;11883:2509;;;11949:66;12059:2;12046:16;12114:4;12110:2;12106:13;12093:27;12172:4;12168:2;12164:13;12151:27;12230:4;12226:2;12222:13;12209:27;12825:65;12817:6;12814:77;12724:66;12716:6;12713:78;12623:66;12615:6;12612:78;12522:66;12514:6;12511:78;12481:6;12474:14;12444:6;12437:14;12407:6;12400:14;12371:6;12364:14;12340:75;12337:115;12334:155;12331:259;12328:363;12325:467;12322:570;12319:2;;;12944:3;12938:4;12931:17;12982:4;12976;12969:18;12319:2;13375:5;13369:12;13363:4;13356:26;13441:5;13435:12;13429:4;13422:26;13501:66;13495:4;13488:80;13598:66;13592:4;13585:80;13695:66;13689:4;13682:80;13792:65;13786:4;13779:79;13894:5;13888:12;13882:4;13875:26;13961:5;13955:12;13948:5;13941:27;14022:6;14015:5;14008:21;14060:6;14053:5;14046:21;14098:6;14091:5;14084:21;14136:6;14129:5;14122:21;14214:4;14208;14201:5;14195:4;14192:1;14187:3;14176:43;14273:4;14267:11;14260:19;14250:7;14243:15;14240:40;14237:2;;;14316:3;14310:4;14303:17;14354:4;14348;14341:18;14237:2;11912:2480;;;;;;;;;14731:1994;;;14806:66;14908;15028:4;15022;15018:15;15005:29;15088:4;15082;15078:15;15065:29;15148:4;15142;15138:15;15125:29;15208:4;15202;15198:15;15185:29;16510:11;16502:6;16494;16487:35;16416:11;16381:1;16335:11;16327:6;16313:11;16305:6;16297;16290:35;16283:64;16243:214;16193:355;16129:11;16121:6;16113;16106:35;16035:11;16000:1;15954:11;15946:6;15932:11;15924:6;15916;15909:35;15902:64;15862:214;15812:355;15783:791;15668:1;15665;15662:8;15598:1;15586:9;15583:1;15579:17;15576:24;15543:188;15445:1;15442;15439:8;15375:1;15363:9;15360:1;15356:17;15353:24;15320:197;15291:466;15262:1334;15234:1380;15231:2;;;16650:3;16644:4;16637:17;16688:4;16682;16675:18;15231:2;14771:1954;;;;;;;;;;;17316:330;;;17384:1;17369:202;17394:1;17391;17388:8;17369:202;;;17480:4;17472;17469:1;17465:12;17458:5;17454:24;17450:35;17548:4;17541:5;17533:4;17530:1;17526:12;17519:5;17515:24;17502:51;17419:152;17411:4;17408:1;17404:12;17399:17;;17369:202;;;17373:14;17625:4;17622:1;17618:12;17611:5;17601:30;17595:4;17588:44;17351:295;;;;17841:40;:38;:40::i;:::-;1379:16511;1354:33:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1354:33:3;;;;;;;;;;;;;;;;;;;;;;;1868:13063:1;2017:5;2004:19;1997:5;1993:31;2059:5;2046:19;2121:5;2108:19;2101:5;2097:31;2222:5;2209:19;2202:5;2198:31;2319:5;2306:19;2299:5;2295:31;5110:4;5103:5;5096:19;5229:4;5222:5;5215:19;5406:4;5399:5;5392:19;5491:4;5484:5;5477:19;5570:4;5563:5;5556:19;5663:5;5650:19;5643:5;5636:34;5988:4;5981:5;5974:19;6085:4;6078:5;6071:19;6214:8;6201:22;6295:4;6289;6282:18;6351:4;6343:5;6336;6332:17;6326:4;6313:43;6452:4;6445:5;6438:19;6547:4;6540:5;6533:19;6649:12;6636:26;6629:5;6622:41;6737:4;6731;6721:21;6714:5;6707:36;6821:4;6814:5;6807:19;7037:4;7030;7024:11;7020:22;7015:3;7011:32;6984:4;6978:11;6954:107;6931:5;6907:168;7286:4;7279;7273:11;7269:22;7264:3;7260:32;7233:4;7227:11;7203:107;7180:5;7156:168;7461:5;7454;7447:20;7549:5;7542;7535:20;7997:4;7987:8;7983:19;7968:13;7964:39;7951:53;8043:14;8036:5;8032:26;8025:5;8018:41;8118:4;8111:5;8104:19;8182:4;8175:5;8168:19;8356:4;8349;8342:5;8338:16;8332:4;8319:42;8459:14;8453:4;8449:25;8442:5;8435:40;8565:4;8558:5;8551:19;8656:11;8643:25;8636:5;8629:40;8757:4;8751;8741:21;8734:5;8727:36;8879:14;8873:4;8869:25;8862:5;8855:40;9106:4;9099;9093:11;9089:22;9084:3;9080:32;9053:4;9047:11;9023:107;9000:5;8976:168;9355:4;9348;9342:11;9338:22;9333:3;9329:32;9302:4;9296:11;9272:107;9249:5;9225:168;9468:14;9460:4;9450:8;9446:19;9431:13;9427:39;9420:5;9407:76;9599:4;9595:1;9588:5;9584:13;9577:27;10055:14;10048:5;10044:26;10309:14;10302:5;10298:26;10291:5;10284:41;10388:14;10381:5;10377:26;10370:5;10363:41;10522:18;10574:4;10567;10564:1;10560:12;10553:26;10641:5;10634:4;10631:1;10627:12;10620:27;10709:4;10702;10699:1;10695:12;10688:26;10765:4;10758;10755:1;10751:12;10744:26;10882:5;10869:19;10863:4;10856:33;10939:4;10933;10923:21;10916:4;10913:1;10909:12;10902:43;11221:4;11214;11211:1;11207:12;11200:26;11300:4;11293;11290:1;11286:12;11279:26;11431:5;11428:1;11424:13;11536:1;11533;11529:9;11522:4;11512:8;11508:19;11501:38;11658:1;11655;11651:9;11645:4;11641:20;11633:5;11630:1;11626:13;11622:40;11617:45;;11889:4;11874:2250;11902:1;11899;11896:8;11874:2250;;;12130:4;12123;12120:1;12116:12;12112:23;12102:8;12098:38;12085:52;12068:69;;12250:13;12243:4;12233:8;12229:19;12225:39;12212:53;12194:71;;12296:4;12290;12283:18;12484:4;12456;12453:1;12449:12;12442:4;12435:5;12431:16;12427:35;12401:4;12367:139;12608:14;12602:4;12598:25;12595:1;12588:36;12729:4;12722;12719:1;12715:12;12708:26;12882:4;12875;12872:1;12868:12;12864:23;12850:12;12846:42;12833:56;12826:4;12823:1;12819:12;12812:78;12979:4;12973;12963:21;12956:4;12953:1;12949:12;12942:43;13093:14;13087:4;13083:25;13076:4;13073:1;13069:12;13062:47;13351:4;13344;13338:11;13334:22;13329:3;13325:32;13294:4;13288:11;13260:119;13233:4;13230:1;13226:12;13198:199;13639:4;13632;13626:11;13622:22;13617:3;13613:32;13582:4;13576:11;13548:119;13521:4;13518:1;13514:12;13486:199;13819:14;13811:4;13801:8;13797:19;13782:13;13778:39;13771:4;13768:1;13764:12;13751:83;13978:8;13975:1;13971:16;13963:4;13960:1;13956:12;13946:8;13942:27;13935:53;14104:4;14100:1;14094:8;14090:19;14087:1;14083:27;14078:32;;11919:4;11916:1;11912:12;11907:17;;11874:2250;;;11878:17;14498:4;14487:8;14484:1;14480:16;14476:27;14466:8;14459:45;14641:18;14638:1;14634:26;14723:4;14704:17;14700:28;14680:18;14673:56;14763:5;14760:1;14756:13;14749:5;14742:28;14838:4;14831:5;14824:19;14877:5;14874:1;14870:13;14863:5;14856:28;1354:33:3;;;;:::o"},"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/joinSplitFluid/JoinSplitFluidABIEncoder.sol:JoinSplitFluidABIEncoder":{"abi":"[]","bin":"604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820f7d60840ca7069f5b5769cc78590c84d6e0095594bc81245d9119ef02e1ccd2b0029","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820f7d60840ca7069f5b5769cc78590c84d6e0095594bc81245d9119ef02e1ccd2b0029","srcmap":"1189:13744:1:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24","srcmap-runtime":"1189:13744:1:-;;;;;;;;"},"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/interfaces/JoinSplitFluidInterface.sol:JoinSplitFluidInterface":{"abi":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256[6]\"}],\"name\":\"validateJoinSplitFluid\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"EIP712_DOMAIN_HASH\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","bin":"608060405234801561001057600080fd5b5060405160200180807f454950373132446f6d61696e2800000000000000000000000000000000000000815250600d01807f737472696e67206e616d652c0000000000000000000000000000000000000000815250600c01807f737472696e672076657273696f6e2c0000000000000000000000000000000000815250600f01807f6164647265737320766572696679696e67436f6e747261637400000000000000815250601901807f29000000000000000000000000000000000000000000000000000000000000008152506001019050604051602081830303815290604052805190602001206040805190810160405280601981526020017f415a5445435f43525950544f4752415048595f454e47494e4500000000000000815250805190602001206040805190810160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152508051906020012030604051602001808581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001945050505050604051602081830303815290604052805190602001206000819055506101e2806101ef6000396000f3fe60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063482b03a614610051578063e306f7791461017b575b600080fd5b34801561005d57600080fd5b50610100600480360361010081101561007557600080fd5b810190808035906020019064010000000081111561009257600080fd5b8201836020820111156100a457600080fd5b803590602001918460018302840111640100000000831117156100c657600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908060c0019091929192905050506101a6565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610140578082015181840152602081019050610125565b50505050905090810190601f16801561016d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018757600080fd5b506101906101b0565b6040518082815260200191505060405180910390f35b6060949350505050565b6000548156fea165627a7a7230582093c619b8d90910973f201464022795eee37df54458ca4731fac2cd8c7e3b17940029","bin-runtime":"60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063482b03a614610051578063e306f7791461017b575b600080fd5b34801561005d57600080fd5b50610100600480360361010081101561007557600080fd5b810190808035906020019064010000000081111561009257600080fd5b8201836020820111156100a457600080fd5b803590602001918460018302840111640100000000831117156100c657600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908060c0019091929192905050506101a6565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610140578082015181840152602081019050610125565b50505050905090810190601f16801561016d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018757600080fd5b506101906101b0565b6040518082815260200191505060405180910390f35b6060949350505050565b6000548156fea165627a7a7230582093c619b8d90910973f201464022795eee37df54458ca4731fac2cd8c7e3b17940029","srcmap":"797:415:2:-;;;905:23;8:9:-1;5:2;;;30:1;27;20:12;5:2;905:23:2;1086:160:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1086:160:3;;;1076:171;;;;;;1558:18;;;;;;;;;;;;;;;;;;1542:36;;;;;;1608:21;;;;;;;;;;;;;;;;;;1592:39;;;;;;1653:4;1469:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1469:199:3;;;1459:210;;;;;;1438:18;:231;;;;797:415:2;;;;;;","srcmap-runtime":"797:415:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;934:276;;8:9:-1;5:2;;;30:1;27;20:12;5:2;934:276:2;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;934:276:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;934:276:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;934:276:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;934:276:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;934:276:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1354:33:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1354:33:3;;;;;;;;;;;;;;;;;;;;;;;934:276:2;1145:12;934:276;;;;;;:::o;1354:33:3:-;;;;:::o"},"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/libs/LibEIP712.sol:LibEIP712":{"abi":"[{\"constant\":true,\"inputs\":[],\"name\":\"EIP712_DOMAIN_HASH\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","bin":"608060405234801561001057600080fd5b5060405160200180807f454950373132446f6d61696e2800000000000000000000000000000000000000815250600d01807f737472696e67206e616d652c0000000000000000000000000000000000000000815250600c01807f737472696e672076657273696f6e2c0000000000000000000000000000000000815250600f01807f6164647265737320766572696679696e67436f6e747261637400000000000000815250601901807f29000000000000000000000000000000000000000000000000000000000000008152506001019050604051602081830303815290604052805190602001206040805190810160405280601981526020017f415a5445435f43525950544f4752415048595f454e47494e4500000000000000815250805190602001206040805190810160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152508051906020012030604051602001808581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405160208183030381529060405280519060200120600081905550609e806101ee6000396000f3fe608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063e306f779146044575b600080fd5b348015604f57600080fd5b506056606c565b6040518082815260200191505060405180910390f35b6000548156fea165627a7a7230582047bb0985a2592cc3c081780a7fd16a104d82752e89f1ec98c10fd8eca91322780029","bin-runtime":"608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063e306f779146044575b600080fd5b348015604f57600080fd5b506056606c565b6040518082815260200191505060405180910390f35b6000548156fea165627a7a7230582047bb0985a2592cc3c081780a7fd16a104d82752e89f1ec98c10fd8eca91322780029","srcmap":"730:5623:3:-;;;1394:282;8:9:-1;5:2;;;30:1;27;20:12;5:2;1394:282:3;1086:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1086:160:3;;;1076:171;;;;;;1558:18;;;;;;;;;;;;;;;;;;1542:36;;;;;;1608:21;;;;;;;;;;;;;;;;;;1592:39;;;;;;1653:4;1469:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1469:199:3;;;1459:210;;;;;;1438:18;:231;;;;730:5623;;;;;;","srcmap-runtime":"730:5623:3:-;;;;;;;;;;;;;;;;;;;;;;;;1354:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1354:33:3;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"}},"sourceList":["/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/joinSplitFluid/JoinSplitFluid.sol","/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/joinSplitFluid/JoinSplitFluidABIEncoder.sol","/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/interfaces/JoinSplitFluidInterface.sol","/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/libs/LibEIP712.sol"],"sources":{"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/joinSplitFluid/JoinSplitFluid.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/joinSplitFluid/JoinSplitFluid.sol","exportedSymbols":{"JoinSplitFluid":[17]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0","<","0.6",".0"]},"id":1,"name":"PragmaDirective","src":"0:31:0"},{"attributes":{"SourceUnit":26,"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/joinSplitFluid/JoinSplitFluidABIEncoder.sol","file":"./JoinSplitFluidABIEncoder.sol","scope":18,"symbolAliases":[null],"unitAlias":""},"id":2,"name":"ImportDirective","src":"33:40:0"},{"attributes":{"SourceUnit":50,"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/interfaces/JoinSplitFluidInterface.sol","file":"../../../interfaces/JoinSplitFluidInterface.sol","scope":18,"symbolAliases":[null],"unitAlias":""},"id":3,"name":"ImportDirective","src":"74:57:0"},{"attributes":{"SourceUnit":152,"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/libs/LibEIP712.sol","file":"../../../libs/LibEIP712.sol","scope":18,"symbolAliases":[null],"unitAlias":""},"id":4,"name":"ImportDirective","src":"132:37:0"},{"attributes":{"contractDependencies":[151],"contractKind":"contract","documentation":"@title JoinSplitFluid\n@author AZTEC\n@dev Library to validate AZTEC JoinSplitFluid zero-knowledge proofs\nDon't include this as an internal library. This contract uses a static memory table to cache\nelliptic curve primitives and hashes.\nCalling this internally from another function will lead to memory mutation and undefined behaviour.\nThe intended use case is to call this externally via `staticcall`.\nExternal calls to OptimizedAZTEC can be treated as pure functions as this contract contains no\nstorage and makes no external calls (other than to precompiles)\n\n * Copyright 2020 Spilsbury Holdings Ltd \n * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \"License\");\nyou may not use this file except in compliance with the License.\n * This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n * You should have received a copy of the GNU Lesser General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.*","fullyImplemented":true,"linearizedBaseContracts":[17,151],"name":"JoinSplitFluid","scope":18},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"LibEIP712","referencedDeclaration":151,"type":"contract LibEIP712"},"id":5,"name":"UserDefinedTypeName","src":"1406:9:0"}],"id":6,"name":"InheritanceSpecifier","src":"1406:9:0"},{"attributes":{"documentation":"@dev AZTEC will take any transaction sent to it and attempt to validate a zero knowledge proof.\nIf the proof is not valid, the transaction throws.\n@notice See AZTECInterface for how method calls should be constructed.\n'Cost' of raw elliptic curve primitives for a transaction:\n260,700 gas + (124,500 * number of input notes) + (167,600 * number of output notes).\nFor a basic 'JoinSplitFluid' with 2 inputs and 2 outputs = 844,900 gas.\nAZTEC is written in YUL to enable manual memory management and for other efficiency savings.*","implemented":true,"isConstructor":false,"kind":"fallback","modifiers":[null],"name":"","scope":17,"stateMutability":"payable","superFunction":null,"visibility":"external"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":7,"name":"ParameterList","src":"2024:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":8,"name":"ParameterList","src":"2044:0:0"},{"children":[{"attributes":{"externalReferences":[null],"operations":"{\n    validateJoinSplitFluid()\n    function validateJoinSplitFluid()\n    {\n        mstore(0x80, calldataload(0x44))\n        mstore(0xa0, calldataload(0x64))\n        let notes := add(0x104, calldataload(0x144))\n        let m := 1\n        let n := calldataload(notes)\n        let gen_order := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001\n        let challenge := mod(calldataload(0x124), gen_order)\n        if gt(m, n)\n        {\n            mstore(0x00, 404)\n            revert(0x00, 0x20)\n        }\n        if eq(m, n)\n        {\n            mstore(0x00, 404)\n            revert(0x00, 0x20)\n        }\n        let kn := 0\n        mstore(0x2a0, calldataload(0x24))\n        mstore(0x2c0, 0)\n        mstore(0x2e0, m)\n        hashCommitments(notes, n)\n        let b := add(0x300, mul(n, 0x80))\n        let x := 1\n        for {\n            let i := 0\n        }\n        lt(i, n)\n        {\n            i := add(i, 0x01)\n        }\n        {\n            let noteIndex := add(add(notes, 0x20), mul(i, 0xc0))\n            let k\n            let a := calldataload(add(noteIndex, 0x20))\n            let c := challenge\n            switch eq(add(i, 0x01), n)\n            case 1 {\n                k := kn\n            }\n            case 0 {\n                k := calldataload(noteIndex)\n            }\n            validateCommitment(noteIndex, k, a)\n            x := mulmod(x, mload(0x00), gen_order)\n            switch gt(add(i, 0x01), m)\n            case 1 {\n                kn := addmod(kn, sub(gen_order, k), gen_order)\n                k := mulmod(k, x, gen_order)\n                a := mulmod(a, x, gen_order)\n                c := mulmod(challenge, x, gen_order)\n            }\n            case 0 {\n                kn := addmod(kn, k, gen_order)\n            }\n            calldatacopy(0xe0, add(noteIndex, 0x80), 0x40)\n            calldatacopy(0x20, add(noteIndex, 0x40), 0x40)\n            mstore(0x120, sub(gen_order, c))\n            mstore(0x60, k)\n            mstore(0xc0, a)\n            let result := staticcall(gas(), 7, 0xe0, 0x60, 0x1a0, 0x40)\n            result := and(result, staticcall(gas(), 7, 0x20, 0x60, 0x120, 0x40))\n            result := and(result, staticcall(gas(), 7, 0x80, 0x60, 0x160, 0x40))\n            result := and(result, staticcall(gas(), 6, 0x120, 0x80, 0x160, 0x40))\n            result := and(result, staticcall(gas(), 6, 0x160, 0x80, b, 0x40))\n            if eq(i, m)\n            {\n                mstore(0x260, mload(0x20))\n                mstore(0x280, mload(0x40))\n                mstore(0x1e0, mload(0xe0))\n                mstore(0x200, sub(0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47, mload(0x100)))\n            }\n            if gt(i, m)\n            {\n                mstore(0x60, c)\n                result := and(result, staticcall(gas(), 7, 0x20, 0x60, 0x220, 0x40))\n                result := and(result, staticcall(gas(), 6, 0x220, 0x80, 0x260, 0x40))\n                result := and(result, staticcall(gas(), 6, 0x1a0, 0x80, 0x1e0, 0x40))\n            }\n            if iszero(result)\n            {\n                mstore(0x00, 400)\n                revert(0x00, 0x20)\n            }\n            b := add(b, 0x40)\n        }\n        if lt(m, n)\n        {\n            validatePairing(0x84)\n        }\n        let expected := mod(keccak256(0x2a0, sub(b, 0x2a0)), gen_order)\n        if iszero(eq(expected, challenge))\n        {\n            mstore(0x00, 404)\n            revert(0x00, 0x20)\n        }\n    }\n    function validatePairing(t2)\n    {\n        let field_order := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n        let t2_x_1 := calldataload(t2)\n        let t2_x_2 := calldataload(add(t2, 0x20))\n        let t2_y_1 := calldataload(add(t2, 0x40))\n        let t2_y_2 := calldataload(add(t2, 0x60))\n        if or(or(or(or(or(or(or(iszero(t2_x_1), iszero(t2_x_2)), iszero(t2_y_1)), iszero(t2_y_2)), eq(t2_x_1, 0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed)), eq(t2_x_2, 0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2)), eq(t2_y_1, 0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa)), eq(t2_y_2, 0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n        mstore(0x20, mload(0x1e0))\n        mstore(0x40, mload(0x200))\n        mstore(0x80, 0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed)\n        mstore(0x60, 0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2)\n        mstore(0xc0, 0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa)\n        mstore(0xa0, 0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b)\n        mstore(0xe0, mload(0x260))\n        mstore(0x100, mload(0x280))\n        mstore(0x140, t2_x_1)\n        mstore(0x120, t2_x_2)\n        mstore(0x180, t2_y_1)\n        mstore(0x160, t2_y_2)\n        let success := staticcall(gas(), 8, 0x20, 0x180, 0x20, 0x20)\n        if or(iszero(success), iszero(mload(0x20)))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n    }\n    function validateCommitment(note, k, a)\n    {\n        let gen_order := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001\n        let field_order := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n        let gammaX := calldataload(add(note, 0x40))\n        let gammaY := calldataload(add(note, 0x60))\n        let sigmaX := calldataload(add(note, 0x80))\n        let sigmaY := calldataload(add(note, 0xa0))\n        if iszero(and(and(and(eq(mod(a, gen_order), a), gt(a, 1)), and(eq(mod(k, gen_order), k), gt(k, 1))), and(eq(addmod(mulmod(mulmod(sigmaX, sigmaX, field_order), sigmaX, field_order), 3, field_order), mulmod(sigmaY, sigmaY, field_order)), eq(addmod(mulmod(mulmod(gammaX, gammaX, field_order), gammaX, field_order), 3, field_order), mulmod(gammaY, gammaY, field_order)))))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n    }\n    function hashCommitments(notes, n)\n    {\n        for {\n            let i := 0\n        }\n        lt(i, n)\n        {\n            i := add(i, 0x01)\n        }\n        {\n            let index := add(add(notes, mul(i, 0xc0)), 0x60)\n            calldatacopy(add(0x300, mul(i, 0x80)), index, 0x80)\n        }\n        mstore(0x00, keccak256(0x300, mul(n, 0x80)))\n    }\n}"},"children":[],"id":9,"name":"InlineAssembly","src":"2054:15811:0"},{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"encodeAndExit","referencedDeclaration":24,"type":"function () pure"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":25,"type":"type(library JoinSplitFluidABIEncoder)","value":"JoinSplitFluidABIEncoder"},"id":10,"name":"Identifier","src":"17841:24:0"}],"id":12,"name":"MemberAccess","src":"17841:38:0"}],"id":13,"name":"FunctionCall","src":"17841:40:0"}],"id":14,"name":"ExpressionStatement","src":"17841:40:0"}],"id":15,"name":"Block","src":"2044:15844:0"}],"id":16,"name":"FunctionDefinition","src":"2016:15872:0"}],"id":17,"name":"ContractDefinition","src":"1379:16511:0"}],"id":18,"name":"SourceUnit","src":"0:17891:0"}},"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/joinSplitFluid/JoinSplitFluidABIEncoder.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/joinSplitFluid/JoinSplitFluidABIEncoder.sol","exportedSymbols":{"JoinSplitFluidABIEncoder":[25]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0","<","0.6",".0"]},"id":19,"name":"PragmaDirective","src":"0:31:1"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@title JoinSplitFluidABIEncoder\n@author AZTEC\n@dev\nDon't include this as an internal library. This contract uses a static memory table to cache\nelliptic curve primitives and hashes.\nCalling this internally from another function will lead to memory mutation and undefined behaviour.\nThe intended use case is to call this externally via `staticcall`.\nExternal calls to OptimizedAZTEC can be treated as pure functions as this contract contains no\nstorage and makes no external calls (other than to precompiles)\n\n * Copyright 2020 Spilsbury Holdings Ltd \n * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \"License\");\nyou may not use this file except in compliance with the License.\n * This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n * You should have received a copy of the GNU Lesser General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.*","fullyImplemented":true,"linearizedBaseContracts":[25],"name":"JoinSplitFluidABIEncoder","scope":26},"children":[{"attributes":{"documentation":"Calldata map\n0x04:0x24      = calldata location of proofData byte array\n0x24:0x44      = message sender\n0x44:0x64      = h_x\n0x64:0x84      = h_y\n0x84:0xa4      = t2_x0\n0xa4:0xc4      = t2_x1\n0xc4:0xe4      = t2_y0\n0xe4:0x104     = t2_y1\n0x104:0x124    = length of proofData byte array\n0x124:0x144    = challenge\n0x144:0x164    = offset in byte array to notes\n0x164:0x184    = offset in byte array to inputOwners\n0x184:0x1a4    = offset in byte array to outputOwners\n0x1a4:0x1c4    = offset in byte array to metadata","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"encodeAndExit","scope":25,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":20,"name":"ParameterList","src":"1890:2:1"},{"attributes":{"parameters":[null]},"children":[],"id":21,"name":"ParameterList","src":"1907:0:1"},{"children":[{"attributes":{"externalReferences":[null],"operations":"{\n    let notes := add(0x104, calldataload(0x144))\n    let n := calldataload(notes)\n    let inputOwners := add(0x124, calldataload(0x164))\n    let outputOwners := add(0x124, calldataload(0x184))\n    let metadata := add(0x144, calldataload(0x1a4))\n    mstore(0x1a0, 0x02)\n    mstore(0x1c0, 0x80)\n    mstore(0x220, 0xc0)\n    mstore(0x260, 0x00)\n    mstore(0x280, 0x00)\n    mstore(0x2a0, calldataload(0x124))\n    mstore(0x2e0, 0x01)\n    mstore(0x300, 0x60)\n    let metadataIndex := calldataload(metadata)\n    mstore(0x00, 0x01)\n    calldatacopy(0x20, add(notes, 0x120), 0x80)\n    mstore(0x320, 0xc0)\n    mstore(0x340, 0x01)\n    mstore(0x360, calldataload(outputOwners))\n    mstore(0x380, keccak256(0x00, 0xa0))\n    mstore(0x3a0, 0x40)\n    mstore(0x3c0, or(mload(0x20), shl(255, and(mload(0x40), 0x01))))\n    mstore(0x3e0, or(mload(0x60), shl(255, and(mload(0x80), 0x01))))\n    mstore(0x240, 0x200)\n    mstore(0x2c0, 0x120)\n    let metadataLength := calldataload(add(metadataIndex, sub(metadata, 0x40)))\n    mstore(0x400, add(0x120, metadataLength))\n    mstore(0x420, 0x01)\n    mstore(0x440, 0x60)\n    calldatacopy(0x20, add(notes, 0x60), 0x80)\n    mstore(0x460, add(0xc0, metadataLength))\n    mstore(0x480, 0x01)\n    mstore(0x4a0, calldataload(inputOwners))\n    mstore(0x4c0, keccak256(0x00, 0xa0))\n    mstore(0x4e0, add(0x40, metadataLength))\n    mstore(0x500, or(mload(0x20), shl(255, and(mload(0x40), 0x01))))\n    mstore(0x520, or(mload(0x60), shl(255, and(mload(0x80), 0x01))))\n    calldatacopy(0x540, add(metadataIndex, sub(metadata, 0x20)), metadataLength)\n    mstore(add(0x440, 0), 0x60)\n    let startOfProofOutput := add(0x540, metadataLength)\n    mstore(0x200, add(0x320, metadataLength))\n    mstore(0x1e0, add(0x3c0, metadataLength))\n    let s := startOfProofOutput\n    mstore(add(s, 0x20), 0xc0)\n    mstore(add(s, 0x40), 0x100)\n    mstore(add(s, 0x60), 0x00)\n    mstore(add(s, 0x80), 0x00)\n    mstore(0x20, calldataload(0x124))\n    mstore(add(s, 0xa0), keccak256(0x20, 0x20))\n    mstore(add(s, 0xc0), 0x20)\n    mstore(add(s, 0xe0), 0x00)\n    let notesPtr := add(s, 0x100)\n    mstore(add(notesPtr, 0x20), sub(n, 2))\n    s := add(add(s, 0x140), mul(0x20, sub(n, 2)))\n    for {\n        let i := 0x02\n    }\n    lt(i, n)\n    {\n        i := add(i, 0x01)\n    }\n    {\n        metadataIndex := calldataload(add(metadata, mul(sub(i, 0x01), 0x20)))\n        metadataLength := calldataload(add(sub(metadata, 0x40), metadataIndex))\n        mstore(0x00, 0x01)\n        calldatacopy(0x20, add(add(notes, 0x60), mul(i, 0xc0)), 0x80)\n        mstore(s, add(0xc0, metadataLength))\n        mstore(add(s, 0x20), 0x01)\n        mstore(add(s, 0x40), calldataload(add(outputOwners, mul(sub(i, 0x01), 0x20))))\n        mstore(add(s, 0x60), keccak256(0x00, 0xa0))\n        mstore(add(s, 0x80), add(0x40, metadataLength))\n        mstore(add(s, 0xa0), or(mload(0x20), shl(255, and(mload(0x40), 0x01))))\n        mstore(add(s, 0xc0), or(mload(0x60), shl(255, and(mload(0x80), 0x01))))\n        calldatacopy(add(s, 0xe0), add(metadataIndex, sub(metadata, 0x20)), metadataLength)\n        mstore(add(notesPtr, mul(i, 0x20)), sub(s, notesPtr))\n        s := add(s, add(mload(s), 0x20))\n    }\n    mstore(notesPtr, sub(sub(s, notesPtr), 0x20))\n    let proofOutputLength := sub(s, startOfProofOutput)\n    mstore(startOfProofOutput, sub(proofOutputLength, 0x20))\n    mstore(0x180, sub(s, 0x1a0))\n    mstore(0x160, 0x20)\n    return(0x160, sub(s, 0x160))\n}"},"children":[],"id":22,"name":"InlineAssembly","src":"1917:13014:1"}],"id":23,"name":"Block","src":"1907:13024:1"}],"id":24,"name":"FunctionDefinition","src":"1868:13063:1"}],"id":25,"name":"ContractDefinition","src":"1189:13744:1"}],"id":26,"name":"SourceUnit","src":"0:14934:1"}},"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/interfaces/JoinSplitFluidInterface.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/interfaces/JoinSplitFluidInterface.sol","exportedSymbols":{"JoinSplitFluidInterface":[49]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0","<","0.6",".0"]},"id":27,"name":"PragmaDirective","src":"0:31:2"},{"attributes":{"SourceUnit":152,"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/libs/LibEIP712.sol","file":"../libs/LibEIP712.sol","scope":50,"symbolAliases":[null],"unitAlias":""},"id":28,"name":"ImportDirective","src":"33:31:2"},{"attributes":{"contractDependencies":[151],"contractKind":"contract","documentation":"@title JoinSplitFluidInterface\n@author AZTEC\n@dev Interface for the JoinSplitFluid validator contract\n\n * Copyright 2020 Spilsbury Holdings Ltd \n * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \"License\");\nyou may not use this file except in compliance with the License.\n * This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n * You should have received a copy of the GNU Lesser General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.*","fullyImplemented":true,"linearizedBaseContracts":[49,151],"name":"JoinSplitFluidInterface","scope":50},"children":[{"attributes":{"arguments":null},"children":[{"attributes":{"contractScope":null,"name":"LibEIP712","referencedDeclaration":151,"type":"contract LibEIP712"},"id":29,"name":"UserDefinedTypeName","src":"833:9:2"}],"id":30,"name":"InheritanceSpecifier","src":"833:9:2"},{"attributes":{"documentation":null,"implemented":true,"isConstructor":true,"kind":"constructor","modifiers":[null],"name":"","scope":49,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":31,"name":"ParameterList","src":"916:2:2"},{"attributes":{"parameters":[null]},"children":[],"id":32,"name":"ParameterList","src":"926:0:2"},{"attributes":{"statements":[null]},"children":[],"id":33,"name":"Block","src":"926:2:2"}],"id":34,"name":"FunctionDefinition","src":"905:23:2"},{"attributes":{"documentation":null,"implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"validateJoinSplitFluid","scope":49,"stateMutability":"pure","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"","scope":48,"stateVariable":false,"storageLocation":"calldata","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":35,"name":"ElementaryTypeName","src":"975:5:2"}],"id":36,"name":"VariableDeclaration","src":"975:14:2"},{"attributes":{"constant":false,"name":"","scope":48,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":37,"name":"ElementaryTypeName","src":"1013:7:2"}],"id":38,"name":"VariableDeclaration","src":"1013:7:2"},{"attributes":{"constant":false,"name":"","scope":48,"stateVariable":false,"storageLocation":"calldata","type":"uint256[6]","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"uint256[6]"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":39,"name":"ElementaryTypeName","src":"1048:4:2"},{"attributes":{"argumentTypes":null,"hexvalue":"36","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":null,"value":"6"},"id":40,"name":"Literal","src":"1053:1:2"}],"id":41,"name":"ArrayTypeName","src":"1048:7:2"}],"id":42,"name":"VariableDeclaration","src":"1048:16:2"}],"id":43,"name":"ParameterList","src":"965:132:2"},{"children":[{"attributes":{"constant":false,"name":"","scope":48,"stateVariable":false,"storageLocation":"memory","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":44,"name":"ElementaryTypeName","src":"1145:5:2"}],"id":45,"name":"VariableDeclaration","src":"1145:12:2"}],"id":46,"name":"ParameterList","src":"1144:14:2"},{"attributes":{"statements":[null]},"children":[],"id":47,"name":"Block","src":"1208:2:2"}],"id":48,"name":"FunctionDefinition","src":"934:276:2"}],"id":49,"name":"ContractDefinition","src":"797:415:2"}],"id":50,"name":"SourceUnit","src":"0:1213:2"}},"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/libs/LibEIP712.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/libs/LibEIP712.sol","exportedSymbols":{"LibEIP712":[151]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0","<","0.6",".0"]},"id":51,"name":"PragmaDirective","src":"0:31:3"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title Library of EIP712 utility constants and functions\n@author AZTEC\n * Copyright 2020 Spilsbury Holdings Ltd \n * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \"License\");\nyou may not use this file except in compliance with the License.\n * This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n * You should have received a copy of the GNU Lesser General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.*","fullyImplemented":true,"linearizedBaseContracts":[151],"name":"LibEIP712","scope":152},"children":[{"attributes":{"constant":true,"name":"EIP712_DOMAIN_NAME","scope":151,"stateVariable":true,"storageLocation":"default","type":"string","visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":52,"name":"ElementaryTypeName","src":"788:6:3"},{"attributes":{"argumentTypes":null,"hexvalue":"415a5445435f43525950544f4752415048595f454e47494e45","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"AZTEC_CRYPTOGRAPHY_ENGINE\"","value":"AZTEC_CRYPTOGRAPHY_ENGINE"},"id":53,"name":"Literal","src":"834:27:3"}],"id":54,"name":"VariableDeclaration","src":"788:73:3"},{"attributes":{"constant":true,"name":"EIP712_DOMAIN_VERSION","scope":151,"stateVariable":true,"storageLocation":"default","type":"string","visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":55,"name":"ElementaryTypeName","src":"903:6:3"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"1\"","value":"1"},"id":56,"name":"Literal","src":"952:3:3"}],"id":57,"name":"VariableDeclaration","src":"903:52:3"},{"attributes":{"constant":true,"name":"EIP712_DOMAIN_SEPARATOR_SCHEMA_HASH","scope":151,"stateVariable":true,"storageLocation":"default","type":"bytes32","visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":58,"name":"ElementaryTypeName","src":"1012:7:3"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[null],"referencedDeclaration":160,"type":"function (bytes memory) pure returns (bytes32)","value":"keccak256"},"id":59,"name":"Identifier","src":"1076:9:3"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_de06c25f21a371a1bc92887b399d179e16db7e78ff9780730d4f2f1217f0227a","typeString":"literal_string \"EIP712Domain(\""},{"typeIdentifier":"t_stringliteral_0376df606842aeeddf95ba5db6e827bf40e254b68db9531357ede6679d404597","typeString":"literal_string \"string name,\""},{"typeIdentifier":"t_stringliteral_59f8a695163fe72b45680abd680645bb66c8df0e236a50c4f8a610af2d5a606c","typeString":"literal_string \"string version,\""},{"typeIdentifier":"t_stringliteral_40ab939a78baf41674810042aff4b66e1c8507c1fbb0af0c7e28dc4250f2dd9b","typeString":"literal_string \"address verifyingContract\""},{"typeIdentifier":"t_stringliteral_59d76dc3b33357eda30db1508968fbb18f21b9cd2442f1559b20154ddaa4d7ed","typeString":"literal_string \")\""}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"encodePacked","referencedDeclaration":null,"type":"function () pure returns (bytes memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":153,"type":"abi","value":"abi"},"id":60,"name":"Identifier","src":"1086:3:3"}],"id":61,"name":"MemberAccess","src":"1086:16:3"},{"attributes":{"argumentTypes":null,"hexvalue":"454950373132446f6d61696e28","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"EIP712Domain(\"","value":"EIP712Domain("},"id":62,"name":"Literal","src":"1112:15:3"},{"attributes":{"argumentTypes":null,"hexvalue":"737472696e67206e616d652c","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"string name,\"","value":"string name,"},"id":63,"name":"Literal","src":"1141:14:3"},{"attributes":{"argumentTypes":null,"hexvalue":"737472696e672076657273696f6e2c","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"string version,\"","value":"string version,"},"id":64,"name":"Literal","src":"1169:17:3"},{"attributes":{"argumentTypes":null,"hexvalue":"6164647265737320766572696679696e67436f6e7472616374","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"address verifyingContract\"","value":"address verifyingContract"},"id":65,"name":"Literal","src":"1200:27:3"},{"attributes":{"argumentTypes":null,"hexvalue":"29","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \")\"","value":")"},"id":66,"name":"Literal","src":"1237:3:3"}],"id":67,"name":"FunctionCall","src":"1086:160:3"}],"id":68,"name":"FunctionCall","src":"1076:171:3"}],"id":69,"name":"VariableDeclaration","src":"1012:235:3"},{"attributes":{"constant":false,"name":"EIP712_DOMAIN_HASH","scope":151,"stateVariable":true,"storageLocation":"default","type":"bytes32","value":null,"visibility":"public"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":70,"name":"ElementaryTypeName","src":"1354:7:3"}],"id":71,"name":"VariableDeclaration","src":"1354:33:3"},{"attributes":{"documentation":null,"implemented":true,"isConstructor":true,"kind":"constructor","modifiers":[null],"name":"","scope":151,"stateMutability":"nonpayable","superFunction":null,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":72,"name":"ParameterList","src":"1406:2:3"},{"attributes":{"parameters":[null]},"children":[],"id":73,"name":"ParameterList","src":"1428:0:3"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":71,"type":"bytes32","value":"EIP712_DOMAIN_HASH"},"id":74,"name":"Identifier","src":"1438:18:3"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[null],"referencedDeclaration":160,"type":"function (bytes memory) pure returns (bytes32)","value":"keccak256"},"id":75,"name":"Identifier","src":"1459:9:3"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"encode","referencedDeclaration":null,"type":"function () pure returns (bytes memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":153,"type":"abi","value":"abi"},"id":76,"name":"Identifier","src":"1469:3:3"}],"id":77,"name":"MemberAccess","src":"1469:10:3"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":69,"type":"bytes32","value":"EIP712_DOMAIN_SEPARATOR_SCHEMA_HASH"},"id":78,"name":"Identifier","src":"1493:35:3"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[null],"referencedDeclaration":160,"type":"function (bytes memory) pure returns (bytes32)","value":"keccak256"},"id":79,"name":"Identifier","src":"1542:9:3"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes memory","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_string_memory","typeString":"string memory"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(bytes storage pointer)","value":"bytes"},"id":80,"name":"ElementaryTypeNameExpression","src":"1552:5:3"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":54,"type":"string memory","value":"EIP712_DOMAIN_NAME"},"id":81,"name":"Identifier","src":"1558:18:3"}],"id":82,"name":"FunctionCall","src":"1552:25:3"}],"id":83,"name":"FunctionCall","src":"1542:36:3"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[null],"referencedDeclaration":160,"type":"function (bytes memory) pure returns (bytes32)","value":"keccak256"},"id":84,"name":"Identifier","src":"1592:9:3"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes memory","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_string_memory","typeString":"string memory"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(bytes storage pointer)","value":"bytes"},"id":85,"name":"ElementaryTypeNameExpression","src":"1602:5:3"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":57,"type":"string memory","value":"EIP712_DOMAIN_VERSION"},"id":86,"name":"Identifier","src":"1608:21:3"}],"id":87,"name":"FunctionCall","src":"1602:28:3"}],"id":88,"name":"FunctionCall","src":"1592:39:3"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_LibEIP712_$151","typeString":"contract LibEIP712"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":89,"name":"ElementaryTypeNameExpression","src":"1645:7:3"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":181,"type":"contract LibEIP712","value":"this"},"id":90,"name":"Identifier","src":"1653:4:3"}],"id":91,"name":"FunctionCall","src":"1645:13:3"}],"id":92,"name":"FunctionCall","src":"1469:199:3"}],"id":93,"name":"FunctionCall","src":"1459:210:3"}],"id":94,"name":"Assignment","src":"1438:231:3"}],"id":95,"name":"ExpressionStatement","src":"1438:231:3"}],"id":96,"name":"Block","src":"1428:248:3"}],"id":97,"name":"FunctionDefinition","src":"1394:282:3"},{"attributes":{"documentation":"@dev Calculates EIP712 encoding for a hash struct in this EIP712 Domain.\n @param _hashStruct The EIP712 hash struct.\n @return EIP712 hash applied to this EIP712 Domain.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"hashEIP712Message","scope":151,"stateMutability":"view","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_hashStruct","scope":110,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":98,"name":"ElementaryTypeName","src":"1900:7:3"}],"id":99,"name":"VariableDeclaration","src":"1900:19:3"}],"id":100,"name":"ParameterList","src":"1899:21:3"},{"children":[{"attributes":{"constant":false,"name":"_result","scope":110,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":101,"name":"ElementaryTypeName","src":"1968:7:3"}],"id":102,"name":"VariableDeclaration","src":"1968:15:3"}],"id":103,"name":"ParameterList","src":"1967:17:3"},{"children":[{"attributes":{"assignments":[105]},"children":[{"attributes":{"constant":false,"name":"eip712DomainHash","scope":109,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":104,"name":"ElementaryTypeName","src":"1999:7:3"}],"id":105,"name":"VariableDeclaration","src":"1999:24:3"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":71,"type":"bytes32","value":"EIP712_DOMAIN_HASH"},"id":106,"name":"Identifier","src":"2026:18:3"}],"id":107,"name":"VariableDeclarationStatement","src":"1999:45:3"},{"attributes":{"externalReferences":[{"_hashStruct":{"declaration":99,"isOffset":false,"isSlot":false,"src":"2733:11:3","valueSize":1}},{"eip712DomainHash":{"declaration":105,"isOffset":false,"isSlot":false,"src":"2664:16:3","valueSize":1}},{"_result":{"declaration":102,"isOffset":false,"isSlot":false,"src":"2785:7:3","valueSize":1}}],"operations":"{\n    let memPtr := mload(0x40)\n    mstore(0x00, 0x1901)\n    mstore(0x20, eip712DomainHash)\n    mstore(0x40, _hashStruct)\n    _result := keccak256(0x1e, 0x42)\n    mstore(0x40, memPtr)\n}"},"children":[],"id":108,"name":"InlineAssembly","src":"2251:671:3"}],"id":109,"name":"Block","src":"1989:933:3"}],"id":110,"name":"FunctionDefinition","src":"1873:1049:3"},{"attributes":{"documentation":"@dev Extracts the address of the signer with ECDSA.\n @param _message The EIP712 message.\n @param _signature The ECDSA values, v, r and s.\n @return The address of the message signer.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"recoverSignature","scope":151,"stateMutability":"view","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"_message","scope":150,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":111,"name":"ElementaryTypeName","src":"3174:7:3"}],"id":112,"name":"VariableDeclaration","src":"3174:16:3"},{"attributes":{"constant":false,"name":"_signature","scope":150,"stateVariable":false,"storageLocation":"memory","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":113,"name":"ElementaryTypeName","src":"3200:5:3"}],"id":114,"name":"VariableDeclaration","src":"3200:23:3"}],"id":115,"name":"ParameterList","src":"3164:65:3"},{"children":[{"attributes":{"constant":false,"name":"_signer","scope":150,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":116,"name":"ElementaryTypeName","src":"3253:7:3"}],"id":117,"name":"VariableDeclaration","src":"3253:15:3"}],"id":118,"name":"ParameterList","src":"3252:17:3"},{"children":[{"attributes":{"assignments":[120],"initialValue":null},"children":[{"attributes":{"constant":false,"name":"result","scope":149,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":119,"name":"ElementaryTypeName","src":"3280:4:3"}],"id":120,"name":"VariableDeclaration","src":"3280:11:3"}],"id":121,"name":"VariableDeclarationStatement","src":"3280:11:3"},{"attributes":{"externalReferences":[{"_signature":{"declaration":114,"isOffset":false,"isSlot":false,"src":"5966:10:3","valueSize":1}},{"_signature":{"declaration":114,"isOffset":false,"isSlot":false,"src":"3750:10:3","valueSize":1}},{"_signature":{"declaration":114,"isOffset":false,"isSlot":false,"src":"3825:10:3","valueSize":1}},{"_message":{"declaration":112,"isOffset":false,"isSlot":false,"src":"3837:8:3","valueSize":1}},{"_signature":{"declaration":114,"isOffset":false,"isSlot":false,"src":"4016:10:3","valueSize":1}},{"_signature":{"declaration":114,"isOffset":false,"isSlot":false,"src":"4862:10:3","valueSize":1}},{"_signature":{"declaration":114,"isOffset":false,"isSlot":false,"src":"4970:10:3","valueSize":1}},{"_signature":{"declaration":114,"isOffset":false,"isSlot":false,"src":"4066:10:3","valueSize":1}},{"_signature":{"declaration":114,"isOffset":false,"isSlot":false,"src":"4891:10:3","valueSize":1}},{"_signature":{"declaration":114,"isOffset":false,"isSlot":false,"src":"4999:10:3","valueSize":1}},{"_signature":{"declaration":114,"isOffset":false,"isSlot":false,"src":"5078:10:3","valueSize":1}},{"result":{"declaration":120,"isOffset":false,"isSlot":false,"src":"5112:6:3","valueSize":1}},{"_message":{"declaration":112,"isOffset":false,"isSlot":false,"src":"5838:8:3","valueSize":1}},{"_signature":{"declaration":114,"isOffset":false,"isSlot":false,"src":"5921:10:3","valueSize":1}},{"_signature":{"declaration":114,"isOffset":false,"isSlot":false,"src":"5854:10:3","valueSize":1}},{"_signer":{"declaration":117,"isOffset":false,"isSlot":false,"src":"5904:7:3","valueSize":1}},{"_signature":{"declaration":114,"isOffset":false,"isSlot":false,"src":"5671:10:3","valueSize":1}},{"_signature":{"declaration":114,"isOffset":false,"isSlot":false,"src":"5689:10:3","valueSize":1}}],"operations":"{\n    let byteLength := mload(_signature)\n    mstore(_signature, _message)\n    let v := mload(add(_signature, 0x60))\n    let s := mload(add(_signature, 0x40))\n    v := shr(248, v)\n    mstore(add(_signature, 0x60), mload(add(_signature, 0x40)))\n    mstore(add(_signature, 0x40), mload(add(_signature, 0x20)))\n    mstore(add(_signature, 0x20), v)\n    result := and(and(lt(s, 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0), and(eq(byteLength, 0x41), or(eq(v, 27), eq(v, 28)))), staticcall(gas(), 0x01, _signature, 0x80, _signature, 0x20))\n    switch eq(_message, mload(_signature))\n    case 0 {\n        _signer := mload(_signature)\n    }\n    mstore(_signature, byteLength)\n}"},"children":[],"id":122,"name":"InlineAssembly","src":"3301:2857:3"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!","prefix":true,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&&","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":120,"type":"bool","value":"result"},"id":123,"name":"Identifier","src":"6162:6:3"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":117,"type":"address","value":"_signer"},"id":124,"name":"Identifier","src":"6173:7:3"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address payable","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":125,"name":"ElementaryTypeNameExpression","src":"6184:7:3"},{"attributes":{"argumentTypes":null,"hexvalue":"307830","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0x0"},"id":126,"name":"Literal","src":"6192:3:3"}],"id":127,"name":"FunctionCall","src":"6184:12:3"}],"id":128,"name":"BinaryOperation","src":"6173:23:3"}],"id":129,"name":"TupleExpression","src":"6172:25:3"}],"id":130,"name":"BinaryOperation","src":"6162:35:3"}],"id":131,"name":"TupleExpression","src":"6161:37:3"}],"id":132,"name":"UnaryOperation","src":"6160:38:3"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_05f8c92b33d1fa29155c1f23de8549d54990410da6658c0b5ce6e4d609d3c996","typeString":"literal_string \"signer address cannot be 0\""}],"overloadedDeclarations":[169,170],"referencedDeclaration":170,"type":"function (bool,string memory) pure","value":"require"},"id":133,"name":"Identifier","src":"6214:7:3"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":117,"type":"address","value":"_signer"},"id":134,"name":"Identifier","src":"6222:7:3"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":true,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"address payable","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)","value":"address"},"id":135,"name":"ElementaryTypeNameExpression","src":"6233:7:3"},{"attributes":{"argumentTypes":null,"hexvalue":"307830","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0x0"},"id":136,"name":"Literal","src":"6241:3:3"}],"id":137,"name":"FunctionCall","src":"6233:12:3"}],"id":138,"name":"BinaryOperation","src":"6222:23:3"},{"attributes":{"argumentTypes":null,"hexvalue":"7369676e657220616464726573732063616e6e6f742062652030","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"signer address cannot be 0\"","value":"signer address cannot be 0"},"id":139,"name":"Literal","src":"6247:28:3"}],"id":140,"name":"FunctionCall","src":"6214:62:3"}],"id":141,"name":"ExpressionStatement","src":"6214:62:3"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_01f993c0b1c55cbee85d57cb234411db0766a36e056ee761e91244faf3ad40fa","typeString":"literal_string \"signature recovery failed\""}],"overloadedDeclarations":[169,170],"referencedDeclaration":170,"type":"function (bool,string memory) pure","value":"require"},"id":142,"name":"Identifier","src":"6290:7:3"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":120,"type":"bool","value":"result"},"id":143,"name":"Identifier","src":"6298:6:3"},{"attributes":{"argumentTypes":null,"hexvalue":"7369676e6174757265207265636f76657279206661696c6564","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"signature recovery failed\"","value":"signature recovery failed"},"id":144,"name":"Literal","src":"6306:27:3"}],"id":145,"name":"FunctionCall","src":"6290:44:3"}],"id":146,"name":"ExpressionStatement","src":"6290:44:3"}],"id":147,"name":"Block","src":"6200:145:3"}],"id":148,"name":"IfStatement","src":"6156:189:3"}],"id":149,"name":"Block","src":"3270:3081:3"}],"id":150,"name":"FunctionDefinition","src":"3139:3212:3"}],"id":151,"name":"ContractDefinition","src":"730:5623:3"}],"id":152,"name":"SourceUnit","src":"0:6355:3"}}},"version":"0.5.0+commit.1d4f565a.Linux.g++"}
