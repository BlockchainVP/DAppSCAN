{"contracts":{"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/privateRange/PrivateRange.sol:PrivateRange":{"abi":"[{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"}]","bin":"608060405234801561001057600080fd5b506107ce806100206000396000f3fe608060405234801561001057600080fd5b50610019610023565b606060405261025b565b60443560805260643560a0526101443561010401600260037f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018061012435066024356102a05260006102c05260006102e05261007f83866104e0565b6080830261030001600160005b858110156102265760c081026020890101803560208201358660018511600181146100be57600081146100d4576100d9565b8960c08603358b036101808703350893506100d9565b843593505b506100e5828486610431565b88600051870995508415610106578886840992508886830991508886890990505b60406080850160e037604080850160203780890361012052826060528160c05260406101a0606060e060075afa60406101206060602060075afa8116905060406101606060608060075afa811690506040610160608061012060065afa81169050604088608061016060065afa8116905060008614156101c057602051610260526040516102805260e0516101e052610100517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4703610200525b60008611156101fd578160605260406102206060602060075afa6040610260608061022060065afa60406101e060806101a060065afa1616811690505b8015156102105761019060005260206000fd5b604088019750505050505060018101905061008c565b506102316084610260565b836102a083036102a0200683811415156102515761019460005260206000fd5b5050505050505050565b61042c565b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4781356020830135604084013560608501357f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81147f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa83147f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c285147f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed87148415861588158a15171717171717171561033e5761019060005260206000fd5b6101e051602052610200516040527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6080527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26060527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa60c0527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b60a0526102605160e05261028051610100528361014052826101205281610180528061016052602080610180602060085afa60205115811517156104235761019060005260206000fd5b50505050505050565b6104db565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760408301356060840135608085013560a086013584838409856003878789898a090908148582830986600388868a888909090814166001891189888b06141660018b118b898d061416161615156104d05761019060005260206000fd5b505050505050505050565b61051c565b60005b8281101561050c57606060c08202830101608081608084026103000137506001810190506104e3565b5060808202610300206000525050565b610524610526565b005b610144356101040160036002610164356101240161018435610124016101a4356101440160016101a05260606101c05260c0610200526000610240526000806102605261012435610280526102a0856020820152602086026102e00160005b878110156106555760c0810260208b0101600160005260806040820160203760c083526001602084015260208202880135604084015260a06000206060840152604060808401527f800000000000000000000000000000000000000000000000000000000000000060016060830135160260408201351760a08401527f8000000000000000000000000000000000000000000000000000000000000000600160a0830135160260808201351760c08401528383036020830260408601015260e08301925050600181019050610585565b50602082820303825281810360c00161022052809150868803602083015260208789030260400181019050865b888110156107735760c0810260208b01016020898303028601358060408803013560016000526080604084016020378060c00185526001602086015260208b850302890135604086015260a060002060608601528060400160808601527f8000000000000000000000000000000000000000000000000000000000000000600160405116026020511760a08601527f8000000000000000000000000000000000000000000000000000000000000000600160805116026060511760c08601528060208903830160e087013785850360208c860302604088010152602085510185019450505050600181019050610682565b5060208282030382526102a081038060a0016101e0528061010001610180526020610160528061014001610160f3fea165627a7a72305820542dee0aabf2726de383f4636bd42903250993b63dcc6b40ffa95da32d22dc450029","bin-runtime":"608060405234801561001057600080fd5b50610019610023565b606060405261025b565b60443560805260643560a0526101443561010401600260037f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018061012435066024356102a05260006102c05260006102e05261007f83866104e0565b6080830261030001600160005b858110156102265760c081026020890101803560208201358660018511600181146100be57600081146100d4576100d9565b8960c08603358b036101808703350893506100d9565b843593505b506100e5828486610431565b88600051870995508415610106578886840992508886830991508886890990505b60406080850160e037604080850160203780890361012052826060528160c05260406101a0606060e060075afa60406101206060602060075afa8116905060406101606060608060075afa811690506040610160608061012060065afa81169050604088608061016060065afa8116905060008614156101c057602051610260526040516102805260e0516101e052610100517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4703610200525b60008611156101fd578160605260406102206060602060075afa6040610260608061022060065afa60406101e060806101a060065afa1616811690505b8015156102105761019060005260206000fd5b604088019750505050505060018101905061008c565b506102316084610260565b836102a083036102a0200683811415156102515761019460005260206000fd5b5050505050505050565b61042c565b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4781356020830135604084013560608501357f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81147f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa83147f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c285147f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed87148415861588158a15171717171717171561033e5761019060005260206000fd5b6101e051602052610200516040527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6080527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26060527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa60c0527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b60a0526102605160e05261028051610100528361014052826101205281610180528061016052602080610180602060085afa60205115811517156104235761019060005260206000fd5b50505050505050565b6104db565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760408301356060840135608085013560a086013584838409856003878789898a090908148582830986600388868a888909090814166001891189888b06141660018b118b898d061416161615156104d05761019060005260206000fd5b505050505050505050565b61051c565b60005b8281101561050c57606060c08202830101608081608084026103000137506001810190506104e3565b5060808202610300206000525050565b610524610526565b005b610144356101040160036002610164356101240161018435610124016101a4356101440160016101a05260606101c05260c0610200526000610240526000806102605261012435610280526102a0856020820152602086026102e00160005b878110156106555760c0810260208b0101600160005260806040820160203760c083526001602084015260208202880135604084015260a06000206060840152604060808401527f800000000000000000000000000000000000000000000000000000000000000060016060830135160260408201351760a08401527f8000000000000000000000000000000000000000000000000000000000000000600160a0830135160260808201351760c08401528383036020830260408601015260e08301925050600181019050610585565b50602082820303825281810360c00161022052809150868803602083015260208789030260400181019050865b888110156107735760c0810260208b01016020898303028601358060408803013560016000526080604084016020378060c00185526001602086015260208b850302890135604086015260a060002060608601528060400160808601527f8000000000000000000000000000000000000000000000000000000000000000600160405116026020511760a08601527f8000000000000000000000000000000000000000000000000000000000000000600160805116026060511760c08601528060208903830160e087013785850360208c860302604088010152602085510185019450505050600181019050610682565b5060208282030382526102a081038060a0016101e0528061010001610180526020610160528061014001610160f3fea165627a7a72305820542dee0aabf2726de383f4636bd42903250993b63dcc6b40ffa95da32d22dc450029","srcmap":"1334:15791:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1334:15791:0;;;;;;;","srcmap-runtime":"1334:15791:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1334:15791:0;1994:22;;;;2296:4;2290;2283:18;3093:7777;;;3169:4;3156:18;3150:4;3143:32;3218:4;3205:18;3199:4;3192:32;3278:5;3265:19;3258:5;3254:31;3311:1;3338;3373:66;3498:9;3490:5;3477:19;3473:35;3625:4;3612:18;3605:5;3598:33;3672:1;3665:5;3658:16;3716:1;3709:5;3702:16;3750:25;3773:1;3766:5;3750:25;;;3819:4;3816:1;3812:12;3805:5;3801:24;3852:1;4177;4162:5926;4187:1;4184;4181:8;4162:5926;;;4340:4;4337:1;4333:12;4326:4;4319:5;4315:16;4311:35;5545:9;5532:23;5613:4;5602:9;5598:20;5585:34;5649:9;5693:1;5690;5687:8;5721:1;5716:397;;;;6139:1;6134:83;;;;5680:537;;5716:397;6081:9;6030:4;6019:9;6015:20;6002:34;5955:9;5914:123;5866:5;5855:9;5851:21;5838:35;5798:293;5793:298;;5716:397;;6134:83;6185:9;6172:23;6167:28;;5680:537;;6302:35;6335:1;6332;6321:9;6302:35;;;6387:9;6380:4;6374:11;6371:1;6364:33;6359:38;;6499:1;6496:2;;;6545:9;6542:1;6539;6532:23;6527:28;;6598:9;6595:1;6592;6585:23;6580:28;;6659:9;6656:1;6645:9;6638:31;6633:36;;6496:2;7194:4;7187;7176:9;7172:20;7166:4;7153:46;7261:4;7254;7243:9;7239:20;7233:4;7220:46;7316:1;7305:9;7301:17;7294:5;7287:32;7354:1;7348:4;7341:15;7390:1;7384:4;7377:15;7796:4;7789:5;7783:4;7777;7774:1;7769:3;7758:43;7882:4;7875:5;7869:4;7863;7860:1;7855:3;7844:43;7836:6;7832:56;7822:66;;7969:4;7962:5;7956:4;7950;7947:1;7942:3;7931:43;7923:6;7919:56;7909:66;;8256:4;8249:5;8243:4;8236:5;8233:1;8228:3;8217:44;8209:6;8205:57;8195:67;;8491:4;8488:1;8482:4;8475:5;8472:1;8467:3;8456:40;8448:6;8444:53;8434:63;;8548:1;8545;8542:8;8539:2;;;8606:4;8600:11;8593:5;8586:26;8657:4;8651:11;8644:5;8637:26;8708:4;8702:11;8695:5;8688:26;8888:5;8882:12;8814:66;8810:85;8775:5;8739:186;8539:2;9235:1;9232;9229:8;9226:2;;;9333:1;9327:4;9320:15;9750:4;9743:5;9737:4;9731;9728:1;9723:3;9712:43;9639:4;9632:5;9626:4;9619:5;9616:1;9611:3;9600:44;9557:4;9550:5;9544:4;9537:5;9534:1;9529:3;9518:44;9477:201;9440:345;9404:6;9371:440;9361:450;;9226:2;9951:6;9944:14;9941:2;;;9974:3;9968:4;9961:17;9992:4;9986;9979:18;9941:2;10032:4;10029:1;10025:12;10020:17;;4212:5876;;;;;4204:4;4201:1;4197:12;4192:17;;4162:5926;;;4166:14;10106:21;10122:4;10106:21;;;10467:9;10458:5;10455:1;10451:13;10444:5;10434:31;10430:47;10518:9;10508:8;10505:23;10498:31;10495:2;;;10615:3;10609:4;10602:17;10653:4;10647;10640:18;10495:2;3125:7745;;;;;;;;;;11120:2508;;;11186:66;11296:2;11283:16;11351:4;11347:2;11343:13;11330:27;11409:4;11405:2;11401:13;11388:27;11467:4;11463:2;11459:13;11446:27;12062:65;12054:6;12051:77;11961:66;11953:6;11950:78;11860:66;11852:6;11849:78;11759:66;11751:6;11748:78;11718:6;11711:14;11681:6;11674:14;11644:6;11637:14;11608:6;11601:14;11577:75;11574:115;11571:155;11568:259;11565:363;11562:467;11559:570;11556:2;;;12181:3;12175:4;12168:17;12219:4;12213;12206:18;11556:2;12612:5;12606:12;12600:4;12593:26;12678:5;12672:12;12666:4;12659:26;12738:66;12732:4;12725:80;12835:66;12829:4;12822:80;12932:66;12926:4;12919:80;13029:65;13023:4;13016:79;13131:5;13125:12;13119:4;13112:26;13198:5;13192:12;13185:5;13178:27;13259:6;13252:5;13245:21;13297:6;13290:5;13283:21;13335:6;13328:5;13321:21;13373:6;13366:5;13359:21;13451:4;13445;13438:5;13432:4;13429:1;13424:3;13413:43;13510:4;13504:11;13497:19;13487:7;13480:15;13477:40;13474:2;;;13553:3;13547:4;13540:17;13591:4;13585;13578:18;13474:2;11149:2479;;;;;;;;;13967:1994;;;14042:66;14144;14264:4;14258;14254:15;14241:29;14324:4;14318;14314:15;14301:29;14384:4;14378;14374:15;14361:29;14444:4;14438;14434:15;14421:29;15746:11;15738:6;15730;15723:35;15652:11;15617:1;15571:11;15563:6;15549:11;15541:6;15533;15526:35;15519:64;15479:214;15429:355;15365:11;15357:6;15349;15342:35;15271:11;15236:1;15190:11;15182:6;15168:11;15160:6;15152;15145:35;15138:64;15098:214;15048:355;15019:791;14904:1;14901;14898:8;14834:1;14822:9;14819:1;14815:17;14812:24;14779:188;14681:1;14678;14675:8;14611:1;14599:9;14596:1;14592:17;14589:24;14556:197;14527:466;14498:1334;14470:1380;14467:2;;;15886:3;15880:4;15873:17;15924:4;15918;15911:18;14467:2;14007:1954;;;;;;;;;;;16552:330;;;16620:1;16605:202;16630:1;16627;16624:8;16605:202;;;16716:4;16708;16705:1;16701:12;16694:5;16690:24;16686:35;16784:4;16777:5;16769:4;16766:1;16762:12;16755:5;16751:24;16738:51;16655:152;16647:4;16644:1;16640:12;16635:17;;16605:202;;;16609:14;16861:4;16858:1;16854:12;16847:5;16837:30;16831:4;16824:44;16587:295;;;;17078:38;:36;:38::i;:::-;1334:15791;2026:9210:1;2175:5;2162:19;2155:5;2151:31;2204:1;2227;2284:5;2271:19;2264:5;2260:31;2384:5;2371:19;2364:5;2360:31;2481:5;2468:19;2461:5;2457:31;4450:4;4443:5;4436:19;4529:4;4522:5;4515:19;4663:4;4656:5;4649:19;4802:4;4795:5;4788:19;5023:1;5051:7;5044:5;5037:22;5133:5;5120:19;5113:5;5106:34;5170:5;5271:1;5264:4;5254:8;5250:19;5243:30;5440:4;5437:1;5433:12;5426:5;5422:24;5475:1;5460:2127;5485:1;5482;5479:8;5460:2127;;;5574:4;5571:1;5567:12;5560:4;5553:5;5549:16;5545:35;5659:4;5653;5646:18;5749:4;5742;5731:9;5727:20;5721:4;5708:46;5847:4;5844:1;5837:15;5948:4;5941;5938:1;5934:12;5927:26;6078:4;6075:1;6071:12;6058:11;6054:30;6041:44;6034:4;6031:1;6027:12;6020:66;6202:4;6196;6186:21;6179:4;6176:1;6172:12;6165:43;6330:4;6323;6320:1;6316:12;6309:26;6682:66;6647:4;6639;6628:9;6624:20;6611:34;6607:45;6574:200;6542:4;6531:9;6527:20;6514:34;6486:310;6459:4;6456:1;6452:12;6424:390;7161:66;7126:4;7118;7107:9;7103:20;7090:34;7086:45;7053:200;7021:4;7010:9;7006:20;6993:34;6965:310;6938:4;6935:1;6931:12;6903:390;7448:8;7445:1;7441:16;7433:4;7430:1;7426:12;7419:4;7409:8;7405:19;7401:38;7394:64;7568:4;7565:1;7561:12;7556:17;;5510:2077;5502:4;5499:1;5495:12;5490:17;;5460:2127;;;5464:14;7775:4;7764:8;7761:1;7757:16;7753:27;7743:8;7736:45;7825:8;7822:1;7818:16;7812:4;7808:27;7801:5;7794:42;7908:1;7896:13;;7957:1;7954;7950:9;7943:4;7933:8;7929:19;7922:38;8042:4;8038:1;8035;8031:9;8027:20;8021:4;8017:31;8014:1;8010:39;8005:44;;8106:1;8091:2474;8116:1;8113;8110:8;8091:2474;;;8239:4;8236:1;8232:12;8225:4;8218:5;8214:16;8210:35;8368:4;8364:1;8361;8357:9;8353:20;8343:8;8339:35;8326:49;8492:13;8485:4;8475:8;8471:19;8467:39;8454:53;8538:4;8532;8525:18;8677:4;8670;8659:9;8655:20;8649:4;8636:46;8784:14;8778:4;8774:25;8771:1;8764:36;8896:4;8889;8886:1;8882:12;8875:26;9046:4;9042:1;9039;9035:9;9031:20;9017:12;9013:39;9000:53;8993:4;8990:1;8986:12;8979:75;9143:4;9137;9127:21;9120:4;9117:1;9113:12;9106:43;9257:14;9251:4;9247:25;9240:4;9237:1;9233:12;9226:47;9574:66;9539:4;9532;9526:11;9522:22;9489:177;9458:4;9452:11;9424:264;9397:4;9394:1;9390:12;9362:344;9983:66;9952:4;9945;9939:11;9935:22;9906:165;9879:4;9873:11;9849:240;9826:4;9823:1;9819:12;9795:312;10241:14;10233:4;10223:8;10219:19;10204:13;10200:39;10193:4;10190:1;10186:12;10173:83;10419:8;10416:1;10412:16;10404:4;10400:1;10397;10393:9;10389:20;10382:4;10372:8;10368:19;10364:46;10357:72;10545:4;10541:1;10535:8;10531:19;10528:1;10524:27;10519:32;;8141:2424;;;8133:4;8130:1;8126:12;8121:17;;8091:2474;;;8095:14;10687:4;10676:8;10673:1;10669:16;10665:27;10655:8;10648:45;10787:5;10784:1;10780:13;11000:11;10994:4;10990:22;10983:5;10976:37;11051:11;11044:5;11040:23;11033:5;11026:38;11133:4;11126:5;11119:19;11176:11;11169:5;11165:23;11158:5;11151:38"},"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/privateRange/PrivateRangeABIEncoder.sol:PrivateRangeABIEncoder":{"abi":"[]","bin":"604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a723058208e196b59c4b7615043059e7835f9d009a0943d51e9f9e9acd442310cf2cec94f0029","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a723058208e196b59c4b7615043059e7835f9d009a0943d51e9f9e9acd442310cf2cec94f0029","srcmap":"1267:9971:1:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24","srcmap-runtime":"1267:9971:1:-;;;;;;;;"},"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/interfaces/PrivateRangeInterface.sol:PrivateRangeInterface":{"abi":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256[6]\"}],\"name\":\"validatePrivateRange\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}]","bin":"608060405234801561001057600080fd5b506101a6806100206000396000f3fe608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631fa23f2714610046575b600080fd5b34801561005257600080fd5b506100f5600480360361010081101561006a57600080fd5b810190808035906020019064010000000081111561008757600080fd5b82018360208201111561009957600080fd5b803590602001918460018302840111640100000000831117156100bb57600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908060c001909192919290505050610170565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013557808201518184015260208101905061011a565b50505050905090810190601f1680156101625780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b606094935050505056fea165627a7a7230582074a6d1ab91a1333dad3eb27bf3731e052e4195995af7fbe767c3aa42d6649dd20029","bin-runtime":"608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631fa23f2714610046575b600080fd5b34801561005257600080fd5b506100f5600480360361010081101561006a57600080fd5b810190808035906020019064010000000081111561008757600080fd5b82018360208201111561009957600080fd5b803590602001918460018302840111640100000000831117156100bb57600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908060c001909192919290505050610170565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013557808201518184015260208101905061011a565b50505050905090810190601f1680156101625780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b606094935050505056fea165627a7a7230582074a6d1ab91a1333dad3eb27bf3731e052e4195995af7fbe767c3aa42d6649dd20029","srcmap":"764:209:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;764:209:2;;;;;;;","srcmap-runtime":"764:209:2:-;;;;;;;;;;;;;;;;;;;;;;;;801:170;;8:9:-1;5:2;;;30:1;27;20:12;5:2;801:170:2;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;801:170:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;801:170:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;801:170:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;801:170:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;801:170:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;951:12;801:170;;;;;;:::o"}},"sourceList":["/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/privateRange/PrivateRange.sol","/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/privateRange/PrivateRangeABIEncoder.sol","/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/interfaces/PrivateRangeInterface.sol"],"sources":{"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/privateRange/PrivateRange.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/privateRange/PrivateRange.sol","exportedSymbols":{"PrivateRange":[14]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0","<","0.6",".0"]},"id":1,"name":"PragmaDirective","src":"0:31:0"},{"attributes":{"SourceUnit":40,"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/interfaces/PrivateRangeInterface.sol","file":"../../../interfaces/PrivateRangeInterface.sol","scope":15,"symbolAliases":[null],"unitAlias":""},"id":2,"name":"ImportDirective","src":"33:55:0"},{"attributes":{"SourceUnit":23,"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/privateRange/PrivateRangeABIEncoder.sol","file":"./PrivateRangeABIEncoder.sol","scope":15,"symbolAliases":[null],"unitAlias":""},"id":3,"name":"ImportDirective","src":"89:38:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title PrivateRange\n@author AZTEC\n@dev Library to validate AZTEC zero-knowledge private range proofs\nDon't include this as an internal library. This contract uses a static memory table to cache\nelliptic curve primitives and hashes.\nCalling this internally from another function will lead to memory mutation and undefined behaviour.\nThe intended use case is to call this externally via `staticcall`.\nExternal calls to OptimizedAZTEC can be treated as pure functions as this contract contains no\nstorage and makes no external calls (other than to precompiles)\n * Copyright 2020 Spilsbury Holdings Ltd \n * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \"License\");\nyou may not use this file except in compliance with the License.\n * This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n * You should have received a copy of the GNU Lesser General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.*","fullyImplemented":true,"linearizedBaseContracts":[14],"name":"PrivateRange","scope":15},"children":[{"attributes":{"documentation":"@dev AZTEC will take any transaction sent to it and attempt to validate a zero knowledge proof.\nIf the proof is not valid, the transaction throws.\n@notice See AZTECInterface for how method calls should be constructed.*","implemented":true,"isConstructor":false,"kind":"fallback","modifiers":[null],"name":"","scope":14,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":4,"name":"ParameterList","src":"1667:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":5,"name":"ParameterList","src":"1679:0:0"},{"children":[{"attributes":{"externalReferences":[null],"operations":"{\n    validatePrivateRange()\n    mstore(0x40, 0x60)\n    function validatePrivateRange()\n    {\n        mstore(0x80, calldataload(0x44))\n        mstore(0xa0, calldataload(0x64))\n        let notes := add(0x104, calldataload(0x144))\n        let m := 2\n        let n := 3\n        let gen_order := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001\n        let challenge := mod(calldataload(0x124), gen_order)\n        mstore(0x2a0, calldataload(0x24))\n        mstore(0x2c0, 0)\n        mstore(0x2e0, 0)\n        hashCommitments(notes, n)\n        let b := add(0x300, mul(n, 0x80))\n        let x := 1\n        for {\n            let i := 0\n        }\n        lt(i, n)\n        {\n            i := add(i, 0x01)\n        }\n        {\n            let noteIndex := add(add(notes, 0x20), mul(i, 0xc0))\n            let k := calldataload(noteIndex)\n            let a := calldataload(add(noteIndex, 0x20))\n            let c := challenge\n            switch gt(i, 1)\n            case 1 {\n                k := addmod(calldataload(sub(noteIndex, 0x180)), sub(gen_order, calldataload(sub(noteIndex, 0xc0))), gen_order)\n            }\n            case 0 {\n                k := calldataload(noteIndex)\n            }\n            validateCommitment(noteIndex, k, a)\n            x := mulmod(x, mload(0x00), gen_order)\n            if i\n            {\n                k := mulmod(k, x, gen_order)\n                a := mulmod(a, x, gen_order)\n                c := mulmod(challenge, x, gen_order)\n            }\n            calldatacopy(0xe0, add(noteIndex, 0x80), 0x40)\n            calldatacopy(0x20, add(noteIndex, 0x40), 0x40)\n            mstore(0x120, sub(gen_order, c))\n            mstore(0x60, k)\n            mstore(0xc0, a)\n            let result := staticcall(gas(), 7, 0xe0, 0x60, 0x1a0, 0x40)\n            result := and(result, staticcall(gas(), 7, 0x20, 0x60, 0x120, 0x40))\n            result := and(result, staticcall(gas(), 7, 0x80, 0x60, 0x160, 0x40))\n            result := and(result, staticcall(gas(), 6, 0x120, 0x80, 0x160, 0x40))\n            result := and(result, staticcall(gas(), 6, 0x160, 0x80, b, 0x40))\n            if eq(i, 0)\n            {\n                mstore(0x260, mload(0x20))\n                mstore(0x280, mload(0x40))\n                mstore(0x1e0, mload(0xe0))\n                mstore(0x200, sub(0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47, mload(0x100)))\n            }\n            if gt(i, 0)\n            {\n                mstore(0x60, c)\n                result := and(result, and(and(staticcall(gas(), 6, 0x1a0, 0x80, 0x1e0, 0x40), staticcall(gas(), 6, 0x220, 0x80, 0x260, 0x40)), staticcall(gas(), 7, 0x20, 0x60, 0x220, 0x40)))\n            }\n            if iszero(result)\n            {\n                mstore(0x00, 400)\n                revert(0x00, 0x20)\n            }\n            b := add(b, 0x40)\n        }\n        validatePairing(0x84)\n        let expected := mod(keccak256(0x2a0, sub(b, 0x2a0)), gen_order)\n        if iszero(eq(expected, challenge))\n        {\n            mstore(0x00, 404)\n            revert(0x00, 0x20)\n        }\n    }\n    function validatePairing(t2)\n    {\n        let field_order := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n        let t2_x_1 := calldataload(t2)\n        let t2_x_2 := calldataload(add(t2, 0x20))\n        let t2_y_1 := calldataload(add(t2, 0x40))\n        let t2_y_2 := calldataload(add(t2, 0x60))\n        if or(or(or(or(or(or(or(iszero(t2_x_1), iszero(t2_x_2)), iszero(t2_y_1)), iszero(t2_y_2)), eq(t2_x_1, 0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed)), eq(t2_x_2, 0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2)), eq(t2_y_1, 0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa)), eq(t2_y_2, 0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n        mstore(0x20, mload(0x1e0))\n        mstore(0x40, mload(0x200))\n        mstore(0x80, 0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed)\n        mstore(0x60, 0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2)\n        mstore(0xc0, 0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa)\n        mstore(0xa0, 0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b)\n        mstore(0xe0, mload(0x260))\n        mstore(0x100, mload(0x280))\n        mstore(0x140, t2_x_1)\n        mstore(0x120, t2_x_2)\n        mstore(0x180, t2_y_1)\n        mstore(0x160, t2_y_2)\n        let success := staticcall(gas(), 8, 0x20, 0x180, 0x20, 0x20)\n        if or(iszero(success), iszero(mload(0x20)))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n    }\n    function validateCommitment(note, k, a)\n    {\n        let gen_order := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001\n        let field_order := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n        let gammaX := calldataload(add(note, 0x40))\n        let gammaY := calldataload(add(note, 0x60))\n        let sigmaX := calldataload(add(note, 0x80))\n        let sigmaY := calldataload(add(note, 0xa0))\n        if iszero(and(and(and(eq(mod(a, gen_order), a), gt(a, 1)), and(eq(mod(k, gen_order), k), gt(k, 1))), and(eq(addmod(mulmod(mulmod(sigmaX, sigmaX, field_order), sigmaX, field_order), 3, field_order), mulmod(sigmaY, sigmaY, field_order)), eq(addmod(mulmod(mulmod(gammaX, gammaX, field_order), gammaX, field_order), 3, field_order), mulmod(gammaY, gammaY, field_order)))))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n    }\n    function hashCommitments(notes, n)\n    {\n        for {\n            let i := 0\n        }\n        lt(i, n)\n        {\n            i := add(i, 0x01)\n        }\n        {\n            let index := add(add(notes, mul(i, 0xc0)), 0x60)\n            calldatacopy(add(0x300, mul(i, 0x80)), index, 0x80)\n        }\n        mstore(0x00, keccak256(0x300, mul(n, 0x80)))\n    }\n}"},"children":[],"id":6,"name":"InlineAssembly","src":"1689:15411:0"},{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"encodeAndExit","referencedDeclaration":21,"type":"function () pure"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":22,"type":"type(library PrivateRangeABIEncoder)","value":"PrivateRangeABIEncoder"},"id":7,"name":"Identifier","src":"17078:22:0"}],"id":9,"name":"MemberAccess","src":"17078:36:0"}],"id":10,"name":"FunctionCall","src":"17078:38:0"}],"id":11,"name":"ExpressionStatement","src":"17078:38:0"}],"id":12,"name":"Block","src":"1679:15444:0"}],"id":13,"name":"FunctionDefinition","src":"1659:15464:0"}],"id":14,"name":"ContractDefinition","src":"1334:15791:0"}],"id":15,"name":"SourceUnit","src":"0:17126:0"}},"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/privateRange/PrivateRangeABIEncoder.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/privateRange/PrivateRangeABIEncoder.sol","exportedSymbols":{"PrivateRangeABIEncoder":[22]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0","<","0.6",".0"]},"id":16,"name":"PragmaDirective","src":"0:31:1"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@title PrivateRangeABIEncoder\n@author AZTEC\n@dev Library to ABI encode the output of a private range proof verification operation\nDon't include this as an internal library. This contract uses a static memory table to cache\nelliptic curve primitives and hashes.\nCalling this internally from another function will lead to memory mutation and undefined behaviour.\nThe intended use case is to call this externally via `staticcall`.\nExternal calls to OptimizedAZTEC can be treated as pure functions as this contract contains no\nstorage and makes no external calls (other than to precompiles)\n * Copyright 2020 Spilsbury Holdings Ltd \n * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \"License\");\nyou may not use this file except in compliance with the License.\n * This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n * You should have received a copy of the GNU Lesser General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.*","fullyImplemented":true,"linearizedBaseContracts":[22],"name":"PrivateRangeABIEncoder","scope":23},"children":[{"attributes":{"documentation":"New calldata map\n0x04:0x24      = calldata location of proofData byte array  // proof data byte array\n0x24:0x44      = message sender // address\n0x44:0x64      = h_x     // crs\n0x64:0x84      = h_y     // crs\n0x84:0xa4      = t2_x0   // crs\n0xa4:0xc4      = t2_x1   // crs\n0xc4:0xe4      = t2_y0   // crs\n0xe4:0x104     = t2_y1   // crs\n0x104:0x124    = length of proofData byte array\n0x124:0x144    = challenge\n0x144:0x164    = offset in byte array to notes\n0x164:0x184    = offset in byte array to inputOwners\n0x184:0x1a4    = offset in byte array to outputOwners\n0x1a4:0x1c4    = offset in byte array to metadata","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"encodeAndExit","scope":22,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":17,"name":"ParameterList","src":"2048:2:1"},{"attributes":{"parameters":[null]},"children":[],"id":18,"name":"ParameterList","src":"2065:0:1"},{"children":[{"attributes":{"externalReferences":[null],"operations":"{\n    let notes := add(0x104, calldataload(0x144))\n    let n := 3\n    let m := 2\n    let inputOwners := add(0x124, calldataload(0x164))\n    let outputOwners := add(0x124, calldataload(0x184))\n    let metadata := add(0x144, calldataload(0x1a4))\n    mstore(0x1a0, 0x01)\n    mstore(0x1c0, 0x60)\n    mstore(0x200, 0xc0)\n    mstore(0x240, 0x00)\n    let kPublic := 0\n    mstore(0x260, kPublic)\n    mstore(0x280, calldataload(0x124))\n    let inputPtr := 0x2a0\n    mstore(add(inputPtr, 0x20), m)\n    let s := add(0x2e0, mul(m, 0x20))\n    for {\n        let i := 0\n    }\n    lt(i, m)\n    {\n        i := add(i, 0x01)\n    }\n    {\n        let noteIndex := add(add(notes, 0x20), mul(i, 0xc0))\n        mstore(0x00, 0x01)\n        calldatacopy(0x20, add(noteIndex, 0x40), 0x80)\n        mstore(s, 0xc0)\n        mstore(add(s, 0x20), 0x01)\n        mstore(add(s, 0x40), calldataload(add(inputOwners, mul(i, 0x20))))\n        mstore(add(s, 0x60), keccak256(0x00, 0xa0))\n        mstore(add(s, 0x80), 0x40)\n        mstore(add(s, 0xa0), or(calldataload(add(noteIndex, 0x40)), mul(and(calldataload(add(noteIndex, 0x60)), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n        mstore(add(s, 0xc0), or(calldataload(add(noteIndex, 0x80)), mul(and(calldataload(add(noteIndex, 0xa0)), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n        mstore(add(add(inputPtr, 0x40), mul(i, 0x20)), sub(s, inputPtr))\n        s := add(s, 0xe0)\n    }\n    mstore(inputPtr, sub(sub(s, inputPtr), 0x20))\n    mstore(0x220, add(0xc0, sub(s, inputPtr)))\n    inputPtr := s\n    mstore(add(inputPtr, 0x20), sub(n, m))\n    s := add(s, add(0x40, mul(sub(n, m), 0x20)))\n    for {\n        let i := m\n    }\n    lt(i, n)\n    {\n        i := add(i, 0x01)\n    }\n    {\n        let noteIndex := add(add(notes, 0x20), mul(i, 0xc0))\n        let metadataIndex := calldataload(add(metadata, mul(sub(i, m), 0x20)))\n        let metadataLength := calldataload(add(sub(metadata, 0x40), metadataIndex))\n        mstore(0x00, 0x01)\n        calldatacopy(0x20, add(noteIndex, 0x40), 0x80)\n        mstore(s, add(0xc0, metadataLength))\n        mstore(add(s, 0x20), 0x01)\n        mstore(add(s, 0x40), calldataload(add(outputOwners, mul(sub(i, m), 0x20))))\n        mstore(add(s, 0x60), keccak256(0x00, 0xa0))\n        mstore(add(s, 0x80), add(0x40, metadataLength))\n        mstore(add(s, 0xa0), or(mload(0x20), mul(and(mload(0x40), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n        mstore(add(s, 0xc0), or(mload(0x60), mul(and(mload(0x80), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n        calldatacopy(add(s, 0xe0), add(metadataIndex, sub(metadata, 0x20)), metadataLength)\n        mstore(add(add(inputPtr, 0x40), mul(sub(i, m), 0x20)), sub(s, inputPtr))\n        s := add(s, add(mload(s), 0x20))\n    }\n    mstore(inputPtr, sub(sub(s, inputPtr), 0x20))\n    let notesLength := sub(s, 0x2a0)\n    mstore(0x1e0, add(0xa0, notesLength))\n    mstore(0x180, add(0x100, notesLength))\n    mstore(0x160, 0x20)\n    return(0x160, add(0x140, notesLength))\n}"},"children":[],"id":19,"name":"InlineAssembly","src":"2075:9161:1"}],"id":20,"name":"Block","src":"2065:9171:1"}],"id":21,"name":"FunctionDefinition","src":"2026:9210:1"}],"id":22,"name":"ContractDefinition","src":"1267:9971:1"}],"id":23,"name":"SourceUnit","src":"0:11239:1"}},"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/interfaces/PrivateRangeInterface.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/interfaces/PrivateRangeInterface.sol","exportedSymbols":{"PrivateRangeInterface":[39]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0","<","0.6",".0"]},"id":24,"name":"PragmaDirective","src":"0:31:2"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title PrivateRangeInterface\n@author AZTEC\n@dev An interface for the PrivateRange validator contract\n\n * Copyright 2020 Spilsbury Holdings Ltd \n * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \"License\");\nyou may not use this file except in compliance with the License.\n * This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n * You should have received a copy of the GNU Lesser General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.*","fullyImplemented":true,"linearizedBaseContracts":[39],"name":"PrivateRangeInterface","scope":40},"children":[{"attributes":{"documentation":null,"implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"validatePrivateRange","scope":39,"stateMutability":"pure","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"","scope":38,"stateVariable":false,"storageLocation":"calldata","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":25,"name":"ElementaryTypeName","src":"840:5:2"}],"id":26,"name":"VariableDeclaration","src":"840:14:2"},{"attributes":{"constant":false,"name":"","scope":38,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":27,"name":"ElementaryTypeName","src":"864:7:2"}],"id":28,"name":"VariableDeclaration","src":"864:7:2"},{"attributes":{"constant":false,"name":"","scope":38,"stateVariable":false,"storageLocation":"calldata","type":"uint256[6]","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"uint256[6]"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":29,"name":"ElementaryTypeName","src":"881:4:2"},{"attributes":{"argumentTypes":null,"hexvalue":"36","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":null,"value":"6"},"id":30,"name":"Literal","src":"886:1:2"}],"id":31,"name":"ArrayTypeName","src":"881:7:2"}],"id":32,"name":"VariableDeclaration","src":"881:16:2"}],"id":33,"name":"ParameterList","src":"830:73:2"},{"children":[{"attributes":{"constant":false,"name":"","scope":38,"stateVariable":false,"storageLocation":"memory","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":34,"name":"ElementaryTypeName","src":"951:5:2"}],"id":35,"name":"VariableDeclaration","src":"951:12:2"}],"id":36,"name":"ParameterList","src":"950:14:2"},{"attributes":{"statements":[null]},"children":[],"id":37,"name":"Block","src":"969:2:2"}],"id":38,"name":"FunctionDefinition","src":"801:170:2"}],"id":39,"name":"ContractDefinition","src":"764:209:2"}],"id":40,"name":"SourceUnit","src":"0:974:2"}}},"version":"0.5.0+commit.1d4f565a.Linux.g++"}
