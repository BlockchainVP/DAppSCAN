{"contracts":{"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/swap/SwapABIEncoder.sol:SwapABIEncoder":{"abi":"[]","bin":"604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a7230582037f69890a5e28471097c9d89f9ba1fec8fd39a22eef40498ef0b6e5a0caf3dad0029","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a7230582037f69890a5e28471097c9d89f9ba1fec8fd39a22eef40498ef0b6e5a0caf3dad0029","srcmap":"1241:26777:0:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24","srcmap-runtime":"1241:26777:0:-;;;;;;;;"},"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/test/ACE/validators/swap/SwapABIEncoderTest.sol:SwapABIEncoderTest":{"abi":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256[6]\"}],\"name\":\"validateSwap\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}]","bin":"608060405234801561001057600080fd5b50610563806100206000396000f3fe608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632863433314610046575b600080fd5b34801561005257600080fd5b506100f5600480360361010081101561006a57600080fd5b810190808035906020019064010000000081111561008757600080fd5b82018360208201111561009957600080fd5b803590602001918460018302840111640100000000831117156100bb57600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908060c001909192919290505050610170565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013557808201518184015260208101905061011a565b50505050905090810190601f1680156101625780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b606061017a610182565b949350505050565b610144356101040161016435610124016101843561014401602082033560041460208203356002141615156101b657600080fd5b60206101605260026101a05260806101c05260c06102205261020061024052600061026052600061028052610124356102a0526101206102c05260016102e052606061030052600160005260806060840160203760c06103205260016103405281356103605260a06000206103805260406103a0527f800000000000000000000000000000000000000000000000000000000000000060016040511602602051176103c0527f800000000000000000000000000000000000000000000000000000000000000060016080511602606051176103e05260016104205260606104405260806101e0840160203760016104805260408201356104a05260a06000206104c052803560408203810135806040016104e0527f80000000000000000000000000000000000000000000000000000000000000006001604051160260205117610500527f800000000000000000000000000000000000000000000000000000000000000060016080511602606051176105205280602084038301610540378060c00161046052806101200161040052806103200161020052806103c0016101e052806105400160c06020820152610200604082015260006060820152600060808201526101243560e052602060e02060a082015261012060c0820152600160e0820152606061010082015260806102a0870160203760c06101208201526001610140820152606085013561016082015260a060002061018082015260406101a08201527f800000000000000000000000000000000000000000000000000000000000000060016040511602602051176101c08201527f800000000000000000000000000000000000000000000000000000000000000060016080511602606051176101e08201526001610220820152606061024082015260806101208701602037600161028082015260208501356102a082015260a06000206102c082015260208401359250604084038301359150816040016102e08201527f800000000000000000000000000000000000000000000000000000000000000060016040511602602051176103008201527f80000000000000000000000000000000000000000000000000000000000000006001608051160260605117610320820152816020850384016103408301378160c00161026082015281610120016102008201528161032001815261020051826103c001016101805260406101805101610160f3fea165627a7a7230582069929ffeffbcd67f9309a8d57e4694916e754fe37140abfbc1213c847f2922190029","bin-runtime":"608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632863433314610046575b600080fd5b34801561005257600080fd5b506100f5600480360361010081101561006a57600080fd5b810190808035906020019064010000000081111561008757600080fd5b82018360208201111561009957600080fd5b803590602001918460018302840111640100000000831117156100bb57600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908060c001909192919290505050610170565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013557808201518184015260208101905061011a565b50505050905090810190601f1680156101625780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b606061017a610182565b949350505050565b610144356101040161016435610124016101843561014401602082033560041460208203356002141615156101b657600080fd5b60206101605260026101a05260806101c05260c06102205261020061024052600061026052600061028052610124356102a0526101206102c05260016102e052606061030052600160005260806060840160203760c06103205260016103405281356103605260a06000206103805260406103a0527f800000000000000000000000000000000000000000000000000000000000000060016040511602602051176103c0527f800000000000000000000000000000000000000000000000000000000000000060016080511602606051176103e05260016104205260606104405260806101e0840160203760016104805260408201356104a05260a06000206104c052803560408203810135806040016104e0527f80000000000000000000000000000000000000000000000000000000000000006001604051160260205117610500527f800000000000000000000000000000000000000000000000000000000000000060016080511602606051176105205280602084038301610540378060c00161046052806101200161040052806103200161020052806103c0016101e052806105400160c06020820152610200604082015260006060820152600060808201526101243560e052602060e02060a082015261012060c0820152600160e0820152606061010082015260806102a0870160203760c06101208201526001610140820152606085013561016082015260a060002061018082015260406101a08201527f800000000000000000000000000000000000000000000000000000000000000060016040511602602051176101c08201527f800000000000000000000000000000000000000000000000000000000000000060016080511602606051176101e08201526001610220820152606061024082015260806101208701602037600161028082015260208501356102a082015260a06000206102c082015260208401359250604084038301359150816040016102e08201527f800000000000000000000000000000000000000000000000000000000000000060016040511602602051176103008201527f80000000000000000000000000000000000000000000000000000000000000006001608051160260605117610320820152816020850384016103408301378160c00161026082015281610120016102008201528161032001815261020051826103c001016101805260406101805101610160f3fea165627a7a7230582069929ffeffbcd67f9309a8d57e4694916e754fe37140abfbc1213c847f2922190029","srcmap":"1243:243:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1243:243:1;;;;;;;","srcmap-runtime":"1243:243:1:-;;;;;;;;;;;;;;;;;;;;;;;;1277:207;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1277:207:1;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1277:207:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1277:207:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1277:207:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1277:207:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1277:207:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1419:12;1447:30;:28;:30::i;:::-;1277:207;;;;;;:::o;1991:26025:0:-;2140:5;2127:19;2120:5;2116:31;2202:5;2189:19;2182:5;2178:31;2304:5;2291:19;2284:5;2280:31;2775:4;2763:10;2759:21;2746:35;2740:4;2737:45;2712:4;2699:11;2695:22;2682:36;2676:4;2673:46;2652:144;2645:152;2642:2;;;2829:4;2823;2816:18;2642:2;6069:4;6062:5;6055:19;6842:4;6835:5;6828:19;6990:4;6983:5;6976:19;7811:4;7804:5;7797:19;8195:5;8188;8181:20;8374:4;8367:5;8360:19;8449:4;8442:5;8435:19;8537:5;8524:19;8517:5;8510:34;9425:5;9418;9411:20;9502:4;9495:5;9488:19;9611:4;9604:5;9597:19;10433:4;10427;10420:18;10905:4;10898;10891:5;10887:16;10881:4;10868:42;11021:4;11014:5;11007:19;11105:4;11098:5;11091:19;11265:10;11252:24;11245:5;11238:39;11414:4;11408;11398:21;11391:5;11384:36;11520:4;11513:5;11506:19;12472:66;12441:4;12434;12428:11;12424:22;12352:208;12304:4;12298:11;12274:304;12251:5;12227:365;12808:66;12781:4;12774;12768:11;12764:22;12739:157;12712:4;12706:11;12682:232;12659:5;12635:293;13650:4;13643:5;13636:19;13749:4;13742:5;13735:19;15041:4;15033:5;15026;15022:17;15016:4;15003:43;15206:4;15199:5;15192:19;15445:4;15433:10;15429:21;15416:35;15409:5;15402:50;15543:4;15537;15527:21;15520:5;15513:36;15971:11;15958:25;17125:4;17112:11;17108:22;17093:13;17089:42;17076:56;17234:14;17228:4;17224:25;17217:5;17210:40;17501:66;17470:4;17463;17457:11;17453:22;17424:165;17397:4;17391:11;17367:240;17344:5;17320:301;17872:66;17841:4;17834;17828:11;17824:22;17795:165;17768:4;17762:11;17738:240;17715:5;17691:301;18600:14;18592:4;18579:11;18575:22;18560:13;18556:42;18549:5;18536:79;19090:14;19084:4;19080:25;19073:5;19066:40;19308:14;19301:5;19297:26;19290:5;19283:41;19531:14;19524:5;19520:26;19513:5;19506:41;20092:14;20085:5;20081:26;20074:5;20067:41;20429:14;20422:5;20418:26;20620:4;20613;20603:8;20599:19;20592:33;20732:5;20725:4;20715:8;20711:19;20704:34;20831:4;20824;20814:8;20810:19;20803:33;20944:4;20937;20927:8;20923:19;20916:33;21154:5;21141:19;21135:4;21128:33;21218:4;21212;21202:21;21195:4;21185:8;21181:19;21174:50;21475:5;21468:4;21458:8;21454:19;21447:34;21587:4;21580;21570:8;21566:19;21559:33;21713:4;21705:5;21695:8;21691:20;21684:34;22067:4;22059:5;22052;22048:17;22042:4;22029:43;22184:4;22176:5;22166:8;22162:20;22155:34;22320:4;22312:5;22302:8;22298:20;22291:34;22473:4;22461:10;22457:21;22444:35;22436:5;22426:8;22422:20;22415:65;22599:4;22593;22583:21;22575:5;22565:8;22561:20;22554:51;22726:4;22718:5;22708:8;22704:20;22697:34;23007:66;22976:4;22969;22963:11;22959:22;22930:165;22903:4;22897:11;22873:240;22849:5;22839:8;22835:20;22811:316;23403:66;23372:4;23365;23359:11;23355:22;23326:165;23299:4;23293:11;23269:240;23245:5;23235:8;23231:20;23207:316;23849:4;23841:5;23831:8;23827:20;23820:34;23963:4;23955:5;23945:8;23941:20;23934:34;24312:4;24304:5;24297;24293:17;24287:4;24274:43;24497:4;24489:5;24479:8;24475:20;24468:34;24650:4;24638:10;24634:21;24621:35;24613:5;24603:8;24599:20;24592:65;24762:4;24756;24746:21;24738:5;24728:8;24724:20;24717:51;24969:4;24956:11;24952:22;24939:36;24922:53;;25055:4;25042:11;25038:22;25023:13;25019:42;25006:56;24988:74;;25190:14;25184:4;25180:25;25172:5;25162:8;25158:20;25151:55;25482:66;25451:4;25444;25438:11;25434:22;25405:165;25378:4;25372:11;25348:240;25324:5;25314:8;25310:20;25286:316;25878:66;25847:4;25840;25834:11;25830:22;25801:165;25774:4;25768:11;25744:240;25720:5;25710:8;25706:20;25682:316;26150:14;26142:4;26129:11;26125:22;26110:13;26106:42;26098:5;26088:8;26084:20;26071:94;26383:14;26377:4;26373:25;26365:5;26355:8;26351:20;26344:55;26549:14;26542:5;26538:26;26530:5;26520:8;26516:20;26509:56;26685:14;26678:5;26674:26;26664:8;26657:44;27499:5;27493:12;27476:14;27469:5;27465:26;27461:45;27454:5;27447:60;27976:4;27968:5;27962:12;27958:23;27951:5;27944:38"}},"sourceList":["/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/swap/SwapABIEncoder.sol","/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/test/ACE/validators/swap/SwapABIEncoderTest.sol"],"sources":{"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/swap/SwapABIEncoder.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/swap/SwapABIEncoder.sol","exportedSymbols":{"SwapABIEncoder":[30]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0","<","0.6",".0"]},"id":24,"name":"PragmaDirective","src":"0:31:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@title SwapABIEncoder\n@author AZTEC\n@dev Library to ABI encode the output of a Swap proof verification\nDon't include this as an internal library. This contract uses a static memory table to cache\nelliptic curve primitives and hashes.\nCalling this internally from another function will lead to memory mutation and undefined behaviour.\nThe intended use case is to call this externally via `staticcall`.\nExternal calls to OptimizedAZTEC can be treated as pure functions as this contract contains no\nstorage and makes no external calls (other than to precompiles)\n\n * Copyright 2020 Spilsbury Holdings Ltd \n * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \"License\");\nyou may not use this file except in compliance with the License.\n * This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n * You should have received a copy of the GNU Lesser General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.*","fullyImplemented":true,"linearizedBaseContracts":[30],"name":"SwapABIEncoder","scope":31},"children":[{"attributes":{"documentation":"Calldata map\n0x04:0x24      = calldata location of proofData byte array - pointer to the proofData.\n0x24:0x44      = message sender // sender\n0x44:0x64      = h_x     // crs\n0x64:0x84      = h_y     // crs\n0x84:0xa4      = t2_x0   // crs\n0xa4:0xc4      = t2_x1   // crs\n0xc4:0xe4      = t2_y0   // crs\n0xe4:0x104     = t2_y1   // crs\n0x104:0x124    = length of proofData byte array\n0x124:0x144    = challenge\n0x144:0x164    = offset in byte array to notes\n0x164:0x184    = offset in byte array to inputOwners\n0x184:0x1a4    = offset in byte array to outputOwners\n0x1a4:0x1c4    = offset in byte array to metadata*","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"encodeAndExit","scope":30,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":25,"name":"ParameterList","src":"2013:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":26,"name":"ParameterList","src":"2030:0:0"},{"children":[{"attributes":{"externalReferences":[null],"operations":"{\n    let notes := add(0x104, calldataload(0x144))\n    let noteOwners := add(0x124, calldataload(0x164))\n    let metadataPtr := add(0x144, calldataload(0x184))\n    if iszero(and(eq(0x02, calldataload(sub(metadataPtr, 0x20))), eq(0x04, calldataload(sub(noteOwners, 0x20)))))\n    {\n        revert(0x00, 0x00)\n    }\n    mstore(0x160, 0x20)\n    mstore(0x1a0, 0x02)\n    mstore(0x1c0, 0x80)\n    mstore(0x220, 0xc0)\n    mstore(0x240, 0x200)\n    mstore(0x260, 0x00)\n    mstore(0x280, 0x00)\n    mstore(0x2a0, calldataload(0x124))\n    mstore(0x2c0, 0x120)\n    mstore(0x2e0, 0x01)\n    mstore(0x300, 0x60)\n    mstore(0x00, 0x01)\n    calldatacopy(0x20, add(notes, 0x60), 0x80)\n    mstore(0x320, 0xc0)\n    mstore(0x340, 0x01)\n    mstore(0x360, calldataload(noteOwners))\n    mstore(0x380, keccak256(0x00, 0xa0))\n    mstore(0x3a0, 0x40)\n    mstore(0x3c0, or(mload(0x20), mul(and(mload(0x40), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    mstore(0x3e0, or(mload(0x60), mul(and(mload(0x80), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    mstore(0x420, 0x01)\n    mstore(0x440, 0x60)\n    calldatacopy(0x20, add(notes, 0x1e0), 0x80)\n    mstore(0x480, 0x01)\n    mstore(0x4a0, calldataload(add(noteOwners, 0x40)))\n    mstore(0x4c0, keccak256(0x00, 0xa0))\n    let metadataIndex := calldataload(metadataPtr)\n    let metadataLength := calldataload(add(metadataIndex, sub(metadataPtr, 0x40)))\n    mstore(0x4e0, add(0x40, metadataLength))\n    mstore(0x500, or(mload(0x20), mul(and(mload(0x40), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    mstore(0x520, or(mload(0x60), mul(and(mload(0x80), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    calldatacopy(0x540, add(metadataIndex, sub(metadataPtr, 0x20)), metadataLength)\n    mstore(0x460, add(0xc0, metadataLength))\n    mstore(0x400, add(0x120, metadataLength))\n    mstore(0x200, add(0x320, metadataLength))\n    mstore(0x1e0, add(0x3c0, metadataLength))\n    let proofPtr := add(0x540, metadataLength)\n    mstore(add(proofPtr, 0x20), 0xc0)\n    mstore(add(proofPtr, 0x40), 0x200)\n    mstore(add(proofPtr, 0x60), 0x00)\n    mstore(add(proofPtr, 0x80), 0x00)\n    mstore(0xe0, calldataload(0x124))\n    mstore(add(proofPtr, 0xa0), keccak256(0xe0, 0x20))\n    mstore(add(proofPtr, 0xc0), 0x120)\n    mstore(add(proofPtr, 0xe0), 0x01)\n    mstore(add(proofPtr, 0x100), 0x60)\n    calldatacopy(0x20, add(notes, 0x2a0), 0x80)\n    mstore(add(proofPtr, 0x120), 0xc0)\n    mstore(add(proofPtr, 0x140), 0x01)\n    mstore(add(proofPtr, 0x160), calldataload(add(noteOwners, 0x60)))\n    mstore(add(proofPtr, 0x180), keccak256(0x00, 0xa0))\n    mstore(add(proofPtr, 0x1a0), 0x40)\n    mstore(add(proofPtr, 0x1c0), or(mload(0x20), mul(and(mload(0x40), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    mstore(add(proofPtr, 0x1e0), or(mload(0x60), mul(and(mload(0x80), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    mstore(add(proofPtr, 0x220), 0x01)\n    mstore(add(proofPtr, 0x240), 0x60)\n    calldatacopy(0x20, add(notes, 0x120), 0x80)\n    mstore(add(proofPtr, 0x280), 0x01)\n    mstore(add(proofPtr, 0x2a0), calldataload(add(noteOwners, 0x20)))\n    mstore(add(proofPtr, 0x2c0), keccak256(0x00, 0xa0))\n    metadataIndex := calldataload(add(metadataPtr, 0x20))\n    metadataLength := calldataload(add(metadataIndex, sub(metadataPtr, 0x40)))\n    mstore(add(proofPtr, 0x2e0), add(0x40, metadataLength))\n    mstore(add(proofPtr, 0x300), or(mload(0x20), mul(and(mload(0x40), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    mstore(add(proofPtr, 0x320), or(mload(0x60), mul(and(mload(0x80), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    calldatacopy(add(proofPtr, 0x340), add(metadataIndex, sub(metadataPtr, 0x20)), metadataLength)\n    mstore(add(proofPtr, 0x260), add(0xc0, metadataLength))\n    mstore(add(proofPtr, 0x200), add(0x120, metadataLength))\n    mstore(proofPtr, add(0x320, metadataLength))\n    mstore(0x180, add(add(0x3c0, metadataLength), mload(0x200)))\n    return(0x160, add(mload(0x180), 0x40))\n}"},"children":[],"id":27,"name":"InlineAssembly","src":"2040:25976:0"}],"id":28,"name":"Block","src":"2030:25986:0"}],"id":29,"name":"FunctionDefinition","src":"1991:26025:0"}],"id":30,"name":"ContractDefinition","src":"1241:26777:0"}],"id":31,"name":"SourceUnit","src":"0:28019:0"}},"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/test/ACE/validators/swap/SwapABIEncoderTest.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/test/ACE/validators/swap/SwapABIEncoderTest.sol","exportedSymbols":{"SwapABIEncoderTest":[22]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0","<","0.6",".0"]},"id":1,"name":"PragmaDirective","src":"0:31:1"},{"attributes":{"SourceUnit":31,"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/swap/SwapABIEncoder.sol","file":"../../../../ACE/validators/swap/SwapABIEncoder.sol","scope":23,"symbolAliases":[null],"unitAlias":""},"id":2,"name":"ImportDirective","src":"33:60:1"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title Swap ABI Encoder Test\n@author AZTEC\n@dev Don't include this as an internal library. This contract uses a static memory table to cache\nelliptic curve primitives and hashes.\nCalling this internally from another function will lead to memory mutation and undefined behaviour.\nThe intended use case is to call this externally via `staticcall`.\nExternal calls to OptimizedAZTEC can be treated as pure functions as this contract contains no\nstorage and makes no external calls (other than to precompiles)\n * Copyright 2020 Spilsbury Holdings Ltd \n * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \"License\");\nyou may not use this file except in compliance with the License.\n * This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n * You should have received a copy of the GNU Lesser General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.*","fullyImplemented":true,"linearizedBaseContracts":[22],"name":"SwapABIEncoderTest","scope":23},"children":[{"attributes":{"documentation":null,"implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"validateSwap","scope":22,"stateMutability":"pure","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"","scope":21,"stateVariable":false,"storageLocation":"calldata","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":3,"name":"ElementaryTypeName","src":"1308:5:1"}],"id":4,"name":"VariableDeclaration","src":"1308:14:1"},{"attributes":{"constant":false,"name":"","scope":21,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":5,"name":"ElementaryTypeName","src":"1332:7:1"}],"id":6,"name":"VariableDeclaration","src":"1332:7:1"},{"attributes":{"constant":false,"name":"","scope":21,"stateVariable":false,"storageLocation":"calldata","type":"uint256[6]","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"uint256[6]"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":7,"name":"ElementaryTypeName","src":"1349:4:1"},{"attributes":{"argumentTypes":null,"hexvalue":"36","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":null,"value":"6"},"id":8,"name":"Literal","src":"1354:1:1"}],"id":9,"name":"ArrayTypeName","src":"1349:7:1"}],"id":10,"name":"VariableDeclaration","src":"1349:16:1"}],"id":11,"name":"ParameterList","src":"1298:73:1"},{"children":[{"attributes":{"constant":false,"name":"","scope":21,"stateVariable":false,"storageLocation":"memory","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":12,"name":"ElementaryTypeName","src":"1419:5:1"}],"id":13,"name":"VariableDeclaration","src":"1419:12:1"}],"id":14,"name":"ParameterList","src":"1418:14:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"encodeAndExit","referencedDeclaration":29,"type":"function () pure"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":30,"type":"type(library SwapABIEncoder)","value":"SwapABIEncoder"},"id":15,"name":"Identifier","src":"1447:14:1"}],"id":17,"name":"MemberAccess","src":"1447:28:1"}],"id":18,"name":"FunctionCall","src":"1447:30:1"}],"id":19,"name":"ExpressionStatement","src":"1447:30:1"}],"id":20,"name":"Block","src":"1437:47:1"}],"id":21,"name":"FunctionDefinition","src":"1277:207:1"}],"id":22,"name":"ContractDefinition","src":"1243:243:1"}],"id":23,"name":"SourceUnit","src":"0:1487:1"}}},"version":"0.5.0+commit.1d4f565a.Linux.g++"}
