{"contracts":{"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/publicRange/PublicRange.sol:PublicRange":{"abi":"[{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"}]","bin":"608060405234801561001057600080fd5b50610788806100206000396000f3fe608060405234801561001057600080fd5b50610019610023565b606060405261021b565b60443560805260643560a0526101643561010401600260017f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018061012435068161014435066024356102e052806103005260006103205260006103405261008a85876104a0565b6080850261036001600160005b878110156101e55760c0810260208a0101600060208201358760008511600181146100c957600081146100dd576100e2565b8a8b8a848e030960c08703350893506100e2565b843593505b506100ee828486610220565b896000518709955060008511156101125789868409925089868309915089868a0990505b60406080850160e0376040808501602037808a0361012052826060528160c05260406101a0606060e060075afa60406101206060602060075afa8116905060406101606060608060075afa811690506040610160608061012060065afa81169050604088608061016060065afa811690508160605260406102206060602060075afa811690506040610260608061022060065afa8116905060406101e060806101a060065afa811690508015156101cf5761019060005260206000fd5b6040880197505050505050600181019050610097565b506101f060846102cf565b846102e083036102e0200684811415156102105761019460005260206000fd5b505050505050505050565b6102ca565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760408301356060840135608085013560a086013584838409856003878789898a090908148582830986600388868a888909090814166001891189888b06141660018b118b898d061416161615156102bf5761019060005260206000fd5b505050505050505050565b61049b565b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4781356020830135604084013560608501357f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81147f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa83147f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c285147f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed87148415861588158a1517171717171717156103ad5761019060005260206000fd5b6101e051602052610200516040527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6080527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26060527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa60c0527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b60a0526102605160e05261028051610100528361014052826101205281610180528061016052602080610180602060085afa60205115811517156104925761019060005260206000fd5b50505050505050565b6104dc565b60005b828110156104cc57606060c08202830101608081608084026103600137506001810190506104a3565b5060808202610360206000525050565b6104e46104e6565b005b61016435610104016002600161018435610124016101a435610124016101c4356101440160016101a05260606101c05260c06102005260006102405260006102605261012435610280526102a0846020820152602085026102e00160005b8681101561060f5760c0810260208a0101600160005260806040820160203760c08352600160208401528635604084015260a06000206060840152604060808401527f800000000000000000000000000000000000000000000000000000000000000060016060830135160260408201351760a08401527f8000000000000000000000000000000000000000000000000000000000000000600160a0830135160260808201351760c08401528383036020830260408601015260e08301925050600181019050610544565b50602082820303825281810360c00161022052809150858703602083015260208688030260400181019050855b8781101561072d5760c0810260208a01016020888303028501358060408703013560016000526080604084016020378060c00185526001602086015260208a850302880135604086015260a060002060608601528060400160808601527f8000000000000000000000000000000000000000000000000000000000000000600160405116026020511760a08601527f8000000000000000000000000000000000000000000000000000000000000000600160805116026060511760c08601528060208803830160e087013785850360208b86030260408801015260208551018501945050505060018101905061063c565b5060208282030382526102a081038060a0016101e0528061010001610180526020610160528061014001610160f3fea165627a7a72305820a974f3cd0c1dd292785af31d9e65864dd72711d240504cde61131a11ec2785cf0029","bin-runtime":"608060405234801561001057600080fd5b50610019610023565b606060405261021b565b60443560805260643560a0526101643561010401600260017f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018061012435068161014435066024356102e052806103005260006103205260006103405261008a85876104a0565b6080850261036001600160005b878110156101e55760c0810260208a0101600060208201358760008511600181146100c957600081146100dd576100e2565b8a8b8a848e030960c08703350893506100e2565b843593505b506100ee828486610220565b896000518709955060008511156101125789868409925089868309915089868a0990505b60406080850160e0376040808501602037808a0361012052826060528160c05260406101a0606060e060075afa60406101206060602060075afa8116905060406101606060608060075afa811690506040610160608061012060065afa81169050604088608061016060065afa811690508160605260406102206060602060075afa811690506040610260608061022060065afa8116905060406101e060806101a060065afa811690508015156101cf5761019060005260206000fd5b6040880197505050505050600181019050610097565b506101f060846102cf565b846102e083036102e0200684811415156102105761019460005260206000fd5b505050505050505050565b6102ca565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760408301356060840135608085013560a086013584838409856003878789898a090908148582830986600388868a888909090814166001891189888b06141660018b118b898d061416161615156102bf5761019060005260206000fd5b505050505050505050565b61049b565b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4781356020830135604084013560608501357f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81147f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa83147f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c285147f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed87148415861588158a1517171717171717156103ad5761019060005260206000fd5b6101e051602052610200516040527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6080527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26060527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa60c0527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b60a0526102605160e05261028051610100528361014052826101205281610180528061016052602080610180602060085afa60205115811517156104925761019060005260206000fd5b50505050505050565b6104dc565b60005b828110156104cc57606060c08202830101608081608084026103600137506001810190506104a3565b5060808202610360206000525050565b6104e46104e6565b005b61016435610104016002600161018435610124016101a435610124016101c4356101440160016101a05260606101c05260c06102005260006102405260006102605261012435610280526102a0846020820152602085026102e00160005b8681101561060f5760c0810260208a0101600160005260806040820160203760c08352600160208401528635604084015260a06000206060840152604060808401527f800000000000000000000000000000000000000000000000000000000000000060016060830135160260408201351760a08401527f8000000000000000000000000000000000000000000000000000000000000000600160a0830135160260808201351760c08401528383036020830260408601015260e08301925050600181019050610544565b50602082820303825281810360c00161022052809150858703602083015260208688030260400181019050855b8781101561072d5760c0810260208a01016020888303028501358060408703013560016000526080604084016020378060c00185526001602086015260208a850302880135604086015260a060002060608601528060400160808601527f8000000000000000000000000000000000000000000000000000000000000000600160405116026020511760a08601527f8000000000000000000000000000000000000000000000000000000000000000600160805116026060511760c08601528060208803830160e087013785850360208b86030260408801015260208551018501945050505060018101905061063c565b5060208282030382526102a081038060a0016101e0528061010001610180526020610160528061014001610160f3fea165627a7a72305820a974f3cd0c1dd292785af31d9e65864dd72711d240504cde61131a11ec2785cf0029","srcmap":"1336:17132:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1336:17132:0;;;;;;;","srcmap-runtime":"1336:17132:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1336:17132:0;2123:21;;;;2412:4;2406;2399:18;4848:7170;;;5077:4;5064:18;5058:4;5051:32;5133:4;5120:18;5114:4;5107:32;5200:5;5187:19;5180:5;5176:31;5260:1;5287;5322:66;5447:9;5439:5;5426:19;5422:35;5523:9;5515:5;5502:19;5498:35;5578:4;5565:18;5558:5;5551:33;5659:16;5652:5;5645:31;5708:1;5701:5;5694:16;5772:1;5765:5;5758:16;5822:25;5845:1;5838:5;5822:25;;;5891:4;5888:1;5884:12;5877:5;5873:24;6074:1;6229;6214:4798;6239:1;6236;6233:8;6214:4798;;;6417:4;6414:1;6410:12;6403:4;6396:5;6392:16;6388:35;;6507:4;6496:9;6492:20;6479:34;6543:9;6587:1;6584;6581:8;6615:1;6610:418;;;;7080:1;7075:84;;;;6574:585;;6610:418;6971:9;6930;6912:16;6908:1;6897:9;6893:17;6886:54;6843:4;6832:9;6828:20;6815:34;6779:227;6774:232;;6610:418;;7075:84;7126:9;7113:23;7108:28;;6574:585;;7241:35;7274:1;7271;7260:9;7241:35;;;7326:9;7319:4;7313:11;7310:1;7303:33;7298:38;;7415:1;7412;7409:8;7406:2;;;7543:9;7540:1;7537;7530:23;7525:28;;7602:9;7599:1;7596;7589:23;7584:28;;7669:9;7666:1;7655:9;7648:31;7643:36;;7406:2;8564:4;8557;8546:9;8542:20;8536:4;8523:46;8631:4;8624;8613:9;8609:20;8603:4;8590:46;8686:1;8675:9;8671:17;8664:5;8657:32;8724:1;8718:4;8711:15;8760:1;8754:4;8747:15;9166:4;9159:5;9153:4;9147;9144:1;9139:3;9128:43;9265:4;9258:5;9252:4;9246;9243:1;9238:3;9227:43;9219:6;9215:56;9205:66;;9352:4;9345:5;9339:4;9333;9330:1;9325:3;9314:43;9306:6;9302:56;9292:66;;9639:4;9632:5;9626:4;9619:5;9616:1;9611:3;9600:44;9592:6;9588:57;9578:67;;9874:4;9871:1;9865:4;9858:5;9855:1;9850:3;9839:40;9831:6;9827:53;9817:63;;10316:1;10310:4;10303:15;10399:4;10392:5;10386:4;10380;10377:1;10372:3;10361:43;10353:6;10349:56;10339:66;;10576:4;10569:5;10563:4;10556:5;10553:1;10548:3;10537:44;10529:6;10525:57;10515:67;;10751:4;10744:5;10738:4;10731:5;10728:1;10723:3;10712:44;10704:6;10700:57;10690:67;;10875:6;10868:14;10865:2;;;10898:3;10892:4;10885:17;10916:4;10910;10903:18;10865:2;10956:4;10953:1;10949:12;10944:17;;6264:4748;;;;;6256:4;6253:1;6249:12;6244:17;;6214:4798;;;6218:14;11262:21;11278:4;11262:21;;;11795:9;11786:5;11783:1;11779:13;11772:5;11762:31;11758:47;11846:9;11836:8;11833:23;11826:31;11823:2;;;11943:3;11937:4;11930:17;11981:4;11975;11968:18;11823:2;4879:7139;;;;;;;;;;;12357:2065;;;12432:66;12534;12654:4;12648;12644:15;12631:29;12714:4;12708;12704:15;12691:29;12774:4;12768;12764:15;12751:29;12834:4;12828;12824:15;12811:29;14203:11;14195:6;14187;14180:35;14134:11;14131:1;14080:11;14035:6;13984:11;13976:6;13968;13961:35;13917:175;13910:236;13856:389;13784:11;13776:6;13768;13761:35;13715:11;13675:1;13624:11;13616:6;13602:11;13594:6;13586;13579:35;13535:101;13528:199;13474:352;13441:830;13322:1;13319;13316:8;13248:1;13236:9;13233:1;13229:17;13226:24;13189:200;13083:1;13080;13077:8;13009:1;12997:9;12994:1;12990:17;12987:24;12950:209;12917:498;12888:1405;12860:1451;12857:2;;;14347:3;14341:4;14334:17;14385:4;14379;14372:18;12857:2;12397:2025;;;;;;;;;;;14657:2490;;;14723:66;14833:2;14820:16;14888:4;14884:2;14880:13;14867:27;14946:4;14942:2;14938:13;14925:27;15004:4;15000:2;14996:13;14983:27;15599:65;15591:6;15588:77;15498:66;15490:6;15487:78;15397:66;15389:6;15386:78;15296:66;15288:6;15285:78;15255:6;15248:14;15218:6;15211:14;15181:6;15174:14;15145:6;15138:14;15114:75;15111:115;15108:155;15105:259;15102:363;15099:467;15096:570;15093:2;;;15718:3;15712:4;15705:17;15756:4;15750;15743:18;15093:2;16131:5;16125:12;16119:4;16112:26;16197:5;16191:12;16185:4;16178:26;16257:66;16251:4;16244:80;16354:66;16348:4;16341:80;16451:66;16445:4;16438:80;16548:65;16542:4;16535:79;16650:5;16644:12;16638:4;16631:26;16717:5;16711:12;16704:5;16697:27;16778:6;16771:5;16764:21;16816:6;16809:5;16802:21;16854:6;16847:5;16840:21;16892:6;16885:5;16878:21;16970:4;16964;16957:5;16951:4;16948:1;16943:3;16932:43;17029:4;17023:11;17016:19;17006:7;16999:15;16996:40;16993:2;;;17072:3;17066:4;17059:17;17110:4;17104;17097:18;16993:2;14686:2461;;;;;;;;;17757:475;;;17825:1;17810:202;17835:1;17832;17829:8;17810:202;;;17921:4;17913;17910:1;17906:12;17899:5;17895:24;17891:35;17989:4;17982:5;17974:4;17971:1;17967:12;17960:5;17956:24;17943:51;17860:152;17852:4;17849:1;17845:12;17840:17;;17810:202;;;17814:14;18211:4;18208:1;18204:12;18197:5;18187:30;18181:4;18174:44;17792:440;;;;18422:37;:35;:37::i;:::-;1336:17132;2027:8980:1;2176:5;2163:19;2156:5;2152:31;2205:1;2228;2285:5;2272:19;2265:5;2261:31;2385:5;2372:19;2365:5;2361:31;2482:5;2469:19;2462:5;2458:31;4456:4;4449:5;4442:19;4535:4;4528:5;4521:19;4669:4;4662:5;4655:19;4808:4;4801:5;4794:19;4868:1;4861:5;4854:16;4980:5;4967:19;4960:5;4953:34;5017:5;5118:1;5111:4;5101:8;5097:19;5090:30;5287:4;5284:1;5280:12;5273:5;5269:24;5322:1;5307:2108;5332:1;5329;5326:8;5307:2108;;;5421:4;5418:1;5414:12;5407:4;5400:5;5396:16;5392:35;5506:4;5500;5493:18;5596:4;5589;5578:9;5574:20;5568:4;5555:46;5694:4;5691:1;5684:15;5795:4;5788;5785:1;5781:12;5774:26;5901:11;5888:25;5881:4;5878:1;5874:12;5867:47;6030:4;6024;6014:21;6007:4;6004:1;6000:12;5993:43;6158:4;6151;6148:1;6144:12;6137:26;6510:66;6475:4;6467;6456:9;6452:20;6439:34;6435:45;6402:200;6370:4;6359:9;6355:20;6342:34;6314:310;6287:4;6284:1;6280:12;6252:390;6989:66;6954:4;6946;6935:9;6931:20;6918:34;6914:45;6881:200;6849:4;6838:9;6834:20;6821:34;6793:310;6766:4;6763:1;6759:12;6731:390;7276:8;7273:1;7269:16;7261:4;7258:1;7254:12;7247:4;7237:8;7233:19;7229:38;7222:64;7396:4;7393:1;7389:12;7384:17;;5357:2058;5349:4;5346:1;5342:12;5337:17;;5307:2108;;;5311:14;7546:4;7535:8;7532:1;7528:16;7524:27;7514:8;7507:45;7596:8;7593:1;7589:16;7583:4;7579:27;7572:5;7565:42;7679:1;7667:13;;7728:1;7725;7721:9;7714:4;7704:8;7700:19;7693:38;7813:4;7809:1;7806;7802:9;7798:20;7792:4;7788:31;7785:1;7781:39;7776:44;;7877:1;7862:2474;7887:1;7884;7881:8;7862:2474;;;8010:4;8007:1;8003:12;7996:4;7989:5;7985:16;7981:35;8139:4;8135:1;8132;8128:9;8124:20;8114:8;8110:35;8097:49;8263:13;8256:4;8246:8;8242:19;8238:39;8225:53;8309:4;8303;8296:18;8448:4;8441;8430:9;8426:20;8420:4;8407:46;8555:14;8549:4;8545:25;8542:1;8535:36;8667:4;8660;8657:1;8653:12;8646:26;8817:4;8813:1;8810;8806:9;8802:20;8788:12;8784:39;8771:53;8764:4;8761:1;8757:12;8750:75;8914:4;8908;8898:21;8891:4;8888:1;8884:12;8877:43;9028:14;9022:4;9018:25;9011:4;9008:1;9004:12;8997:47;9345:66;9310:4;9303;9297:11;9293:22;9260:177;9229:4;9223:11;9195:264;9168:4;9165:1;9161:12;9133:344;9754:66;9723:4;9716;9710:11;9706:22;9677:165;9650:4;9644:11;9620:240;9597:4;9594:1;9590:12;9566:312;10012:14;10004:4;9994:8;9990:19;9975:13;9971:39;9964:4;9961:1;9957:12;9944:83;10190:8;10187:1;10183:16;10175:4;10171:1;10168;10164:9;10160:20;10153:4;10143:8;10139:19;10135:46;10128:72;10316:4;10312:1;10306:8;10302:19;10299:1;10295:27;10290:32;;7912:2424;;;7904:4;7901:1;7897:12;7892:17;;7862:2474;;;7866:14;10458:4;10447:8;10444:1;10440:16;10436:27;10426:8;10419:45;10558:5;10555:1;10551:13;10771:11;10765:4;10761:22;10754:5;10747:37;10822:11;10815:5;10811:23;10804:5;10797:38;10904:4;10897:5;10890:19;10947:11;10940:5;10936:23;10929:5;10922:38"},"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/publicRange/PublicRangeABIEncoder.sol:PublicRangeABIEncoder":{"abi":"[]","bin":"604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820aaecf04500a291b3657941ff9a291b988612bde8c65fc69545d7c480fc0986c60029","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820aaecf04500a291b3657941ff9a291b988612bde8c65fc69545d7c480fc0986c60029","srcmap":"1266:9743:1:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24","srcmap-runtime":"1266:9743:1:-;;;;;;;;"},"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/interfaces/PublicRangeInterface.sol:PublicRangeInterface":{"abi":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256[6]\"}],\"name\":\"validatePublicRange\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}]","bin":"","bin-runtime":"","srcmap":"","srcmap-runtime":""}},"sourceList":["/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/publicRange/PublicRange.sol","/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/publicRange/PublicRangeABIEncoder.sol","/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/interfaces/PublicRangeInterface.sol"],"sources":{"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/publicRange/PublicRange.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/publicRange/PublicRange.sol","exportedSymbols":{"PublicRange":[14]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0","<","0.6",".0"]},"id":1,"name":"PragmaDirective","src":"0:31:0"},{"attributes":{"SourceUnit":23,"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/publicRange/PublicRangeABIEncoder.sol","file":"./PublicRangeABIEncoder.sol","scope":15,"symbolAliases":[null],"unitAlias":""},"id":2,"name":"ImportDirective","src":"33:37:0"},{"attributes":{"SourceUnit":39,"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/interfaces/PublicRangeInterface.sol","file":"../../../interfaces/PublicRangeInterface.sol","scope":15,"symbolAliases":[null],"unitAlias":""},"id":3,"name":"ImportDirective","src":"71:54:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title PublicRange\n@author AZTEC\n@dev Library to validate AZTEC public range zero-knowledge proofs\nDon't include this as an internal library. This contract uses \na static memory table to cache elliptic curve primitives and hashes.\nCalling this internally from another function will lead to memory \nmutation and undefined behaviour.\nThe intended use case is to call this externally via `staticcall`. External \ncalls to OptimizedAZTEC can be treated as pure functions as this contract \ncontains no storage and makes no external calls (other than to precompiles)\n * Copyright 2020 Spilsbury Holdings Ltd \n * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \"License\");\nyou may not use this file except in compliance with the License.\n * This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n * You should have received a copy of the GNU Lesser General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.*","fullyImplemented":true,"linearizedBaseContracts":[14],"name":"PublicRange","scope":15},"children":[{"attributes":{"documentation":"@dev PublicRange.sol will take any transaction sent to it and attempt to validate a zero knowledge proof.\nIf the proof is not valid, the transaction throws.\n@notice See PublicRangeInterface for how method calls should be constructed.\nPublicRange.sol is written in YUL to enable manual memory management and for other efficiency savings.*","implemented":true,"isConstructor":false,"kind":"fallback","modifiers":[null],"name":"","scope":14,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":4,"name":"ParameterList","src":"1794:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":5,"name":"ParameterList","src":"1806:0:0"},{"children":[{"attributes":{"externalReferences":[null],"operations":"{\n    validatePublicRange()\n    mstore(0x40, 0x60)\n    function validatePublicRange()\n    {\n        mstore(0x80, calldataload(0x44))\n        mstore(0xa0, calldataload(0x64))\n        let notes := add(0x104, calldataload(0x164))\n        let n := 2\n        let m := 1\n        let gen_order := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001\n        let challenge := mod(calldataload(0x124), gen_order)\n        let publicComparison := mod(calldataload(0x144), gen_order)\n        mstore(0x2e0, calldataload(0x24))\n        mstore(0x300, publicComparison)\n        mstore(0x320, 0)\n        mstore(0x340, 0)\n        hashCommitments(notes, n)\n        let b := add(0x360, mul(n, 0x80))\n        let x := 1\n        for {\n            let i := 0\n        }\n        lt(i, n)\n        {\n            i := add(i, 0x01)\n        }\n        {\n            let noteIndex := add(add(notes, 0x20), mul(i, 0xc0))\n            let k\n            let a := calldataload(add(noteIndex, 0x20))\n            let c := challenge\n            switch gt(i, 0)\n            case 1 {\n                k := addmod(calldataload(sub(noteIndex, 0xc0)), mulmod(sub(gen_order, c), publicComparison, gen_order), gen_order)\n            }\n            case 0 {\n                k := calldataload(noteIndex)\n            }\n            validateCommitment(noteIndex, k, a)\n            x := mulmod(x, mload(0x00), gen_order)\n            if gt(i, 0)\n            {\n                k := mulmod(k, x, gen_order)\n                a := mulmod(a, x, gen_order)\n                c := mulmod(challenge, x, gen_order)\n            }\n            calldatacopy(0xe0, add(noteIndex, 0x80), 0x40)\n            calldatacopy(0x20, add(noteIndex, 0x40), 0x40)\n            mstore(0x120, sub(gen_order, c))\n            mstore(0x60, k)\n            mstore(0xc0, a)\n            let result := staticcall(gas(), 7, 0xe0, 0x60, 0x1a0, 0x40)\n            result := and(result, staticcall(gas(), 7, 0x20, 0x60, 0x120, 0x40))\n            result := and(result, staticcall(gas(), 7, 0x80, 0x60, 0x160, 0x40))\n            result := and(result, staticcall(gas(), 6, 0x120, 0x80, 0x160, 0x40))\n            result := and(result, staticcall(gas(), 6, 0x160, 0x80, b, 0x40))\n            mstore(0x60, c)\n            result := and(result, staticcall(gas(), 7, 0x20, 0x60, 0x220, 0x40))\n            result := and(result, staticcall(gas(), 6, 0x220, 0x80, 0x260, 0x40))\n            result := and(result, staticcall(gas(), 6, 0x1a0, 0x80, 0x1e0, 0x40))\n            if iszero(result)\n            {\n                mstore(0x00, 400)\n                revert(0x00, 0x20)\n            }\n            b := add(b, 0x40)\n        }\n        validatePairing(0x84)\n        let expected := mod(keccak256(0x2e0, sub(b, 0x2e0)), gen_order)\n        if iszero(eq(expected, challenge))\n        {\n            mstore(0x00, 404)\n            revert(0x00, 0x20)\n        }\n    }\n    function validateCommitment(note, k, a)\n    {\n        let gen_order := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001\n        let field_order := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n        let gammaX := calldataload(add(note, 0x40))\n        let gammaY := calldataload(add(note, 0x60))\n        let sigmaX := calldataload(add(note, 0x80))\n        let sigmaY := calldataload(add(note, 0xa0))\n        if iszero(and(and(and(eq(mod(a, gen_order), a), gt(a, 1)), and(eq(mod(k, gen_order), k), gt(k, 1))), and(eq(addmod(mulmod(mulmod(sigmaX, sigmaX, field_order), sigmaX, field_order), 3, field_order), mulmod(sigmaY, sigmaY, field_order)), eq(addmod(mulmod(mulmod(gammaX, gammaX, field_order), gammaX, field_order), 3, field_order), mulmod(gammaY, gammaY, field_order)))))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n    }\n    function validatePairing(t2)\n    {\n        let field_order := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n        let t2_x_1 := calldataload(t2)\n        let t2_x_2 := calldataload(add(t2, 0x20))\n        let t2_y_1 := calldataload(add(t2, 0x40))\n        let t2_y_2 := calldataload(add(t2, 0x60))\n        if or(or(or(or(or(or(or(iszero(t2_x_1), iszero(t2_x_2)), iszero(t2_y_1)), iszero(t2_y_2)), eq(t2_x_1, 0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed)), eq(t2_x_2, 0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2)), eq(t2_y_1, 0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa)), eq(t2_y_2, 0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n        mstore(0x20, mload(0x1e0))\n        mstore(0x40, mload(0x200))\n        mstore(0x80, 0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed)\n        mstore(0x60, 0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2)\n        mstore(0xc0, 0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa)\n        mstore(0xa0, 0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b)\n        mstore(0xe0, mload(0x260))\n        mstore(0x100, mload(0x280))\n        mstore(0x140, t2_x_1)\n        mstore(0x120, t2_x_2)\n        mstore(0x180, t2_y_1)\n        mstore(0x160, t2_y_2)\n        let success := staticcall(gas(), 8, 0x20, 0x180, 0x20, 0x20)\n        if or(iszero(success), iszero(mload(0x20)))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n    }\n    function hashCommitments(notes, n)\n    {\n        for {\n            let i := 0\n        }\n        lt(i, n)\n        {\n            i := add(i, 0x01)\n        }\n        {\n            let index := add(add(notes, mul(i, 0xc0)), 0x60)\n            calldatacopy(add(0x360, mul(i, 0x80)), index, 0x80)\n        }\n        mstore(0x00, keccak256(0x360, mul(n, 0x80)))\n    }\n}"},"children":[],"id":6,"name":"InlineAssembly","src":"1816:16627:0"},{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"encodeAndExit","referencedDeclaration":21,"type":"function () pure"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":22,"type":"type(library PublicRangeABIEncoder)","value":"PublicRangeABIEncoder"},"id":7,"name":"Identifier","src":"18422:21:0"}],"id":9,"name":"MemberAccess","src":"18422:35:0"}],"id":10,"name":"FunctionCall","src":"18422:37:0"}],"id":11,"name":"ExpressionStatement","src":"18422:37:0"}],"id":12,"name":"Block","src":"1806:16660:0"}],"id":13,"name":"FunctionDefinition","src":"1786:16680:0"}],"id":14,"name":"ContractDefinition","src":"1336:17132:0"}],"id":15,"name":"SourceUnit","src":"0:18469:0"}},"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/publicRange/PublicRangeABIEncoder.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/ACE/validators/publicRange/PublicRangeABIEncoder.sol","exportedSymbols":{"PublicRangeABIEncoder":[22]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0","<","0.6",".0"]},"id":16,"name":"PragmaDirective","src":"0:31:1"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@title PublicRangeABIEncoder\n@author AZTEC\n@dev Library to ABI encode the output of a public range proof verification operation\nDon't include this as an internal library. This contract uses a static memory table to cache\nelliptic curve primitives and hashes.\nCalling this internally from another function will lead to memory mutation and undefined behaviour.\nThe intended use case is to call this externally via `staticcall`.\nExternal calls to OptimizedAZTEC can be treated as pure functions as this contract contains no\nstorage and makes no external calls (other than to precompiles)\n\n * Copyright 2020 Spilsbury Holdings Ltd \n * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \"License\");\nyou may not use this file except in compliance with the License.\n * This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n * You should have received a copy of the GNU Lesser General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.*","fullyImplemented":true,"linearizedBaseContracts":[22],"name":"PublicRangeABIEncoder","scope":23},"children":[{"attributes":{"documentation":"New calldata map\n0x04:0x24      = calldata location of proofData byte array\n0x24:0x44      = message sender\n0x44:0x64      = h_x     // crs\n0x64:0x84      = h_y     // crs\n0x84:0xa4      = t2_x0   // crs\n0xa4:0xc4      = t2_x1   // crs\n0xc4:0xe4      = t2_y0   // crs\n0xe4:0x104     = t2_y1   // crs\n0x104:0x124    = length of proofData byte array\n0x124:0x144    = challenge\n0x144:0x164    = publicComparison\n0x164:0x184    = offset in byte array to notes\n0x184:0x1a4    = offset in byte array to inputOwners\n0x1a4:0x1c4    = offset in byte array to outputOwners\n0x1c4:0x1e4    = offset in byte array to metadata","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"encodeAndExit","scope":22,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":17,"name":"ParameterList","src":"2049:2:1"},{"attributes":{"parameters":[null]},"children":[],"id":18,"name":"ParameterList","src":"2066:0:1"},{"children":[{"attributes":{"externalReferences":[null],"operations":"{\n    let notes := add(0x104, calldataload(0x164))\n    let n := 2\n    let m := 1\n    let inputOwners := add(0x124, calldataload(0x184))\n    let outputOwners := add(0x124, calldataload(0x1a4))\n    let metadata := add(0x144, calldataload(0x1c4))\n    mstore(0x1a0, 0x01)\n    mstore(0x1c0, 0x60)\n    mstore(0x200, 0xc0)\n    mstore(0x240, 0x00)\n    mstore(0x260, 0)\n    mstore(0x280, calldataload(0x124))\n    let inputPtr := 0x2a0\n    mstore(add(inputPtr, 0x20), m)\n    let s := add(0x2e0, mul(m, 0x20))\n    for {\n        let i := 0\n    }\n    lt(i, m)\n    {\n        i := add(i, 0x01)\n    }\n    {\n        let noteIndex := add(add(notes, 0x20), mul(i, 0xc0))\n        mstore(0x00, 0x01)\n        calldatacopy(0x20, add(noteIndex, 0x40), 0x80)\n        mstore(s, 0xc0)\n        mstore(add(s, 0x20), 0x01)\n        mstore(add(s, 0x40), calldataload(inputOwners))\n        mstore(add(s, 0x60), keccak256(0x00, 0xa0))\n        mstore(add(s, 0x80), 0x40)\n        mstore(add(s, 0xa0), or(calldataload(add(noteIndex, 0x40)), mul(and(calldataload(add(noteIndex, 0x60)), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n        mstore(add(s, 0xc0), or(calldataload(add(noteIndex, 0x80)), mul(and(calldataload(add(noteIndex, 0xa0)), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n        mstore(add(add(inputPtr, 0x40), mul(i, 0x20)), sub(s, inputPtr))\n        s := add(s, 0xe0)\n    }\n    mstore(inputPtr, sub(sub(s, inputPtr), 0x20))\n    mstore(0x220, add(0xc0, sub(s, inputPtr)))\n    inputPtr := s\n    mstore(add(inputPtr, 0x20), sub(n, m))\n    s := add(s, add(0x40, mul(sub(n, m), 0x20)))\n    for {\n        let i := m\n    }\n    lt(i, n)\n    {\n        i := add(i, 0x01)\n    }\n    {\n        let noteIndex := add(add(notes, 0x20), mul(i, 0xc0))\n        let metadataIndex := calldataload(add(metadata, mul(sub(i, m), 0x20)))\n        let metadataLength := calldataload(add(sub(metadata, 0x40), metadataIndex))\n        mstore(0x00, 0x01)\n        calldatacopy(0x20, add(noteIndex, 0x40), 0x80)\n        mstore(s, add(0xc0, metadataLength))\n        mstore(add(s, 0x20), 0x01)\n        mstore(add(s, 0x40), calldataload(add(outputOwners, mul(sub(i, m), 0x20))))\n        mstore(add(s, 0x60), keccak256(0x00, 0xa0))\n        mstore(add(s, 0x80), add(0x40, metadataLength))\n        mstore(add(s, 0xa0), or(mload(0x20), mul(and(mload(0x40), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n        mstore(add(s, 0xc0), or(mload(0x60), mul(and(mload(0x80), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n        calldatacopy(add(s, 0xe0), add(metadataIndex, sub(metadata, 0x20)), metadataLength)\n        mstore(add(add(inputPtr, 0x40), mul(sub(i, m), 0x20)), sub(s, inputPtr))\n        s := add(s, add(mload(s), 0x20))\n    }\n    mstore(inputPtr, sub(sub(s, inputPtr), 0x20))\n    let notesLength := sub(s, 0x2a0)\n    mstore(0x1e0, add(0xa0, notesLength))\n    mstore(0x180, add(0x100, notesLength))\n    mstore(0x160, 0x20)\n    return(0x160, add(0x140, notesLength))\n}"},"children":[],"id":19,"name":"InlineAssembly","src":"2076:8931:1"}],"id":20,"name":"Block","src":"2066:8941:1"}],"id":21,"name":"FunctionDefinition","src":"2027:8980:1"}],"id":22,"name":"ContractDefinition","src":"1266:9743:1"}],"id":23,"name":"SourceUnit","src":"0:11010:1"}},"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/interfaces/PublicRangeInterface.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/interfaces/PublicRangeInterface.sol","exportedSymbols":{"PublicRangeInterface":[38]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0","<","0.6",".0"]},"id":24,"name":"PragmaDirective","src":"0:31:2"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"interface","documentation":"@title PublicRangeInterface\n@author AZTEC\n@dev An interface for the Public Range validator contract\n * Copyright 2020 Spilsbury Holdings Ltd \n * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \"License\");\nyou may not use this file except in compliance with the License.\n * This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n * You should have received a copy of the GNU Lesser General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.*","fullyImplemented":false,"linearizedBaseContracts":[38],"name":"PublicRangeInterface","scope":39},"children":[{"attributes":{"body":null,"documentation":null,"implemented":false,"isConstructor":false,"kind":"function","modifiers":[null],"name":"validatePublicRange","scope":38,"stateMutability":"pure","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"","scope":37,"stateVariable":false,"storageLocation":"calldata","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":25,"name":"ElementaryTypeName","src":"896:5:2"}],"id":26,"name":"VariableDeclaration","src":"896:14:2"},{"attributes":{"constant":false,"name":"","scope":37,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":27,"name":"ElementaryTypeName","src":"921:7:2"}],"id":28,"name":"VariableDeclaration","src":"921:7:2"},{"attributes":{"constant":false,"name":"","scope":37,"stateVariable":false,"storageLocation":"calldata","type":"uint256[6]","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"uint256[6]"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":29,"name":"ElementaryTypeName","src":"939:4:2"},{"attributes":{"argumentTypes":null,"hexvalue":"36","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":null,"value":"6"},"id":30,"name":"Literal","src":"944:1:2"}],"id":31,"name":"ArrayTypeName","src":"939:7:2"}],"id":32,"name":"VariableDeclaration","src":"939:16:2"}],"id":33,"name":"ParameterList","src":"886:75:2"},{"children":[{"attributes":{"constant":false,"name":"","scope":37,"stateVariable":false,"storageLocation":"memory","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":34,"name":"ElementaryTypeName","src":"985:5:2"}],"id":35,"name":"VariableDeclaration","src":"985:12:2"}],"id":36,"name":"ParameterList","src":"984:14:2"}],"id":37,"name":"FunctionDefinition","src":"858:141:2"}],"id":38,"name":"ContractDefinition","src":"761:240:2"}],"id":39,"name":"SourceUnit","src":"0:1002:2"}}},"version":"0.5.0+commit.1d4f565a.Linux.g++"}
