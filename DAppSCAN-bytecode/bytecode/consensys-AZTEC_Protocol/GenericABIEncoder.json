{"contracts":{"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/libs/GenericABIEncoder.sol:GenericABIEncoder":{"abi":"[{\"constant\":true,\"inputs\":[{\"name\":\"noteInfo\",\"type\":\"uint256\"},{\"name\":\"publicOwner\",\"type\":\"uint256\"},{\"name\":\"publicValue\",\"type\":\"uint256\"}],\"name\":\"encodeProofOutputsOne\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}]","bin":"61043c610030600b82828239805160001a6073146000811461002057610022565bfe5b5030600052607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610610058576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634bcc8a021461005d575b600080fd5b61009d6004803603606081101561007357600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050610118565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100dd5780820151818401526020810190506100c2565b50505050905090810190601f16801561010a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b606060206101605260016101a05260606101c05260006101826101e060ff871660ff600889908060020a82049150501661ffff60108a908060020a82049150501661ffff60208b908060020a82049150501661ffff60308c908060020a8204915050168a8a610195565b6080019050604081036101805280610160f35b600060a060208a01528260608a01528160808a01526101bc85602088018960a08d016101ff565b905060a0810160408a01526101ea60208802850160208902870160c08a0289018a8c038560a08f01016102f2565b8101905060a0810190506020810389526102ed565b60006001600052826020830152602083026040018201935060005b838110156102d7578285036020820284016040015260c08102850160808160203760c086526001602087015260c08202870135604087015260a06000206060870152604060808701527f8000000000000000000000000000000000000000000000000000000000000000600160405116026020511760a08701527f8000000000000000000000000000000000000000000000000000000000000000600160805116026060511760c087015260e0860195505060018101905061021a565b5060208285030382528184039050949350505050565b610404565b60006001600052826020830152602083026040018201935060005b838110156103ed578285036020820284016040015260c081028501602082026020018801358060408a03013560808360203760c088526001602089015260c08402890135604089015260a060002060608901528060400160808901527f8000000000000000000000000000000000000000000000000000000000000000600160405116026020511760a08901527f8000000000000000000000000000000000000000000000000000000000000000600160805116026060511760c08901528060208b03830160e08a01378060e0018801975050505060018101905061030d565b506020828503038252818403905095945050505050565b9897505050505050505056fea165627a7a72305820f51d0086fa39e56053e8da75f806816f9572abde7efe565830f6a1f2471246ee0029","bin-runtime":"7300000000000000000000000000000000000000003014608060405260043610610058576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634bcc8a021461005d575b600080fd5b61009d6004803603606081101561007357600080fd5b81019080803590602001909291908035906020019092919080359060200190929190505050610118565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100dd5780820151818401526020810190506100c2565b50505050905090810190601f16801561010a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b606060206101605260016101a05260606101c05260006101826101e060ff871660ff600889908060020a82049150501661ffff60108a908060020a82049150501661ffff60208b908060020a82049150501661ffff60308c908060020a8204915050168a8a610195565b6080019050604081036101805280610160f35b600060a060208a01528260608a01528160808a01526101bc85602088018960a08d016101ff565b905060a0810160408a01526101ea60208802850160208902870160c08a0289018a8c038560a08f01016102f2565b8101905060a0810190506020810389526102ed565b60006001600052826020830152602083026040018201935060005b838110156102d7578285036020820284016040015260c08102850160808160203760c086526001602087015260c08202870135604087015260a06000206060870152604060808701527f8000000000000000000000000000000000000000000000000000000000000000600160405116026020511760a08701527f8000000000000000000000000000000000000000000000000000000000000000600160805116026060511760c087015260e0860195505060018101905061021a565b5060208285030382528184039050949350505050565b610404565b60006001600052826020830152602083026040018201935060005b838110156103ed578285036020820284016040015260c081028501602082026020018801358060408a03013560808360203760c088526001602089015260c08402890135604089015260a060002060608901528060400160808901527f8000000000000000000000000000000000000000000000000000000000000000600160405116026020511760a08901527f8000000000000000000000000000000000000000000000000000000000000000600160805116026060511760c08901528060208b03830160e08a01378060e0018801975050505060018101905061030d565b506020828503038252818403905095945050505050565b9897505050505050505056fea165627a7a72305820f51d0086fa39e56053e8da75f806816f9572abde7efe565830f6a1f2471246ee0029","srcmap":"651:7690:0:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24","srcmap-runtime":"651:7690:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;727:816;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;727:816:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;727:816:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;860:12;921:4;914:5;907:19;1006:4;999:5;992:19;1065:4;1058:5;1051:19;1133:9;1152:280;1183:5;1214:4;1203:8;:15;1251:4;1246:1;1234:8;:13;52:12:-1;49:1;45:20;29:14;25:41;7:59;;1234:13:0;1233:22;1288:6;1282:2;1270:8;:14;52:12:-1;49:1;45:20;29:14;25:41;7:59;;1270:14:0;1269:25;1327:6;1321:2;1309:8;:14;52:12:-1;49:1;45:20;29:14;25:41;7:59;;1309:14:0;1308:25;1366:6;1360:2;1348:8;:14;52:12:-1;49:1;45:20;29:14;25:41;7:59;;1348:14:0;1347:25;1386:11;1411;1152:17;:280::i;:::-;1145:4;:287;1133:299;;1489:4;1483;1479:15;1472:5;1465:30;1522:4;1515:5;1508:19;1549:6790;1807:20;2155:4;2148;2139:7;2135:18;2128:32;2200:11;2193:4;2184:7;2180:18;2173:39;2252:11;2245:4;2236:7;2232:18;2225:39;2296:165;2439:8;2416:4;2401:13;2397:24;2366:13;2343:4;2334:7;2330:18;2296:165;;;2277:184;;2534:4;2517:15;2513:26;2506:4;2497:7;2493:18;2486:54;2627:338;2941:4;2926:13;2922:24;2909:11;2905:42;2877:4;2862:13;2858:24;2848:8;2844:39;2816:4;2801:13;2797:24;2782:13;2778:44;2742:13;2732:8;2728:28;2690:15;2683:4;2674:7;2670:18;2666:40;2627:338;;;2594:15;2573:406;2554:425;;3032:4;3015:15;3011:26;2992:45;;3087:4;3070:15;3066:26;3057:7;3050:43;3107:2369;;;;3216:4;3210;3203:18;3461:3;3454:4;3446:6;3442:17;3435:30;3566:4;3561:3;3557:14;3551:4;3547:25;3539:6;3535:38;3524:49;;3605:1;3590:1713;3615:3;3612:1;3609:10;3590:1713;;;3790:6;3781:7;3777:20;3768:4;3765:1;3761:12;3753:6;3749:25;3743:4;3739:36;3732:66;3857:4;3854:1;3850:12;3841:7;3837:26;3948:4;3937:9;3931:4;3918:35;3991:4;3982:7;3975:21;4062:4;4055;4046:7;4042:18;4035:32;4162:4;4159:1;4155:12;4145:8;4141:27;4128:41;4121:4;4112:7;4108:18;4101:69;4248:4;4242;4232:21;4225:4;4216:7;4212:18;4205:49;4315:4;4308;4299:7;4295:18;4288:32;4615:66;4580:4;4573;4567:11;4563:22;4530:181;4495:4;4489:11;4457:280;4426:4;4417:7;4413:18;4360:399;5090:66;5055:4;5048;5042:11;5038:22;5005:181;4970:4;4964:11;4932:280;4901:4;4892:7;4888:18;4856:378;5280:4;5271:7;5267:18;5256:29;;3642:1661;3634:4;3631:1;3627:12;3622:17;;3590:1713;;;3594:14;5362:4;5353:6;5344:7;5340:20;5336:31;5328:6;5321:47;5455:6;5446:7;5442:20;5422:40;;3185:2291;;;;;;;;5490:2832;;;;5614:4;5608;5601:18;5859:3;5852:4;5844:6;5840:17;5833:30;5965:4;5960:3;5956:14;5950:4;5946:25;5938:6;5934:38;5923:49;;6004:1;5989:2159;6014:3;6011:1;6008:10;5989:2159;;;6189:6;6180:7;6176:20;6167:4;6164:1;6160:12;6152:6;6148:25;6142:4;6138:36;6131:66;6256:4;6253:1;6249:12;6240:7;6236:26;6351:4;6348:1;6344:12;6338:4;6334:23;6321:11;6317:41;6304:55;6443:13;6436:4;6423:11;6419:22;6415:42;6402:56;6544:4;6533:9;6527:4;6514:35;6587:4;6578:7;6571:21;6658:4;6651;6642:7;6638:18;6631:32;6758:4;6755:1;6751:12;6741:8;6737:27;6724:41;6717:4;6708:7;6704:18;6697:69;6844:4;6838;6828:21;6821:4;6812:7;6808:18;6801:49;6921:14;6915:4;6911:25;6904:4;6895:7;6891:18;6884:53;7232:66;7197:4;7190;7184:11;7180:22;7147:181;7112:4;7106:11;7074:280;7043:4;7034:7;7030:18;6977:399;7707:66;7672:4;7665;7659:11;7655:22;7622:181;7587:4;7581:11;7549:280;7518:4;7509:7;7505:18;7473:378;8022:14;7990:4;7977:11;7973:22;7958:13;7954:42;7923:4;7914:7;7910:18;7872:186;8114:14;8108:4;8104:25;8095:7;8091:39;8080:50;;6041:2107;;;6033:4;6030:1;6026:12;6021:17;;5989:2159;;;5993:14;8207:4;8198:6;8189:7;8185:20;8181:31;8173:6;8166:47;8301:6;8292:7;8288:20;8267:41;;5583:2739;;;;;;;;;1848:6485;;;;;;;;;;:::o"}},"sourceList":["/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/libs/GenericABIEncoder.sol"],"sources":{"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/libs/GenericABIEncoder.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/consensys-AZTEC_Protocol/AZTEC-develop/packages/protocol/contracts/libs/GenericABIEncoder.sol","exportedSymbols":{"GenericABIEncoder":[80]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0","<","0.6",".0"]},"id":1,"name":"PragmaDirective","src":"0:31:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"Copyright 2020 Spilsbury Holdings Ltd \n * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \"License\");\nyou may not use this file except in compliance with the License.\n * This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n * You should have received a copy of the GNU Lesser General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.*","fullyImplemented":true,"linearizedBaseContracts":[80],"name":"GenericABIEncoder","scope":81},"children":[{"attributes":{"constant":true,"name":"NOTE_TYPE","scope":80,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"private"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2,"name":"ElementaryTypeName","src":"684:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":3,"name":"Literal","src":"718:1:0"}],"id":4,"name":"VariableDeclaration","src":"684:35:0"},{"attributes":{"documentation":null,"implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"encodeProofOutputsOne","scope":80,"stateMutability":"pure","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"noteInfo","scope":56,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":5,"name":"ElementaryTypeName","src":"767:4:0"}],"id":6,"name":"VariableDeclaration","src":"767:13:0"},{"attributes":{"constant":false,"name":"publicOwner","scope":56,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":7,"name":"ElementaryTypeName","src":"790:4:0"}],"id":8,"name":"VariableDeclaration","src":"790:16:0"},{"attributes":{"constant":false,"name":"publicValue","scope":56,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":9,"name":"ElementaryTypeName","src":"816:4:0"}],"id":10,"name":"VariableDeclaration","src":"816:16:0"}],"id":11,"name":"ParameterList","src":"757:81:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":56,"stateVariable":false,"storageLocation":"memory","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":12,"name":"ElementaryTypeName","src":"860:5:0"}],"id":13,"name":"VariableDeclaration","src":"860:12:0"}],"id":14,"name":"ParameterList","src":"859:14:0"},{"children":[{"attributes":{"externalReferences":[null],"operations":"{\n    mstore(0x160, 0x20)\n    mstore(0x1a0, 0x01)\n    mstore(0x1c0, 0x60)\n}"},"children":[],"id":15,"name":"InlineAssembly","src":"884:253:0"},{"attributes":{"assignments":[17]},"children":[{"attributes":{"constant":false,"name":"size","scope":55,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":16,"name":"ElementaryTypeName","src":"1133:4:0"}],"id":17,"name":"VariableDeclaration","src":"1133:9:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30783830","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 128","value":"0x80"},"id":18,"name":"Literal","src":"1145:4:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"uint256","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_rational_480_by_1","typeString":"int_const 480"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"overloadedDeclarations":[null],"referencedDeclaration":79,"type":"function (uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256) pure returns (uint256)","value":"encodeProofOutput"},"id":19,"name":"Identifier","src":"1152:17:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3078316530","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 480","value":"0x1e0"},"id":20,"name":"Literal","src":"1183:5:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":6,"type":"uint256","value":"noteInfo"},"id":21,"name":"Identifier","src":"1203:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30786666","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 255","value":"0xff"},"id":22,"name":"Literal","src":"1214:4:0"}],"id":23,"name":"BinaryOperation","src":"1203:15:0"}],"id":24,"name":"TupleExpression","src":"1202:17:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">>","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":6,"type":"uint256","value":"noteInfo"},"id":25,"name":"Identifier","src":"1234:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"38","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 8","value":"8"},"id":26,"name":"Literal","src":"1246:1:0"}],"id":27,"name":"BinaryOperation","src":"1234:13:0"}],"id":28,"name":"TupleExpression","src":"1233:15:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30786666","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 255","value":"0xff"},"id":29,"name":"Literal","src":"1251:4:0"}],"id":30,"name":"BinaryOperation","src":"1233:22:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">>","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":6,"type":"uint256","value":"noteInfo"},"id":31,"name":"Identifier","src":"1270:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3136","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 16","value":"16"},"id":32,"name":"Literal","src":"1282:2:0"}],"id":33,"name":"BinaryOperation","src":"1270:14:0"}],"id":34,"name":"TupleExpression","src":"1269:16:0"},{"attributes":{"argumentTypes":null,"hexvalue":"307866666666","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 65535","value":"0xffff"},"id":35,"name":"Literal","src":"1288:6:0"}],"id":36,"name":"BinaryOperation","src":"1269:25:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">>","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":6,"type":"uint256","value":"noteInfo"},"id":37,"name":"Identifier","src":"1309:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3332","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 32","value":"32"},"id":38,"name":"Literal","src":"1321:2:0"}],"id":39,"name":"BinaryOperation","src":"1309:14:0"}],"id":40,"name":"TupleExpression","src":"1308:16:0"},{"attributes":{"argumentTypes":null,"hexvalue":"307866666666","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 65535","value":"0xffff"},"id":41,"name":"Literal","src":"1327:6:0"}],"id":42,"name":"BinaryOperation","src":"1308:25:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"&","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">>","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":6,"type":"uint256","value":"noteInfo"},"id":43,"name":"Identifier","src":"1348:8:0"},{"attributes":{"argumentTypes":null,"hexvalue":"3438","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 48","value":"48"},"id":44,"name":"Literal","src":"1360:2:0"}],"id":45,"name":"BinaryOperation","src":"1348:14:0"}],"id":46,"name":"TupleExpression","src":"1347:16:0"},{"attributes":{"argumentTypes":null,"hexvalue":"307866666666","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 65535","value":"0xffff"},"id":47,"name":"Literal","src":"1366:6:0"}],"id":48,"name":"BinaryOperation","src":"1347:25:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":8,"type":"uint256","value":"publicOwner"},"id":49,"name":"Identifier","src":"1386:11:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":10,"type":"uint256","value":"publicValue"},"id":50,"name":"Identifier","src":"1411:11:0"}],"id":51,"name":"FunctionCall","src":"1152:280:0"}],"id":52,"name":"BinaryOperation","src":"1145:287:0"}],"id":53,"name":"VariableDeclarationStatement","src":"1133:299:0"},{"attributes":{"externalReferences":[{"size":{"declaration":17,"isOffset":false,"isSlot":false,"src":"1483:4:0","valueSize":1}},{"size":{"declaration":17,"isOffset":false,"isSlot":false,"src":"1522:4:0","valueSize":1}}],"operations":"{\n    mstore(0x180, sub(size, 0x40))\n    return(0x160, size)\n}"},"children":[],"id":54,"name":"InlineAssembly","src":"1442:101:0"}],"id":55,"name":"Block","src":"874:669:0"}],"id":56,"name":"FunctionDefinition","src":"727:816:0"},{"attributes":{"documentation":null,"implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"encodeProofOutput","scope":80,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"freePtr","scope":79,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":57,"name":"ElementaryTypeName","src":"1585:4:0"}],"id":58,"name":"VariableDeclaration","src":"1585:12:0"},{"attributes":{"constant":false,"name":"numNotes","scope":79,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":59,"name":"ElementaryTypeName","src":"1607:4:0"}],"id":60,"name":"VariableDeclaration","src":"1607:13:0"},{"attributes":{"constant":false,"name":"numInputNotes","scope":79,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":61,"name":"ElementaryTypeName","src":"1630:4:0"}],"id":62,"name":"VariableDeclaration","src":"1630:18:0"},{"attributes":{"constant":false,"name":"offsetToNotes","scope":79,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":63,"name":"ElementaryTypeName","src":"1658:4:0"}],"id":64,"name":"VariableDeclaration","src":"1658:18:0"},{"attributes":{"constant":false,"name":"ownerPtr","scope":79,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":65,"name":"ElementaryTypeName","src":"1686:4:0"}],"id":66,"name":"VariableDeclaration","src":"1686:13:0"},{"attributes":{"constant":false,"name":"metadataPtr","scope":79,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":67,"name":"ElementaryTypeName","src":"1709:4:0"}],"id":68,"name":"VariableDeclaration","src":"1709:16:0"},{"attributes":{"constant":false,"name":"publicOwner","scope":79,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":69,"name":"ElementaryTypeName","src":"1735:4:0"}],"id":70,"name":"VariableDeclaration","src":"1735:16:0"},{"attributes":{"constant":false,"name":"publicValue","scope":79,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":71,"name":"ElementaryTypeName","src":"1761:4:0"}],"id":72,"name":"VariableDeclaration","src":"1761:16:0"}],"id":73,"name":"ParameterList","src":"1575:208:0"},{"children":[{"attributes":{"constant":false,"name":"proofOutputSize","scope":79,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":74,"name":"ElementaryTypeName","src":"1807:4:0"}],"id":75,"name":"VariableDeclaration","src":"1807:20:0"}],"id":76,"name":"ParameterList","src":"1806:22:0"},{"children":[{"attributes":{"externalReferences":[{"proofOutputSize":{"declaration":75,"isOffset":false,"isSlot":false,"src":"2277:15:0","valueSize":1}},{"proofOutputSize":{"declaration":75,"isOffset":false,"isSlot":false,"src":"2992:15:0","valueSize":1}},{"freePtr":{"declaration":58,"isOffset":false,"isSlot":false,"src":"2139:7:0","valueSize":1}},{"publicOwner":{"declaration":70,"isOffset":false,"isSlot":false,"src":"2200:11:0","valueSize":1}},{"freePtr":{"declaration":58,"isOffset":false,"isSlot":false,"src":"2184:7:0","valueSize":1}},{"publicValue":{"declaration":72,"isOffset":false,"isSlot":false,"src":"2252:11:0","valueSize":1}},{"freePtr":{"declaration":58,"isOffset":false,"isSlot":false,"src":"2236:7:0","valueSize":1}},{"freePtr":{"declaration":58,"isOffset":false,"isSlot":false,"src":"2334:7:0","valueSize":1}},{"freePtr":{"declaration":58,"isOffset":false,"isSlot":false,"src":"2497:7:0","valueSize":1}},{"proofOutputSize":{"declaration":75,"isOffset":false,"isSlot":false,"src":"2517:15:0","valueSize":1}},{"numInputNotes":{"declaration":62,"isOffset":false,"isSlot":false,"src":"2366:13:0","valueSize":1}},{"ownerPtr":{"declaration":66,"isOffset":false,"isSlot":false,"src":"2439:8:0","valueSize":1}},{"offsetToNotes":{"declaration":64,"isOffset":false,"isSlot":false,"src":"2401:13:0","valueSize":1}},{"proofOutputSize":{"declaration":75,"isOffset":false,"isSlot":false,"src":"2554:15:0","valueSize":1}},{"proofOutputSize":{"declaration":75,"isOffset":false,"isSlot":false,"src":"3015:15:0","valueSize":1}},{"proofOutputSize":{"declaration":75,"isOffset":false,"isSlot":false,"src":"2594:15:0","valueSize":1}},{"proofOutputSize":{"declaration":75,"isOffset":false,"isSlot":false,"src":"2690:15:0","valueSize":1}},{"freePtr":{"declaration":58,"isOffset":false,"isSlot":false,"src":"2674:7:0","valueSize":1}},{"freePtr":{"declaration":58,"isOffset":false,"isSlot":false,"src":"3057:7:0","valueSize":1}},{"numNotes":{"declaration":60,"isOffset":false,"isSlot":false,"src":"2732:8:0","valueSize":1}},{"numInputNotes":{"declaration":62,"isOffset":false,"isSlot":false,"src":"2742:13:0","valueSize":1}},{"offsetToNotes":{"declaration":64,"isOffset":false,"isSlot":false,"src":"2782:13:0","valueSize":1}},{"numInputNotes":{"declaration":62,"isOffset":false,"isSlot":false,"src":"2801:13:0","valueSize":1}},{"ownerPtr":{"declaration":66,"isOffset":false,"isSlot":false,"src":"2848:8:0","valueSize":1}},{"numInputNotes":{"declaration":62,"isOffset":false,"isSlot":false,"src":"2862:13:0","valueSize":1}},{"metadataPtr":{"declaration":68,"isOffset":false,"isSlot":false,"src":"2909:11:0","valueSize":1}},{"numInputNotes":{"declaration":62,"isOffset":false,"isSlot":false,"src":"2926:13:0","valueSize":1}},{"proofOutputSize":{"declaration":75,"isOffset":false,"isSlot":false,"src":"3070:15:0","valueSize":1}}],"operations":"{\n    mstore(add(freePtr, 0x20), 0xa0)\n    mstore(add(freePtr, 0x60), publicOwner)\n    mstore(add(freePtr, 0x80), publicValue)\n    proofOutputSize := encodeInputNotes(add(freePtr, 0xa0), numInputNotes, add(offsetToNotes, 0x20), ownerPtr)\n    mstore(add(freePtr, 0x40), add(proofOutputSize, 0xa0))\n    proofOutputSize := add(proofOutputSize, encodeOutputNotes(add(add(freePtr, 0xa0), proofOutputSize), sub(numNotes, numInputNotes), add(offsetToNotes, mul(numInputNotes, 0xc0)), add(ownerPtr, mul(numInputNotes, 0x20)), add(metadataPtr, mul(numInputNotes, 0x20))))\n    proofOutputSize := add(proofOutputSize, 0xa0)\n    mstore(freePtr, sub(proofOutputSize, 0x20))\n    function encodeInputNotes(memPtr, len, notePtr, ownerPtr) -> inputNotesLength\n    {\n        mstore(0x00, 0x01)\n        mstore(add(memPtr, 0x20), len)\n        notePtr := add(memPtr, add(0x40, mul(len, 0x20)))\n        for {\n            let i := 0\n        }\n        lt(i, len)\n        {\n            i := add(i, 0x01)\n        }\n        {\n            mstore(add(0x40, add(memPtr, mul(i, 0x20))), sub(notePtr, memPtr))\n            let noteIndex := add(notePtr, mul(i, 0xc0))\n            calldatacopy(0x20, noteIndex, 0x80)\n            mstore(notePtr, 0xc0)\n            mstore(add(notePtr, 0x20), 0x01)\n            mstore(add(notePtr, 0x40), calldataload(add(ownerPtr, mul(i, 0xc0))))\n            mstore(add(notePtr, 0x60), keccak256(0x00, 0xa0))\n            mstore(add(notePtr, 0x80), 0x40)\n            mstore(add(notePtr, 0xa0), or(mload(0x20), mul(and(mload(0x40), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n            mstore(add(notePtr, 0xc0), or(mload(0x60), mul(and(mload(0x80), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n            notePtr := add(notePtr, 0xe0)\n        }\n        mstore(memPtr, sub(sub(notePtr, memPtr), 0x20))\n        inputNotesLength := sub(notePtr, memPtr)\n    }\n    function encodeOutputNotes(memPtr, len, notePtr, ownerPtr, metadataPtr) -> outputNotesLength\n    {\n        mstore(0x00, 0x01)\n        mstore(add(memPtr, 0x20), len)\n        notePtr := add(memPtr, add(0x40, mul(len, 0x20)))\n        for {\n            let i := 0\n        }\n        lt(i, len)\n        {\n            i := add(i, 0x01)\n        }\n        {\n            mstore(add(0x40, add(memPtr, mul(i, 0x20))), sub(notePtr, memPtr))\n            let noteIndex := add(notePtr, mul(i, 0xc0))\n            let metadataIndex := calldataload(add(metadataPtr, add(0x20, mul(i, 0x20))))\n            let metadataLength := calldataload(add(sub(metadataPtr, 0x40), metadataIndex))\n            calldatacopy(0x20, noteIndex, 0x80)\n            mstore(notePtr, 0xc0)\n            mstore(add(notePtr, 0x20), 0x01)\n            mstore(add(notePtr, 0x40), calldataload(add(ownerPtr, mul(i, 0xc0))))\n            mstore(add(notePtr, 0x60), keccak256(0x00, 0xa0))\n            mstore(add(notePtr, 0x80), add(0x40, metadataLength))\n            mstore(add(notePtr, 0xa0), or(mload(0x20), mul(and(mload(0x40), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n            mstore(add(notePtr, 0xc0), or(mload(0x60), mul(and(mload(0x80), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n            calldatacopy(add(notePtr, 0xe0), add(metadataIndex, sub(metadataPtr, 0x20)), metadataLength)\n            notePtr := add(notePtr, add(0xe0, metadataLength))\n        }\n        mstore(memPtr, sub(sub(notePtr, memPtr), 0x20))\n        outputNotesLength := sub(notePtr, memPtr)\n    }\n}"},"children":[],"id":77,"name":"InlineAssembly","src":"1839:6500:0"}],"id":78,"name":"Block","src":"1829:6510:0"}],"id":79,"name":"FunctionDefinition","src":"1549:6790:0"}],"id":80,"name":"ContractDefinition","src":"651:7690:0"}],"id":81,"name":"SourceUnit","src":"0:8342:0"}}},"version":"0.5.0+commit.1d4f565a.Linux.g++"}
