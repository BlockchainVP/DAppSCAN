{"contracts":{"/home/sdb/yemx6/solc-DApp/labeledCode/QuillAudits-Algovest/AlgoVestStaking0x090e69e7F48AFC059e480F297042DEA396B971e7/@openzeppelin/contracts/math/SafeMath.sol:SafeMath":{"abi":"[]","bin":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202a514ecca8cefd1458e2f4b977b3596c9861888202b4924cf9522fb23245803664736f6c63430006000033","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202a514ecca8cefd1458e2f4b977b3596c9861888202b4924cf9522fb23245803664736f6c63430006000033","srcmap":"647:6790:0:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24","srcmap-runtime":"647:6790:0:-:0;;;;;;;;"}},"sourceList":["/home/sdb/yemx6/solc-DApp/labeledCode/QuillAudits-Algovest/AlgoVestStaking0x090e69e7F48AFC059e480F297042DEA396B971e7/@openzeppelin/contracts/math/SafeMath.sol"],"sources":{"/home/sdb/yemx6/solc-DApp/labeledCode/QuillAudits-Algovest/AlgoVestStaking0x090e69e7F48AFC059e480F297042DEA396B971e7/@openzeppelin/contracts/math/SafeMath.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/QuillAudits-Algovest/AlgoVestStaking0x090e69e7F48AFC059e480F297042DEA396B971e7/@openzeppelin/contracts/math/SafeMath.sol","exportedSymbols":{"SafeMath":[340]}},"children":[{"attributes":{"literals":["solidity",">=","0.6",".0","<","0.8",".0"]},"id":1,"name":"PragmaDirective","src":"35:31:0"},{"attributes":{"abstract":false,"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.","fullyImplemented":true,"linearizedBaseContracts":[340],"name":"SafeMath","scope":341},"children":[{"attributes":{"documentation":"@dev Returns the addition of two unsigned integers, with an overflow flag.\n\n     * _Available since v3.4._","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"tryAdd","overrides":null,"scope":340,"stateMutability":"pure","virtual":false,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","overrides":null,"scope":31,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2,"name":"ElementaryTypeName","src":"828:7:0"}],"id":3,"name":"VariableDeclaration","src":"828:9:0"},{"attributes":{"constant":false,"name":"b","overrides":null,"scope":31,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":4,"name":"ElementaryTypeName","src":"839:7:0"}],"id":5,"name":"VariableDeclaration","src":"839:9:0"}],"id":6,"name":"ParameterList","src":"827:22:0"},{"children":[{"attributes":{"constant":false,"name":"","overrides":null,"scope":31,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":7,"name":"ElementaryTypeName","src":"873:4:0"}],"id":8,"name":"VariableDeclaration","src":"873:4:0"},{"attributes":{"constant":false,"name":"","overrides":null,"scope":31,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":9,"name":"ElementaryTypeName","src":"879:7:0"}],"id":10,"name":"VariableDeclaration","src":"879:7:0"}],"id":11,"name":"ParameterList","src":"872:15:0"},{"children":[{"attributes":{"assignments":[13]},"children":[{"attributes":{"constant":false,"name":"c","overrides":null,"scope":30,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":12,"name":"ElementaryTypeName","src":"899:7:0"}],"id":13,"name":"VariableDeclaration","src":"899:9:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"uint256","value":"a"},"id":14,"name":"Identifier","src":"911:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":5,"type":"uint256","value":"b"},"id":15,"name":"Identifier","src":"915:1:0"}],"id":16,"name":"BinaryOperation","src":"911:5:0"}],"id":17,"name":"VariableDeclarationStatement","src":"899:17:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":13,"type":"uint256","value":"c"},"id":18,"name":"Identifier","src":"931:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":3,"type":"uint256","value":"a"},"id":19,"name":"Identifier","src":"935:1:0"}],"id":20,"name":"BinaryOperation","src":"931:5:0"},{"attributes":{"functionReturnParameters":11},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"tuple(bool,int_const 0)"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":21,"name":"Literal","src":"946:5:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":22,"name":"Literal","src":"953:1:0"}],"id":23,"name":"TupleExpression","src":"945:10:0"}],"id":24,"name":"Return","src":"938:17:0"}],"id":25,"name":"IfStatement","src":"927:28:0"},{"attributes":{"functionReturnParameters":11},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(bool,uint256)"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":26,"name":"Literal","src":"974:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":13,"type":"uint256","value":"c"},"id":27,"name":"Identifier","src":"980:1:0"}],"id":28,"name":"TupleExpression","src":"973:9:0"}],"id":29,"name":"Return","src":"966:16:0"}],"id":30,"name":"Block","src":"888:102:0"}],"id":31,"name":"FunctionDefinition","src":"812:178:0"},{"attributes":{"documentation":"@dev Returns the substraction of two unsigned integers, with an overflow flag.\n\n     * _Available since v3.4._","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"trySub","overrides":null,"scope":340,"stateMutability":"pure","virtual":false,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","overrides":null,"scope":57,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":32,"name":"ElementaryTypeName","src":"1159:7:0"}],"id":33,"name":"VariableDeclaration","src":"1159:9:0"},{"attributes":{"constant":false,"name":"b","overrides":null,"scope":57,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":34,"name":"ElementaryTypeName","src":"1170:7:0"}],"id":35,"name":"VariableDeclaration","src":"1170:9:0"}],"id":36,"name":"ParameterList","src":"1158:22:0"},{"children":[{"attributes":{"constant":false,"name":"","overrides":null,"scope":57,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":37,"name":"ElementaryTypeName","src":"1204:4:0"}],"id":38,"name":"VariableDeclaration","src":"1204:4:0"},{"attributes":{"constant":false,"name":"","overrides":null,"scope":57,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":39,"name":"ElementaryTypeName","src":"1210:7:0"}],"id":40,"name":"VariableDeclaration","src":"1210:7:0"}],"id":41,"name":"ParameterList","src":"1203:15:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":35,"type":"uint256","value":"b"},"id":42,"name":"Identifier","src":"1234:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"uint256","value":"a"},"id":43,"name":"Identifier","src":"1238:1:0"}],"id":44,"name":"BinaryOperation","src":"1234:5:0"},{"attributes":{"functionReturnParameters":41},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"tuple(bool,int_const 0)"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":45,"name":"Literal","src":"1249:5:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":46,"name":"Literal","src":"1256:1:0"}],"id":47,"name":"TupleExpression","src":"1248:10:0"}],"id":48,"name":"Return","src":"1241:17:0"}],"id":49,"name":"IfStatement","src":"1230:28:0"},{"attributes":{"functionReturnParameters":41},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(bool,uint256)"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":50,"name":"Literal","src":"1277:4:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"uint256","value":"a"},"id":51,"name":"Identifier","src":"1283:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":35,"type":"uint256","value":"b"},"id":52,"name":"Identifier","src":"1287:1:0"}],"id":53,"name":"BinaryOperation","src":"1283:5:0"}],"id":54,"name":"TupleExpression","src":"1276:13:0"}],"id":55,"name":"Return","src":"1269:20:0"}],"id":56,"name":"Block","src":"1219:78:0"}],"id":57,"name":"FunctionDefinition","src":"1143:154:0"},{"attributes":{"documentation":"@dev Returns the multiplication of two unsigned integers, with an overflow flag.\n\n     * _Available since v3.4._","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"tryMul","overrides":null,"scope":340,"stateMutability":"pure","virtual":false,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","overrides":null,"scope":97,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":58,"name":"ElementaryTypeName","src":"1468:7:0"}],"id":59,"name":"VariableDeclaration","src":"1468:9:0"},{"attributes":{"constant":false,"name":"b","overrides":null,"scope":97,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":60,"name":"ElementaryTypeName","src":"1479:7:0"}],"id":61,"name":"VariableDeclaration","src":"1479:9:0"}],"id":62,"name":"ParameterList","src":"1467:22:0"},{"children":[{"attributes":{"constant":false,"name":"","overrides":null,"scope":97,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":63,"name":"ElementaryTypeName","src":"1513:4:0"}],"id":64,"name":"VariableDeclaration","src":"1513:4:0"},{"attributes":{"constant":false,"name":"","overrides":null,"scope":97,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":65,"name":"ElementaryTypeName","src":"1519:7:0"}],"id":66,"name":"VariableDeclaration","src":"1519:7:0"}],"id":67,"name":"ParameterList","src":"1512:15:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":59,"type":"uint256","value":"a"},"id":68,"name":"Identifier","src":"1764:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":69,"name":"Literal","src":"1769:1:0"}],"id":70,"name":"BinaryOperation","src":"1764:6:0"},{"attributes":{"functionReturnParameters":67},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"tuple(bool,int_const 0)"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":71,"name":"Literal","src":"1780:4:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":72,"name":"Literal","src":"1786:1:0"}],"id":73,"name":"TupleExpression","src":"1779:9:0"}],"id":74,"name":"Return","src":"1772:16:0"}],"id":75,"name":"IfStatement","src":"1760:28:0"},{"attributes":{"assignments":[77]},"children":[{"attributes":{"constant":false,"name":"c","overrides":null,"scope":96,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":76,"name":"ElementaryTypeName","src":"1799:7:0"}],"id":77,"name":"VariableDeclaration","src":"1799:9:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":59,"type":"uint256","value":"a"},"id":78,"name":"Identifier","src":"1811:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":61,"type":"uint256","value":"b"},"id":79,"name":"Identifier","src":"1815:1:0"}],"id":80,"name":"BinaryOperation","src":"1811:5:0"}],"id":81,"name":"VariableDeclarationStatement","src":"1799:17:0"},{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":77,"type":"uint256","value":"c"},"id":82,"name":"Identifier","src":"1831:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":59,"type":"uint256","value":"a"},"id":83,"name":"Identifier","src":"1835:1:0"}],"id":84,"name":"BinaryOperation","src":"1831:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":61,"type":"uint256","value":"b"},"id":85,"name":"Identifier","src":"1840:1:0"}],"id":86,"name":"BinaryOperation","src":"1831:10:0"},{"attributes":{"functionReturnParameters":67},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"tuple(bool,int_const 0)"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":87,"name":"Literal","src":"1851:5:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":88,"name":"Literal","src":"1858:1:0"}],"id":89,"name":"TupleExpression","src":"1850:10:0"}],"id":90,"name":"Return","src":"1843:17:0"}],"id":91,"name":"IfStatement","src":"1827:33:0"},{"attributes":{"functionReturnParameters":67},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(bool,uint256)"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":92,"name":"Literal","src":"1879:4:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":77,"type":"uint256","value":"c"},"id":93,"name":"Identifier","src":"1885:1:0"}],"id":94,"name":"TupleExpression","src":"1878:9:0"}],"id":95,"name":"Return","src":"1871:16:0"}],"id":96,"name":"Block","src":"1528:367:0"}],"id":97,"name":"FunctionDefinition","src":"1452:443:0"},{"attributes":{"documentation":"@dev Returns the division of two unsigned integers, with a division by zero flag.\n\n     * _Available since v3.4._","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"tryDiv","overrides":null,"scope":340,"stateMutability":"pure","virtual":false,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","overrides":null,"scope":123,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":98,"name":"ElementaryTypeName","src":"2067:7:0"}],"id":99,"name":"VariableDeclaration","src":"2067:9:0"},{"attributes":{"constant":false,"name":"b","overrides":null,"scope":123,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":100,"name":"ElementaryTypeName","src":"2078:7:0"}],"id":101,"name":"VariableDeclaration","src":"2078:9:0"}],"id":102,"name":"ParameterList","src":"2066:22:0"},{"children":[{"attributes":{"constant":false,"name":"","overrides":null,"scope":123,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":103,"name":"ElementaryTypeName","src":"2112:4:0"}],"id":104,"name":"VariableDeclaration","src":"2112:4:0"},{"attributes":{"constant":false,"name":"","overrides":null,"scope":123,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":105,"name":"ElementaryTypeName","src":"2118:7:0"}],"id":106,"name":"VariableDeclaration","src":"2118:7:0"}],"id":107,"name":"ParameterList","src":"2111:15:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":101,"type":"uint256","value":"b"},"id":108,"name":"Identifier","src":"2142:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":109,"name":"Literal","src":"2147:1:0"}],"id":110,"name":"BinaryOperation","src":"2142:6:0"},{"attributes":{"functionReturnParameters":107},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"tuple(bool,int_const 0)"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":111,"name":"Literal","src":"2158:5:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":112,"name":"Literal","src":"2165:1:0"}],"id":113,"name":"TupleExpression","src":"2157:10:0"}],"id":114,"name":"Return","src":"2150:17:0"}],"id":115,"name":"IfStatement","src":"2138:29:0"},{"attributes":{"functionReturnParameters":107},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(bool,uint256)"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":116,"name":"Literal","src":"2186:4:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":99,"type":"uint256","value":"a"},"id":117,"name":"Identifier","src":"2192:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":101,"type":"uint256","value":"b"},"id":118,"name":"Identifier","src":"2196:1:0"}],"id":119,"name":"BinaryOperation","src":"2192:5:0"}],"id":120,"name":"TupleExpression","src":"2185:13:0"}],"id":121,"name":"Return","src":"2178:20:0"}],"id":122,"name":"Block","src":"2127:79:0"}],"id":123,"name":"FunctionDefinition","src":"2051:155:0"},{"attributes":{"documentation":"@dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n\n     * _Available since v3.4._","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"tryMod","overrides":null,"scope":340,"stateMutability":"pure","virtual":false,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","overrides":null,"scope":149,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":124,"name":"ElementaryTypeName","src":"2388:7:0"}],"id":125,"name":"VariableDeclaration","src":"2388:9:0"},{"attributes":{"constant":false,"name":"b","overrides":null,"scope":149,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":126,"name":"ElementaryTypeName","src":"2399:7:0"}],"id":127,"name":"VariableDeclaration","src":"2399:9:0"}],"id":128,"name":"ParameterList","src":"2387:22:0"},{"children":[{"attributes":{"constant":false,"name":"","overrides":null,"scope":149,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":129,"name":"ElementaryTypeName","src":"2433:4:0"}],"id":130,"name":"VariableDeclaration","src":"2433:4:0"},{"attributes":{"constant":false,"name":"","overrides":null,"scope":149,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":131,"name":"ElementaryTypeName","src":"2439:7:0"}],"id":132,"name":"VariableDeclaration","src":"2439:7:0"}],"id":133,"name":"ParameterList","src":"2432:15:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":127,"type":"uint256","value":"b"},"id":134,"name":"Identifier","src":"2463:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":135,"name":"Literal","src":"2468:1:0"}],"id":136,"name":"BinaryOperation","src":"2463:6:0"},{"attributes":{"functionReturnParameters":133},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"tuple(bool,int_const 0)"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"66616c7365","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"false"},"id":137,"name":"Literal","src":"2479:5:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":138,"name":"Literal","src":"2486:1:0"}],"id":139,"name":"TupleExpression","src":"2478:10:0"}],"id":140,"name":"Return","src":"2471:17:0"}],"id":141,"name":"IfStatement","src":"2459:29:0"},{"attributes":{"functionReturnParameters":133},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"type":"tuple(bool,uint256)"},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"74727565","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"bool","type":"bool","value":"true"},"id":142,"name":"Literal","src":"2507:4:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"%","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":125,"type":"uint256","value":"a"},"id":143,"name":"Identifier","src":"2513:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":127,"type":"uint256","value":"b"},"id":144,"name":"Identifier","src":"2517:1:0"}],"id":145,"name":"BinaryOperation","src":"2513:5:0"}],"id":146,"name":"TupleExpression","src":"2506:13:0"}],"id":147,"name":"Return","src":"2499:20:0"}],"id":148,"name":"Block","src":"2448:79:0"}],"id":149,"name":"FunctionDefinition","src":"2372:155:0"},{"attributes":{"documentation":"@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n\n     * Counterpart to Solidity's `+` operator.\n\n     * Requirements:\n\n     * - Addition cannot overflow.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"add","overrides":null,"scope":340,"stateMutability":"pure","virtual":false,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","overrides":null,"scope":174,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":150,"name":"ElementaryTypeName","src":"2787:7:0"}],"id":151,"name":"VariableDeclaration","src":"2787:9:0"},{"attributes":{"constant":false,"name":"b","overrides":null,"scope":174,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":152,"name":"ElementaryTypeName","src":"2798:7:0"}],"id":153,"name":"VariableDeclaration","src":"2798:9:0"}],"id":154,"name":"ParameterList","src":"2786:22:0"},{"children":[{"attributes":{"constant":false,"name":"","overrides":null,"scope":174,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":155,"name":"ElementaryTypeName","src":"2832:7:0"}],"id":156,"name":"VariableDeclaration","src":"2832:7:0"}],"id":157,"name":"ParameterList","src":"2831:9:0"},{"children":[{"attributes":{"assignments":[159]},"children":[{"attributes":{"constant":false,"name":"c","overrides":null,"scope":173,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":158,"name":"ElementaryTypeName","src":"2852:7:0"}],"id":159,"name":"VariableDeclaration","src":"2852:9:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"+","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":151,"type":"uint256","value":"a"},"id":160,"name":"Identifier","src":"2864:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":153,"type":"uint256","value":"b"},"id":161,"name":"Identifier","src":"2868:1:0"}],"id":162,"name":"BinaryOperation","src":"2864:5:0"}],"id":163,"name":"VariableDeclarationStatement","src":"2852:17:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""}],"overloadedDeclarations":[358,359],"referencedDeclaration":359,"type":"function (bool,string memory) pure","value":"require"},"id":164,"name":"Identifier","src":"2880:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":159,"type":"uint256","value":"c"},"id":165,"name":"Identifier","src":"2888:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":151,"type":"uint256","value":"a"},"id":166,"name":"Identifier","src":"2893:1:0"}],"id":167,"name":"BinaryOperation","src":"2888:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"536166654d6174683a206164646974696f6e206f766572666c6f77","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"SafeMath: addition overflow\"","value":"SafeMath: addition overflow"},"id":168,"name":"Literal","src":"2896:29:0"}],"id":169,"name":"FunctionCall","src":"2880:46:0"}],"id":170,"name":"ExpressionStatement","src":"2880:46:0"},{"attributes":{"functionReturnParameters":157},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":159,"type":"uint256","value":"c"},"id":171,"name":"Identifier","src":"2944:1:0"}],"id":172,"name":"Return","src":"2937:8:0"}],"id":173,"name":"Block","src":"2841:112:0"}],"id":174,"name":"FunctionDefinition","src":"2774:179:0"},{"attributes":{"documentation":"@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n\n     * Counterpart to Solidity's `-` operator.\n\n     * Requirements:\n\n     * - Subtraction cannot overflow.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"sub","overrides":null,"scope":340,"stateMutability":"pure","virtual":false,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","overrides":null,"scope":195,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":175,"name":"ElementaryTypeName","src":"3249:7:0"}],"id":176,"name":"VariableDeclaration","src":"3249:9:0"},{"attributes":{"constant":false,"name":"b","overrides":null,"scope":195,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":177,"name":"ElementaryTypeName","src":"3260:7:0"}],"id":178,"name":"VariableDeclaration","src":"3260:9:0"}],"id":179,"name":"ParameterList","src":"3248:22:0"},{"children":[{"attributes":{"constant":false,"name":"","overrides":null,"scope":195,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":180,"name":"ElementaryTypeName","src":"3294:7:0"}],"id":181,"name":"VariableDeclaration","src":"3294:7:0"}],"id":182,"name":"ParameterList","src":"3293:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""}],"overloadedDeclarations":[358,359],"referencedDeclaration":359,"type":"function (bool,string memory) pure","value":"require"},"id":183,"name":"Identifier","src":"3314:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":178,"type":"uint256","value":"b"},"id":184,"name":"Identifier","src":"3322:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":176,"type":"uint256","value":"a"},"id":185,"name":"Identifier","src":"3327:1:0"}],"id":186,"name":"BinaryOperation","src":"3322:6:0"},{"attributes":{"argumentTypes":null,"hexvalue":"536166654d6174683a207375627472616374696f6e206f766572666c6f77","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"SafeMath: subtraction overflow\"","value":"SafeMath: subtraction overflow"},"id":187,"name":"Literal","src":"3330:32:0"}],"id":188,"name":"FunctionCall","src":"3314:49:0"}],"id":189,"name":"ExpressionStatement","src":"3314:49:0"},{"attributes":{"functionReturnParameters":182},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":176,"type":"uint256","value":"a"},"id":190,"name":"Identifier","src":"3381:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":178,"type":"uint256","value":"b"},"id":191,"name":"Identifier","src":"3385:1:0"}],"id":192,"name":"BinaryOperation","src":"3381:5:0"}],"id":193,"name":"Return","src":"3374:12:0"}],"id":194,"name":"Block","src":"3303:91:0"}],"id":195,"name":"FunctionDefinition","src":"3236:158:0"},{"attributes":{"documentation":"@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n\n     * Counterpart to Solidity's `*` operator.\n\n     * Requirements:\n\n     * - Multiplication cannot overflow.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"mul","overrides":null,"scope":340,"stateMutability":"pure","virtual":false,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","overrides":null,"scope":228,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":196,"name":"ElementaryTypeName","src":"3666:7:0"}],"id":197,"name":"VariableDeclaration","src":"3666:9:0"},{"attributes":{"constant":false,"name":"b","overrides":null,"scope":228,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":198,"name":"ElementaryTypeName","src":"3677:7:0"}],"id":199,"name":"VariableDeclaration","src":"3677:9:0"}],"id":200,"name":"ParameterList","src":"3665:22:0"},{"children":[{"attributes":{"constant":false,"name":"","overrides":null,"scope":228,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":201,"name":"ElementaryTypeName","src":"3711:7:0"}],"id":202,"name":"VariableDeclaration","src":"3711:7:0"}],"id":203,"name":"ParameterList","src":"3710:9:0"},{"children":[{"attributes":{"falseBody":null},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":197,"type":"uint256","value":"a"},"id":204,"name":"Identifier","src":"3735:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":205,"name":"Literal","src":"3740:1:0"}],"id":206,"name":"BinaryOperation","src":"3735:6:0"},{"attributes":{"functionReturnParameters":203},"children":[{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":207,"name":"Literal","src":"3750:1:0"}],"id":208,"name":"Return","src":"3743:8:0"}],"id":209,"name":"IfStatement","src":"3731:20:0"},{"attributes":{"assignments":[211]},"children":[{"attributes":{"constant":false,"name":"c","overrides":null,"scope":227,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":210,"name":"ElementaryTypeName","src":"3762:7:0"}],"id":211,"name":"VariableDeclaration","src":"3762:9:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"*","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":197,"type":"uint256","value":"a"},"id":212,"name":"Identifier","src":"3774:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":199,"type":"uint256","value":"b"},"id":213,"name":"Identifier","src":"3778:1:0"}],"id":214,"name":"BinaryOperation","src":"3774:5:0"}],"id":215,"name":"VariableDeclarationStatement","src":"3762:17:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""}],"overloadedDeclarations":[358,359],"referencedDeclaration":359,"type":"function (bool,string memory) pure","value":"require"},"id":216,"name":"Identifier","src":"3790:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":211,"type":"uint256","value":"c"},"id":217,"name":"Identifier","src":"3798:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":197,"type":"uint256","value":"a"},"id":218,"name":"Identifier","src":"3802:1:0"}],"id":219,"name":"BinaryOperation","src":"3798:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":199,"type":"uint256","value":"b"},"id":220,"name":"Identifier","src":"3807:1:0"}],"id":221,"name":"BinaryOperation","src":"3798:10:0"},{"attributes":{"argumentTypes":null,"hexvalue":"536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"SafeMath: multiplication overflow\"","value":"SafeMath: multiplication overflow"},"id":222,"name":"Literal","src":"3810:35:0"}],"id":223,"name":"FunctionCall","src":"3790:56:0"}],"id":224,"name":"ExpressionStatement","src":"3790:56:0"},{"attributes":{"functionReturnParameters":203},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":211,"type":"uint256","value":"c"},"id":225,"name":"Identifier","src":"3864:1:0"}],"id":226,"name":"Return","src":"3857:8:0"}],"id":227,"name":"Block","src":"3720:153:0"}],"id":228,"name":"FunctionDefinition","src":"3653:220:0"},{"attributes":{"documentation":"@dev Returns the integer division of two unsigned integers, reverting on\ndivision by zero. The result is rounded towards zero.\n\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n     * Requirements:\n\n     * - The divisor cannot be zero.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"div","overrides":null,"scope":340,"stateMutability":"pure","virtual":false,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","overrides":null,"scope":249,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":229,"name":"ElementaryTypeName","src":"4364:7:0"}],"id":230,"name":"VariableDeclaration","src":"4364:9:0"},{"attributes":{"constant":false,"name":"b","overrides":null,"scope":249,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":231,"name":"ElementaryTypeName","src":"4375:7:0"}],"id":232,"name":"VariableDeclaration","src":"4375:9:0"}],"id":233,"name":"ParameterList","src":"4363:22:0"},{"children":[{"attributes":{"constant":false,"name":"","overrides":null,"scope":249,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":234,"name":"ElementaryTypeName","src":"4409:7:0"}],"id":235,"name":"VariableDeclaration","src":"4409:7:0"}],"id":236,"name":"ParameterList","src":"4408:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""}],"overloadedDeclarations":[358,359],"referencedDeclaration":359,"type":"function (bool,string memory) pure","value":"require"},"id":237,"name":"Identifier","src":"4429:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":232,"type":"uint256","value":"b"},"id":238,"name":"Identifier","src":"4437:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":239,"name":"Literal","src":"4441:1:0"}],"id":240,"name":"BinaryOperation","src":"4437:5:0"},{"attributes":{"argumentTypes":null,"hexvalue":"536166654d6174683a206469766973696f6e206279207a65726f","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"SafeMath: division by zero\"","value":"SafeMath: division by zero"},"id":241,"name":"Literal","src":"4444:28:0"}],"id":242,"name":"FunctionCall","src":"4429:44:0"}],"id":243,"name":"ExpressionStatement","src":"4429:44:0"},{"attributes":{"functionReturnParameters":236},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":230,"type":"uint256","value":"a"},"id":244,"name":"Identifier","src":"4491:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":232,"type":"uint256","value":"b"},"id":245,"name":"Identifier","src":"4495:1:0"}],"id":246,"name":"BinaryOperation","src":"4491:5:0"}],"id":247,"name":"Return","src":"4484:12:0"}],"id":248,"name":"Block","src":"4418:86:0"}],"id":249,"name":"FunctionDefinition","src":"4351:153:0"},{"attributes":{"documentation":"@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nreverting when dividing by zero.\n\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n     * Requirements:\n\n     * - The divisor cannot be zero.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"mod","overrides":null,"scope":340,"stateMutability":"pure","virtual":false,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","overrides":null,"scope":270,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":250,"name":"ElementaryTypeName","src":"4984:7:0"}],"id":251,"name":"VariableDeclaration","src":"4984:9:0"},{"attributes":{"constant":false,"name":"b","overrides":null,"scope":270,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":252,"name":"ElementaryTypeName","src":"4995:7:0"}],"id":253,"name":"VariableDeclaration","src":"4995:9:0"}],"id":254,"name":"ParameterList","src":"4983:22:0"},{"children":[{"attributes":{"constant":false,"name":"","overrides":null,"scope":270,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":255,"name":"ElementaryTypeName","src":"5029:7:0"}],"id":256,"name":"VariableDeclaration","src":"5029:7:0"}],"id":257,"name":"ParameterList","src":"5028:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""}],"overloadedDeclarations":[358,359],"referencedDeclaration":359,"type":"function (bool,string memory) pure","value":"require"},"id":258,"name":"Identifier","src":"5049:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":253,"type":"uint256","value":"b"},"id":259,"name":"Identifier","src":"5057:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":260,"name":"Literal","src":"5061:1:0"}],"id":261,"name":"BinaryOperation","src":"5057:5:0"},{"attributes":{"argumentTypes":null,"hexvalue":"536166654d6174683a206d6f64756c6f206279207a65726f","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"SafeMath: modulo by zero\"","value":"SafeMath: modulo by zero"},"id":262,"name":"Literal","src":"5064:26:0"}],"id":263,"name":"FunctionCall","src":"5049:42:0"}],"id":264,"name":"ExpressionStatement","src":"5049:42:0"},{"attributes":{"functionReturnParameters":257},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"%","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":251,"type":"uint256","value":"a"},"id":265,"name":"Identifier","src":"5109:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":253,"type":"uint256","value":"b"},"id":266,"name":"Identifier","src":"5113:1:0"}],"id":267,"name":"BinaryOperation","src":"5109:5:0"}],"id":268,"name":"Return","src":"5102:12:0"}],"id":269,"name":"Block","src":"5038:84:0"}],"id":270,"name":"FunctionDefinition","src":"4971:151:0"},{"attributes":{"documentation":"@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\nmessage unnecessarily. For custom revert reasons use {trySub}.\n\n     * Counterpart to Solidity's `-` operator.\n\n     * Requirements:\n\n     * - Subtraction cannot overflow.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"sub","overrides":null,"scope":340,"stateMutability":"pure","virtual":false,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","overrides":null,"scope":293,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":271,"name":"ElementaryTypeName","src":"5614:7:0"}],"id":272,"name":"VariableDeclaration","src":"5614:9:0"},{"attributes":{"constant":false,"name":"b","overrides":null,"scope":293,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":273,"name":"ElementaryTypeName","src":"5625:7:0"}],"id":274,"name":"VariableDeclaration","src":"5625:9:0"},{"attributes":{"constant":false,"name":"errorMessage","overrides":null,"scope":293,"stateVariable":false,"storageLocation":"memory","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":275,"name":"ElementaryTypeName","src":"5636:6:0"}],"id":276,"name":"VariableDeclaration","src":"5636:26:0"}],"id":277,"name":"ParameterList","src":"5613:50:0"},{"children":[{"attributes":{"constant":false,"name":"","overrides":null,"scope":293,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":278,"name":"ElementaryTypeName","src":"5687:7:0"}],"id":279,"name":"VariableDeclaration","src":"5687:7:0"}],"id":280,"name":"ParameterList","src":"5686:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"overloadedDeclarations":[358,359],"referencedDeclaration":359,"type":"function (bool,string memory) pure","value":"require"},"id":281,"name":"Identifier","src":"5707:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":274,"type":"uint256","value":"b"},"id":282,"name":"Identifier","src":"5715:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":272,"type":"uint256","value":"a"},"id":283,"name":"Identifier","src":"5720:1:0"}],"id":284,"name":"BinaryOperation","src":"5715:6:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":276,"type":"string memory","value":"errorMessage"},"id":285,"name":"Identifier","src":"5723:12:0"}],"id":286,"name":"FunctionCall","src":"5707:29:0"}],"id":287,"name":"ExpressionStatement","src":"5707:29:0"},{"attributes":{"functionReturnParameters":280},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"-","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":272,"type":"uint256","value":"a"},"id":288,"name":"Identifier","src":"5754:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":274,"type":"uint256","value":"b"},"id":289,"name":"Identifier","src":"5758:1:0"}],"id":290,"name":"BinaryOperation","src":"5754:5:0"}],"id":291,"name":"Return","src":"5747:12:0"}],"id":292,"name":"Block","src":"5696:71:0"}],"id":293,"name":"FunctionDefinition","src":"5601:166:0"},{"attributes":{"documentation":"@dev Returns the integer division of two unsigned integers, reverting with custom message on\ndivision by zero. The result is rounded towards zero.\n\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\nmessage unnecessarily. For custom revert reasons use {tryDiv}.\n\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n     * Requirements:\n\n     * - The divisor cannot be zero.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"div","overrides":null,"scope":340,"stateMutability":"pure","virtual":false,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","overrides":null,"scope":316,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":294,"name":"ElementaryTypeName","src":"6454:7:0"}],"id":295,"name":"VariableDeclaration","src":"6454:9:0"},{"attributes":{"constant":false,"name":"b","overrides":null,"scope":316,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":296,"name":"ElementaryTypeName","src":"6465:7:0"}],"id":297,"name":"VariableDeclaration","src":"6465:9:0"},{"attributes":{"constant":false,"name":"errorMessage","overrides":null,"scope":316,"stateVariable":false,"storageLocation":"memory","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":298,"name":"ElementaryTypeName","src":"6476:6:0"}],"id":299,"name":"VariableDeclaration","src":"6476:26:0"}],"id":300,"name":"ParameterList","src":"6453:50:0"},{"children":[{"attributes":{"constant":false,"name":"","overrides":null,"scope":316,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":301,"name":"ElementaryTypeName","src":"6527:7:0"}],"id":302,"name":"VariableDeclaration","src":"6527:7:0"}],"id":303,"name":"ParameterList","src":"6526:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"overloadedDeclarations":[358,359],"referencedDeclaration":359,"type":"function (bool,string memory) pure","value":"require"},"id":304,"name":"Identifier","src":"6547:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":297,"type":"uint256","value":"b"},"id":305,"name":"Identifier","src":"6555:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":306,"name":"Literal","src":"6559:1:0"}],"id":307,"name":"BinaryOperation","src":"6555:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":299,"type":"string memory","value":"errorMessage"},"id":308,"name":"Identifier","src":"6562:12:0"}],"id":309,"name":"FunctionCall","src":"6547:28:0"}],"id":310,"name":"ExpressionStatement","src":"6547:28:0"},{"attributes":{"functionReturnParameters":303},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"/","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":295,"type":"uint256","value":"a"},"id":311,"name":"Identifier","src":"6593:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":297,"type":"uint256","value":"b"},"id":312,"name":"Identifier","src":"6597:1:0"}],"id":313,"name":"BinaryOperation","src":"6593:5:0"}],"id":314,"name":"Return","src":"6586:12:0"}],"id":315,"name":"Block","src":"6536:70:0"}],"id":316,"name":"FunctionDefinition","src":"6441:165:0"},{"attributes":{"documentation":"@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nreverting with custom message when dividing by zero.\n\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\nmessage unnecessarily. For custom revert reasons use {tryMod}.\n\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n     * Requirements:\n\n     * - The divisor cannot be zero.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"mod","overrides":null,"scope":340,"stateMutability":"pure","virtual":false,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"a","overrides":null,"scope":339,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":317,"name":"ElementaryTypeName","src":"7282:7:0"}],"id":318,"name":"VariableDeclaration","src":"7282:9:0"},{"attributes":{"constant":false,"name":"b","overrides":null,"scope":339,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":319,"name":"ElementaryTypeName","src":"7293:7:0"}],"id":320,"name":"VariableDeclaration","src":"7293:9:0"},{"attributes":{"constant":false,"name":"errorMessage","overrides":null,"scope":339,"stateVariable":false,"storageLocation":"memory","type":"string","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"string","type":"string"},"id":321,"name":"ElementaryTypeName","src":"7304:6:0"}],"id":322,"name":"VariableDeclaration","src":"7304:26:0"}],"id":323,"name":"ParameterList","src":"7281:50:0"},{"children":[{"attributes":{"constant":false,"name":"","overrides":null,"scope":339,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":324,"name":"ElementaryTypeName","src":"7355:7:0"}],"id":325,"name":"VariableDeclaration","src":"7355:7:0"}],"id":326,"name":"ParameterList","src":"7354:9:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"overloadedDeclarations":[358,359],"referencedDeclaration":359,"type":"function (bool,string memory) pure","value":"require"},"id":327,"name":"Identifier","src":"7375:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":">","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":320,"type":"uint256","value":"b"},"id":328,"name":"Identifier","src":"7383:1:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":329,"name":"Literal","src":"7387:1:0"}],"id":330,"name":"BinaryOperation","src":"7383:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":322,"type":"string memory","value":"errorMessage"},"id":331,"name":"Identifier","src":"7390:12:0"}],"id":332,"name":"FunctionCall","src":"7375:28:0"}],"id":333,"name":"ExpressionStatement","src":"7375:28:0"},{"attributes":{"functionReturnParameters":326},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"%","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":318,"type":"uint256","value":"a"},"id":334,"name":"Identifier","src":"7421:1:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":320,"type":"uint256","value":"b"},"id":335,"name":"Identifier","src":"7425:1:0"}],"id":336,"name":"BinaryOperation","src":"7421:5:0"}],"id":337,"name":"Return","src":"7414:12:0"}],"id":338,"name":"Block","src":"7364:70:0"}],"id":339,"name":"FunctionDefinition","src":"7269:165:0"}],"id":340,"name":"ContractDefinition","src":"647:6790:0"}],"id":341,"name":"SourceUnit","src":"35:7404:0"}}},"version":"0.6.0+commit.26b70077.Linux.g++"}
