{"contracts":{"/home/yemx6/solc-dApp/code/Trail_of_Bits-FraxQ42021/frax-solidity-bd40775e283923aa9e32a107abd426430a99835e/src/hardhat/contracts/Uniswap_V3/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables":{"abi":"[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","bin":"","bin-runtime":"","srcmap":"","srcmap-runtime":""}},"sourceList":["/home/yemx6/solc-dApp/code/Trail_of_Bits-FraxQ42021/frax-solidity-bd40775e283923aa9e32a107abd426430a99835e/src/hardhat/contracts/Uniswap_V3/pool/IUniswapV3PoolImmutables.sol"],"sources":{"/home/yemx6/solc-dApp/code/Trail_of_Bits-FraxQ42021/frax-solidity-bd40775e283923aa9e32a107abd426430a99835e/src/hardhat/contracts/Uniswap_V3/pool/IUniswapV3PoolImmutables.sol":{"AST":{"attributes":{"absolutePath":"/home/yemx6/solc-dApp/code/Trail_of_Bits-FraxQ42021/frax-solidity-bd40775e283923aa9e32a107abd426430a99835e/src/hardhat/contracts/Uniswap_V3/pool/IUniswapV3PoolImmutables.sol","exportedSymbols":{"IUniswapV3PoolImmutables":[39]},"license":"GPL-2.0-or-later"},"children":[{"attributes":{"literals":["solidity",">=","0.6",".11"]},"id":1,"name":"PragmaDirective","src":"45:25:0"},{"attributes":{"abstract":false,"baseContracts":[null],"contractDependencies":[null],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[39],"name":"IUniswapV3PoolImmutables","scope":40},"children":[{"attributes":{"text":"@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"},"id":2,"name":"StructuredDocumentation","src":"72:153:0"},{"attributes":{"body":null,"functionSelector":"c45a0155","implemented":false,"isConstructor":false,"kind":"function","modifiers":[null],"name":"factory","overrides":null,"scope":39,"stateMutability":"view","virtual":false,"visibility":"external"},"children":[{"attributes":{"text":"@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"},"id":3,"name":"StructuredDocumentation","src":"266:138:0"},{"attributes":{"parameters":[null]},"children":[],"id":4,"name":"ParameterList","src":"425:2:0"},{"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"","overrides":null,"scope":8,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":5,"name":"ElementaryTypeName","src":"451:7:0"}],"id":6,"name":"VariableDeclaration","src":"451:7:0"}],"id":7,"name":"ParameterList","src":"450:9:0"}],"id":8,"name":"FunctionDefinition","src":"409:51:0"},{"attributes":{"body":null,"functionSelector":"0dfe1681","implemented":false,"isConstructor":false,"kind":"function","modifiers":[null],"name":"token0","overrides":null,"scope":39,"stateMutability":"view","virtual":false,"visibility":"external"},"children":[{"attributes":{"text":"@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"},"id":9,"name":"StructuredDocumentation","src":"466:113:0"},{"attributes":{"parameters":[null]},"children":[],"id":10,"name":"ParameterList","src":"599:2:0"},{"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"","overrides":null,"scope":14,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":11,"name":"ElementaryTypeName","src":"625:7:0"}],"id":12,"name":"VariableDeclaration","src":"625:7:0"}],"id":13,"name":"ParameterList","src":"624:9:0"}],"id":14,"name":"FunctionDefinition","src":"584:50:0"},{"attributes":{"body":null,"functionSelector":"d21220a7","implemented":false,"isConstructor":false,"kind":"function","modifiers":[null],"name":"token1","overrides":null,"scope":39,"stateMutability":"view","virtual":false,"visibility":"external"},"children":[{"attributes":{"text":"@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"},"id":15,"name":"StructuredDocumentation","src":"640:114:0"},{"attributes":{"parameters":[null]},"children":[],"id":16,"name":"ParameterList","src":"774:2:0"},{"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"","overrides":null,"scope":20,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":17,"name":"ElementaryTypeName","src":"800:7:0"}],"id":18,"name":"VariableDeclaration","src":"800:7:0"}],"id":19,"name":"ParameterList","src":"799:9:0"}],"id":20,"name":"FunctionDefinition","src":"759:50:0"},{"attributes":{"body":null,"functionSelector":"ddca3f43","implemented":false,"isConstructor":false,"kind":"function","modifiers":[null],"name":"fee","overrides":null,"scope":39,"stateMutability":"view","virtual":false,"visibility":"external"},"children":[{"attributes":{"text":"@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"},"id":21,"name":"StructuredDocumentation","src":"815:84:0"},{"attributes":{"parameters":[null]},"children":[],"id":22,"name":"ParameterList","src":"916:2:0"},{"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"","overrides":null,"scope":26,"stateVariable":false,"storageLocation":"default","type":"uint24","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint24","type":"uint24"},"id":23,"name":"ElementaryTypeName","src":"942:6:0"}],"id":24,"name":"VariableDeclaration","src":"942:6:0"}],"id":25,"name":"ParameterList","src":"941:8:0"}],"id":26,"name":"FunctionDefinition","src":"904:46:0"},{"attributes":{"body":null,"functionSelector":"d0c93a7c","implemented":false,"isConstructor":false,"kind":"function","modifiers":[null],"name":"tickSpacing","overrides":null,"scope":39,"stateMutability":"view","virtual":false,"visibility":"external"},"children":[{"attributes":{"text":"@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"},"id":27,"name":"StructuredDocumentation","src":"956:358:0"},{"attributes":{"parameters":[null]},"children":[],"id":28,"name":"ParameterList","src":"1339:2:0"},{"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"","overrides":null,"scope":32,"stateVariable":false,"storageLocation":"default","type":"int24","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"int24","type":"int24"},"id":29,"name":"ElementaryTypeName","src":"1365:5:0"}],"id":30,"name":"VariableDeclaration","src":"1365:5:0"}],"id":31,"name":"ParameterList","src":"1364:7:0"}],"id":32,"name":"FunctionDefinition","src":"1319:53:0"},{"attributes":{"body":null,"functionSelector":"70cf754a","implemented":false,"isConstructor":false,"kind":"function","modifiers":[null],"name":"maxLiquidityPerTick","overrides":null,"scope":39,"stateMutability":"view","virtual":false,"visibility":"external"},"children":[{"attributes":{"text":"@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"},"id":33,"name":"StructuredDocumentation","src":"1378:363:0"},{"attributes":{"parameters":[null]},"children":[],"id":34,"name":"ParameterList","src":"1774:2:0"},{"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"","overrides":null,"scope":38,"stateVariable":false,"storageLocation":"default","type":"uint128","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint128","type":"uint128"},"id":35,"name":"ElementaryTypeName","src":"1800:7:0"}],"id":36,"name":"VariableDeclaration","src":"1800:7:0"}],"id":37,"name":"ParameterList","src":"1799:9:0"}],"id":38,"name":"FunctionDefinition","src":"1746:63:0"}],"id":39,"name":"ContractDefinition","src":"225:1586:0"}],"id":40,"name":"SourceUnit","src":"45:1767:0"}}},"version":"0.6.11+commit.5ef660b1.Linux.g++"}
