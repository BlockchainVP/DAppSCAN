{"contracts":{"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-UniswapV3Core/v3-core-99223f33fd69a9e024f00bd8eea17b029d3f8f2d/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState":{"abi":"[{\"constant\":true,\"inputs\":[{\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"name\":\"liquidityCumulatives\",\"type\":\"uint160[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tickLower\",\"type\":\"int24\"},{\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"secondsInside\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","bin":"","bin-runtime":"","srcmap":"","srcmap-runtime":""}},"sourceList":["/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-UniswapV3Core/v3-core-99223f33fd69a9e024f00bd8eea17b029d3f8f2d/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol"],"sources":{"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-UniswapV3Core/v3-core-99223f33fd69a9e024f00bd8eea17b029d3f8f2d/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-UniswapV3Core/v3-core-99223f33fd69a9e024f00bd8eea17b029d3f8f2d/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol","exportedSymbols":{"IUniswapV3PoolDerivedState":[23]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0"]},"id":1,"name":"PragmaDirective","src":"39:24:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"interface","documentation":"@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs.","fullyImplemented":false,"linearizedBaseContracts":[23],"name":"IUniswapV3PoolDerivedState","scope":24},"children":[{"attributes":{"body":null,"documentation":"@notice Returns a relative timestamp value representing how long, in seconds, the pool has spent between\n tickLower and tickUpper\n @dev This timestamp is strictly relative. To get a useful elapsed time (i.e., duration) value, the value returned\n by this method should be checkpointed externally after a position is minted, and again before a position is\n burned. Thus the external contract must control the lifecycle of the position.\n @param tickLower The lower tick of the range for which to get the seconds inside\n @param tickUpper The upper tick of the range for which to get the seconds inside\n @return A relative timestamp for how long the pool spent in the tick range","implemented":false,"isConstructor":false,"kind":"function","modifiers":[null],"name":"secondsInside","scope":23,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"tickLower","scope":10,"stateVariable":false,"storageLocation":"default","type":"int24","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"int24","type":"int24"},"id":2,"name":"ElementaryTypeName","src":"1084:5:0"}],"id":3,"name":"VariableDeclaration","src":"1084:15:0"},{"attributes":{"constant":false,"name":"tickUpper","scope":10,"stateVariable":false,"storageLocation":"default","type":"int24","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"int24","type":"int24"},"id":4,"name":"ElementaryTypeName","src":"1101:5:0"}],"id":5,"name":"VariableDeclaration","src":"1101:15:0"}],"id":6,"name":"ParameterList","src":"1083:34:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":10,"stateVariable":false,"storageLocation":"default","type":"uint32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint32","type":"uint32"},"id":7,"name":"ElementaryTypeName","src":"1141:6:0"}],"id":8,"name":"VariableDeclaration","src":"1141:6:0"}],"id":9,"name":"ParameterList","src":"1140:8:0"}],"id":10,"name":"FunctionDefinition","src":"1061:88:0"},{"attributes":{"body":null,"documentation":"@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return liquidityCumulatives Cumulative liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp","implemented":false,"isConstructor":false,"kind":"function","modifiers":[null],"name":"observe","scope":23,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"secondsAgos","scope":22,"stateVariable":false,"storageLocation":"calldata","type":"uint32[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint32[]"},"children":[{"attributes":{"name":"uint32","type":"uint32"},"id":11,"name":"ElementaryTypeName","src":"2196:6:0"}],"id":12,"name":"ArrayTypeName","src":"2196:8:0"}],"id":13,"name":"VariableDeclaration","src":"2196:29:0"}],"id":14,"name":"ParameterList","src":"2195:31:0"},{"children":[{"attributes":{"constant":false,"name":"tickCumulatives","scope":22,"stateVariable":false,"storageLocation":"memory","type":"int56[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"int56[]"},"children":[{"attributes":{"name":"int56","type":"int56"},"id":15,"name":"ElementaryTypeName","src":"2274:5:0"}],"id":16,"name":"ArrayTypeName","src":"2274:7:0"}],"id":17,"name":"VariableDeclaration","src":"2274:30:0"},{"attributes":{"constant":false,"name":"liquidityCumulatives","scope":22,"stateVariable":false,"storageLocation":"memory","type":"uint160[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"uint160[]"},"children":[{"attributes":{"name":"uint160","type":"uint160"},"id":18,"name":"ElementaryTypeName","src":"2306:7:0"}],"id":19,"name":"ArrayTypeName","src":"2306:9:0"}],"id":20,"name":"VariableDeclaration","src":"2306:37:0"}],"id":21,"name":"ParameterList","src":"2273:71:0"}],"id":22,"name":"FunctionDefinition","src":"2179:166:0"}],"id":23,"name":"ContractDefinition","src":"287:2060:0"}],"id":24,"name":"SourceUnit","src":"39:2309:0"}}},"version":"0.5.0+commit.1d4f565a.Linux.g++"}
