{"contracts":{"/home/yemx6/solc-dApp/code/Quantstamp-Airswap/node_modules/@gnosis.pm/safe-contracts/contracts/libraries/MultiSend.sol:MultiSend":{"abi":"[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"transactions\",\"type\":\"bytes\"}],\"name\":\"multiSend\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]","bin":"60a060405234801561001057600080fd5b503073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505060805160601c6102756100646000398060e052506102756000f3fe60806040526004361061001e5760003560e01c80638d80ff0a14610023575b600080fd5b6100dc6004803603602081101561003957600080fd5b810190808035906020019064010000000081111561005657600080fd5b82018360208201111561006857600080fd5b8035906020019184600183028401116401000000008311171561008a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506100de565b005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161415610183576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806102106030913960400191505060405180910390fd5b805160205b8181101561020a578083015160f81c6001820184015160601c6015830185015160358401860151605585018701600085600081146101cd57600181146101dd576101e8565b6000808585888a5af191506101e8565b6000808585895af491505b5060008114156101f757600080fd5b8260550187019650505050505050610188565b50505056fe4d756c746953656e642073686f756c64206f6e6c792062652063616c6c6564207669612064656c656761746563616c6ca2646970667358221220080900b852dde0deb4a313fcbdc51bb2c324b712ae2cf4c880d4e73343baab6064736f6c63430007000033","bin-runtime":"60806040526004361061001e5760003560e01c80638d80ff0a14610023575b600080fd5b6100dc6004803603602081101561003957600080fd5b810190808035906020019064010000000081111561005657600080fd5b82018360208201111561006857600080fd5b8035906020019184600183028401116401000000008311171561008a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506100de565b005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161415610183576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806102106030913960400191505060405180910390fd5b805160205b8181101561020a578083015160f81c6001820184015160601c6015830185015160358401860151605585018701600085600081146101cd57600181146101dd576101e8565b6000808585888a5af191506101e8565b6000808585895af491505b5060008114156101f757600080fd5b8260550187019650505050505050610188565b50505056fe4d756c746953656e642073686f756c64206f6e6c792062652063616c6c6564207669612064656c656761746563616c6ca2646970667358221220080900b852dde0deb4a313fcbdc51bb2c324b712ae2cf4c880d4e73343baab6064736f6c63430007000033","srcmap":"353:3128:0:-:0;;;429:65;;;;;;;;;;482:4;453:34;;;;;;;;;;;;353:3128;;;;;;;;;;;","srcmap-runtime":"353:3128:0:-:0;;;;;;;;;;;;;;;;;;;;;1295:2184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1391:18;1374:35;;1382:4;1374:35;;;;1366:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1571:12;1565:19;1606:4;1623:1840;1706:6;1703:1;1700:13;1623:1840;;;2097:1;2083:12;2079:20;2073:27;2067:4;2063:38;2371:4;2368:1;2364:12;2350;2346:31;2340:38;2334:4;2330:49;2533:4;2530:1;2526:12;2512;2508:31;2502:38;2716:4;2713:1;2709:12;2695;2691:31;2685:38;2910:4;2907:1;2903:12;2889;2885:31;2948:1;2973:9;3008:1;3003:112;;;;3141:1;3136:113;;;;2966:283;;3003:112;3091:1;3088;3076:10;3070:4;3063:5;3059:2;3052:5;3047:46;3036:57;;3003:112;;3136:113;3225:1;3222;3210:10;3204:4;3200:2;3193:5;3180:47;3169:58;;2966:283;;3281:1;3272:7;3269:14;3266:2;;;3316:1;3313;3306:12;3266:2;3437:10;3431:4;3427:21;3424:1;3420:29;3415:34;;1788:1675;;;;;;1623:1840;;;1537:1936;;;:::o"}},"sourceList":["/home/yemx6/solc-dApp/code/Quantstamp-Airswap/node_modules/@gnosis.pm/safe-contracts/contracts/libraries/MultiSend.sol"],"sources":{"/home/yemx6/solc-dApp/code/Quantstamp-Airswap/node_modules/@gnosis.pm/safe-contracts/contracts/libraries/MultiSend.sol":{"AST":{"attributes":{"absolutePath":"/home/yemx6/solc-dApp/code/Quantstamp-Airswap/node_modules/@gnosis.pm/safe-contracts/contracts/libraries/MultiSend.sol","exportedSymbols":{"MultiSend":[34]},"license":"LGPL-3.0-only"},"children":[{"attributes":{"literals":["solidity",">=","0.7",".0","<","0.9",".0"]},"id":1,"name":"PragmaDirective","src":"42:31:0"},{"attributes":{"abstract":false,"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","fullyImplemented":true,"linearizedBaseContracts":[34],"name":"MultiSend","scope":35},"children":[{"attributes":{"text":"@title Multi Send - Allows to batch multiple transactions into one.\n @author Nick Dodson - <nick.dodson@consensys.net>\n @author Gon\u00e7alo S\u00e1 - <goncalo.sa@consensys.net>\n @author Stefan George - <stefan@gnosis.io>\n @author Richard Meissner - <richard@gnosis.io>"},"id":2,"name":"StructuredDocumentation","src":"75:278:0"},{"attributes":{"constant":false,"mutability":"immutable","name":"multisendSingleton","scope":34,"stateVariable":true,"storageLocation":"default","type":"address","visibility":"private"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":3,"name":"ElementaryTypeName","src":"378:7:0"}],"id":4,"name":"VariableDeclaration","src":"378:44:0"},{"attributes":{"implemented":true,"isConstructor":true,"kind":"constructor","modifiers":[null],"name":"","scope":34,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":5,"name":"ParameterList","src":"440:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":6,"name":"ParameterList","src":"443:0:0"},{"children":[{"children":[{"attributes":{"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"address"},"children":[{"attributes":{"overloadedDeclarations":[null],"referencedDeclaration":4,"type":"address","value":"multisendSingleton"},"id":7,"name":"Identifier","src":"453:18:0"},{"attributes":{"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_MultiSend_$34","typeString":"contract MultiSend"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)"},"children":[{"attributes":{"name":"address"},"id":8,"name":"ElementaryTypeName","src":"474:7:0"}],"id":9,"name":"ElementaryTypeNameExpression","src":"474:7:0"},{"attributes":{"overloadedDeclarations":[null],"referencedDeclaration":-28,"type":"contract MultiSend","value":"this"},"id":10,"name":"Identifier","src":"482:4:0"}],"id":11,"name":"FunctionCall","src":"474:13:0"}],"id":12,"name":"Assignment","src":"453:34:0"}],"id":13,"name":"ExpressionStatement","src":"453:34:0"}],"id":14,"name":"Block","src":"443:51:0"}],"id":15,"name":"FunctionDefinition","src":"429:65:0"},{"attributes":{"functionSelector":"8d80ff0a","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"multiSend","scope":34,"stateMutability":"payable","virtual":false,"visibility":"public"},"children":[{"attributes":{"text":"@dev Sends multiple transactions and reverts all if one fails.\n @param transactions Encoded transactions. Each transaction is encoded as a packed bytes of\n                     operation as a uint8 with 0 for a call or 1 for a delegatecall (=> 1 byte),\n                     to as a address (=> 20 bytes),\n                     value as a uint256 (=> 32 bytes),\n                     data length as a uint256 (=> 32 bytes),\n                     data as bytes.\n                     see abi.encodePacked for more information on packed encoding\n @notice This method is payable as delegatecalls keep the msg.value from the previous call\n         If the calling method (e.g. execTransaction) received ETH this would revert otherwise"},"id":16,"name":"StructuredDocumentation","src":"500:790:0"},{"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"transactions","scope":33,"stateVariable":false,"storageLocation":"memory","type":"bytes","visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":17,"name":"ElementaryTypeName","src":"1314:5:0"}],"id":18,"name":"VariableDeclaration","src":"1314:25:0"}],"id":19,"name":"ParameterList","src":"1313:27:0"},{"attributes":{"parameters":[null]},"children":[],"id":20,"name":"ParameterList","src":"1356:0:0"},{"children":[{"children":[{"attributes":{"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be54b8c9bc01d366a87d58d4e594f7b0f8a1032210aae73d17a5ed4f177986bc","typeString":"literal_string \"MultiSend should only be called via delegatecall\""}],"overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"type":"function (bool,string memory) pure","value":"require"},"id":21,"name":"Identifier","src":"1366:7:0"},{"attributes":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"tryCall":false,"type":"address","type_conversion":true},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_contract$_MultiSend_$34","typeString":"contract MultiSend"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"type":"type(address)"},"children":[{"attributes":{"name":"address"},"id":22,"name":"ElementaryTypeName","src":"1374:7:0"}],"id":23,"name":"ElementaryTypeNameExpression","src":"1374:7:0"},{"attributes":{"overloadedDeclarations":[null],"referencedDeclaration":-28,"type":"contract MultiSend","value":"this"},"id":24,"name":"Identifier","src":"1382:4:0"}],"id":25,"name":"FunctionCall","src":"1374:13:0"},{"attributes":{"overloadedDeclarations":[null],"referencedDeclaration":4,"type":"address","value":"multisendSingleton"},"id":26,"name":"Identifier","src":"1391:18:0"}],"id":27,"name":"BinaryOperation","src":"1374:35:0"},{"attributes":{"hexvalue":"4d756c746953656e642073686f756c64206f6e6c792062652063616c6c6564207669612064656c656761746563616c6c","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"token":"string","type":"literal_string \"MultiSend should only be called via delegatecall\"","value":"MultiSend should only be called via delegatecall"},"id":28,"name":"Literal","src":"1411:50:0"}],"id":29,"name":"FunctionCall","src":"1366:96:0"}],"id":30,"name":"ExpressionStatement","src":"1366:96:0"},{"attributes":{"evmVersion":"istanbul","externalReferences":[{"declaration":18,"isOffset":false,"isSlot":false,"src":"1571:12:0","valueSize":1},{"declaration":18,"isOffset":false,"isSlot":false,"src":"2083:12:0","valueSize":1},{"declaration":18,"isOffset":false,"isSlot":false,"src":"2350:12:0","valueSize":1},{"declaration":18,"isOffset":false,"isSlot":false,"src":"2512:12:0","valueSize":1},{"declaration":18,"isOffset":false,"isSlot":false,"src":"2695:12:0","valueSize":1},{"declaration":18,"isOffset":false,"isSlot":false,"src":"2889:12:0","valueSize":1}],"operations":"{\n    let length := mload(transactions)\n    let i := 0x20\n    for { } lt(i, length) { }\n    {\n        let operation := shr(0xf8, mload(add(transactions, i)))\n        let to := shr(0x60, mload(add(transactions, add(i, 0x01))))\n        let value := mload(add(transactions, add(i, 0x15)))\n        let dataLength := mload(add(transactions, add(i, 0x35)))\n        let data := add(transactions, add(i, 0x55))\n        let success := 0\n        switch operation\n        case 0 {\n            success := call(gas(), to, value, data, dataLength, 0, 0)\n        }\n        case 1 {\n            success := delegatecall(gas(), to, data, dataLength, 0, 0)\n        }\n        if eq(success, 0) { revert(0, 0) }\n        i := add(i, add(0x55, dataLength))\n    }\n}"},"children":[],"id":31,"name":"InlineAssembly","src":"1528:1945:0"}],"id":32,"name":"Block","src":"1356:2123:0"}],"id":33,"name":"FunctionDefinition","src":"1295:2184:0"}],"id":34,"name":"ContractDefinition","src":"353:3128:0"}],"id":35,"name":"SourceUnit","src":"42:3440:0"}}},"version":"0.7.0+commit.9e61f92b.Linux.g++"}
