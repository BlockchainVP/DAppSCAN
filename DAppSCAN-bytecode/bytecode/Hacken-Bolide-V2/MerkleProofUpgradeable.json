{"contracts":{"/home/yemx6/solc-dApp/code/Hacken-Bolide-V2/node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/MerkleProofUpgradeable.sol:MerkleProofUpgradeable":{"abi":[],"bin":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220911769cd59b3ba9f6ada8b4c9d25d4798ce47a04061dab7096ff742b956609e564736f6c63430008000033","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220911769cd59b3ba9f6ada8b4c9d25d4798ce47a04061dab7096ff742b956609e564736f6c63430008000033","srcmap":"143:1146:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","srcmap-runtime":"143:1146:0:-:0;;;;;;;;"}},"sourceList":["/home/yemx6/solc-dApp/code/Hacken-Bolide-V2/node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/MerkleProofUpgradeable.sol"],"sources":{"/home/yemx6/solc-dApp/code/Hacken-Bolide-V2/node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/MerkleProofUpgradeable.sol":{"AST":{"absolutePath":"/home/yemx6/solc-dApp/code/Hacken-Bolide-V2/node_modules/@openzeppelin/contracts-upgradeable/utils/cryptography/MerkleProofUpgradeable.sol","exportedSymbols":{"MerkleProofUpgradeable":[70]},"id":71,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"58:84:0","text":" @dev These functions deal with verification of Merkle trees (hash trees),"},"fullyImplemented":true,"id":70,"linearizedBaseContracts":[70],"name":"MerkleProofUpgradeable","nodeType":"ContractDefinition","nodes":[{"body":{"id":68,"nodeType":"Block","src":"605:682:0","statements":[{"assignments":[16],"declarations":[{"constant":false,"id":16,"mutability":"mutable","name":"computedHash","nodeType":"VariableDeclaration","scope":68,"src":"615:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"615:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":18,"initialValue":{"id":17,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"638:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"615:27:0"},{"body":{"id":62,"nodeType":"Block","src":"696:472:0","statements":[{"assignments":[31],"declarations":[{"constant":false,"id":31,"mutability":"mutable","name":"proofElement","nodeType":"VariableDeclaration","scope":62,"src":"710:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":30,"name":"bytes32","nodeType":"ElementaryTypeName","src":"710:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":35,"initialValue":{"baseExpression":{"id":32,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"733:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":34,"indexExpression":{"id":33,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"739:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"733:8:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"710:31:0"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":38,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":36,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"760:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":37,"name":"proofElement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"776:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"760:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":60,"nodeType":"Block","src":"977:181:0","statements":[{"expression":{"id":58,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":50,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"1073:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":54,"name":"proofElement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"1115:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":55,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"1129:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":52,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1098:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1098:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1098:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":51,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1088:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1088:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1073:70:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":59,"nodeType":"ExpressionStatement","src":"1073:70:0"}]},"id":61,"nodeType":"IfStatement","src":"756:402:0","trueBody":{"id":49,"nodeType":"Block","src":"790:181:0","statements":[{"expression":{"id":47,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":39,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"886:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":43,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"928:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":44,"name":"proofElement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"942:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":41,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"911:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":42,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"911:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":45,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"911:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":40,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"901:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"901:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"886:70:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":48,"nodeType":"ExpressionStatement","src":"886:70:0"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":26,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":23,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"673:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":24,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"677:5:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":25,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"677:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"673:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":63,"initializationExpression":{"assignments":[20],"declarations":[{"constant":false,"id":20,"mutability":"mutable","name":"i","nodeType":"VariableDeclaration","scope":63,"src":"658:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19,"name":"uint256","nodeType":"ElementaryTypeName","src":"658:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":22,"initialValue":{"hexValue":"30","id":21,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"670:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"658:13:0"},"loopExpression":{"expression":{"id":28,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"691:3:0","subExpression":{"id":27,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"691:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":29,"nodeType":"ExpressionStatement","src":"691:3:0"},"nodeType":"ForStatement","src":"653:515:0"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":64,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"1260:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":65,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1276:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1260:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":14,"id":67,"nodeType":"Return","src":"1253:27:0"}]},"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"180:323:0","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."},"id":69,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nodeType":"FunctionDefinition","parameters":{"id":11,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6,"mutability":"mutable","name":"proof","nodeType":"VariableDeclaration","scope":69,"src":"524:22:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4,"name":"bytes32","nodeType":"ElementaryTypeName","src":"524:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5,"nodeType":"ArrayTypeName","src":"524:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":8,"mutability":"mutable","name":"root","nodeType":"VariableDeclaration","scope":69,"src":"548:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7,"name":"bytes32","nodeType":"ElementaryTypeName","src":"548:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":10,"mutability":"mutable","name":"leaf","nodeType":"VariableDeclaration","scope":69,"src":"562:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9,"name":"bytes32","nodeType":"ElementaryTypeName","src":"562:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"523:52:0"},"returnParameters":{"id":14,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":69,"src":"599:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12,"name":"bool","nodeType":"ElementaryTypeName","src":"599:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"598:6:0"},"scope":70,"src":"508:779:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":71,"src":"143:1146:0"}],"src":"33:1257:0"}}},"version":"0.8.0+commit.c7dfd78e.Linux.g++"}
