{"contracts":{"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/joinSplit/JoinSplit.sol:JoinSplit":{"abi":"[{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"}]","bin":"608060405234801561001057600080fd5b506108a9806100206000396000f3fe608060405234801561001057600080fd5b50610019610023565b60606040526102b6565b60443560805260643560a05261018435610104016101243581357f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001806101443506828411156100785761019460005260206000fd5b60a060c0863502860103356024356102a052806102c052846102e052610164356103005282828285030990506100ae848761053b565b608084026103200160005b858110156102785760c0810260208901018035602082013586896001860114600181146100e557610100565b8793508a8c14600181146100f8576100fe565b848b0394505b505b5061010c82848661048c565b8a600186011160018114610127576000811461015257610159565b89848b03890897506000518a81860994508a81850993508a818b099250602060002060005250610159565b8984890897505b5060406080850160e037604080850160203780890361012052826060528160c05260406101a0606060e060075afa60406101206060602060075afa8116905060406101606060608060075afa811690506040610160608061012060065afa81169050604087608061016060065afa811690508b86141561021357602051610260526040516102805260e0516101e052610100517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4703610200525b8b86111561024f578160605260406102206060602060075afa6040610260608061022060065afa60406101e060806101a060065afa1616811690505b8015156102625761019060005260206000fd5b60408701965050505050506001810190506100b9565b508486101561028c5761028b60846102bb565b5b836102a082036102a0200683811415156102ac5761019460005260206000fd5b5050505050505050565b610487565b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4781356020830135604084013560608501357f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81147f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa83147f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c285147f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed87148415861588158a1517171717171717156103995761019060005260206000fd5b6101e051602052610200516040527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6080527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26060527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa60c0527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b60a0526102605160e05261028051610100528361014052826101205281610180528061016052602080610180602060085afa602051158115171561047e5761019060005260206000fd5b50505050505050565b610536565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760408301356060840135608085013560a086013584838409856003878789898a090908148582830986600388868a888909090814166001891189888b06141660018b118b898d0614161616151561052b5761019060005260206000fd5b505050505050505050565b610577565b60005b8281101561056757606060c082028301016080816080840261032001375060018101905061053e565b5060808202610320206000525050565b61057f610581565b005b61018435610104018035610124356101a435610124016101c435610124016101e4356101440160016101a05260606101c05260c061020052610164356102405260a060c0873502870103357f183227397098d014dc2822db40c0ac2e9419f4243cdcb848a1f0fac9f8000000811160018114610604576000811461063057610636565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001820361026052610636565b81610260525b5061014435610280526102a0856020820152602086026102e00160005b878110156107305760c0810260208b0101600160005260806040820160203760a060002060c05260c08352600160208401526201010160a05260208202880135604084015260c0516060840152604060808401527f800000000000000000000000000000000000000000000000000000000000000060016060830135160260408201351760a08401527f8000000000000000000000000000000000000000000000000000000000000000600160a0830135160260808201351760c08401528383036020830260408601015260e08301925050600181019050610653565b50602082820303825281810360c00161022052809150868803602083015260208789030260400181019050865b8881101561084e5760c0810260208b01016020898303028601358060408803013560016000526080604084016020378060c00185526001602086015260208b850302890135604086015260a060002060608601528060400160808601527f8000000000000000000000000000000000000000000000000000000000000000600160405116026020511760a08601527f8000000000000000000000000000000000000000000000000000000000000000600160805116026060511760c08601528060208903830160e087013785850360208c86030260408801015260208551018501945050505060018101905061075d565b5060208282030382526102a081038060a0016101e0528061010001610180526020610160528061014001610160f3fea165627a7a72305820aa7894b118760f055c6ef097ef23c908c7b854b266fbf8c2785d6fe102b15ad70029","bin-runtime":"608060405234801561001057600080fd5b50610019610023565b60606040526102b6565b60443560805260643560a05261018435610104016101243581357f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001806101443506828411156100785761019460005260206000fd5b60a060c0863502860103356024356102a052806102c052846102e052610164356103005282828285030990506100ae848761053b565b608084026103200160005b858110156102785760c0810260208901018035602082013586896001860114600181146100e557610100565b8793508a8c14600181146100f8576100fe565b848b0394505b505b5061010c82848661048c565b8a600186011160018114610127576000811461015257610159565b89848b03890897506000518a81860994508a81850993508a818b099250602060002060005250610159565b8984890897505b5060406080850160e037604080850160203780890361012052826060528160c05260406101a0606060e060075afa60406101206060602060075afa8116905060406101606060608060075afa811690506040610160608061012060065afa81169050604087608061016060065afa811690508b86141561021357602051610260526040516102805260e0516101e052610100517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4703610200525b8b86111561024f578160605260406102206060602060075afa6040610260608061022060065afa60406101e060806101a060065afa1616811690505b8015156102625761019060005260206000fd5b60408701965050505050506001810190506100b9565b508486101561028c5761028b60846102bb565b5b836102a082036102a0200683811415156102ac5761019460005260206000fd5b5050505050505050565b610487565b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4781356020830135604084013560608501357f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81147f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa83147f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c285147f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed87148415861588158a1517171717171717156103995761019060005260206000fd5b6101e051602052610200516040527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6080527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26060527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa60c0527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b60a0526102605160e05261028051610100528361014052826101205281610180528061016052602080610180602060085afa602051158115171561047e5761019060005260206000fd5b50505050505050565b610536565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760408301356060840135608085013560a086013584838409856003878789898a090908148582830986600388868a888909090814166001891189888b06141660018b118b898d0614161616151561052b5761019060005260206000fd5b505050505050505050565b610577565b60005b8281101561056757606060c082028301016080816080840261032001375060018101905061053e565b5060808202610320206000525050565b61057f610581565b005b61018435610104018035610124356101a435610124016101c435610124016101e4356101440160016101a05260606101c05260c061020052610164356102405260a060c0873502870103357f183227397098d014dc2822db40c0ac2e9419f4243cdcb848a1f0fac9f8000000811160018114610604576000811461063057610636565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001820361026052610636565b81610260525b5061014435610280526102a0856020820152602086026102e00160005b878110156107305760c0810260208b0101600160005260806040820160203760a060002060c05260c08352600160208401526201010160a05260208202880135604084015260c0516060840152604060808401527f800000000000000000000000000000000000000000000000000000000000000060016060830135160260408201351760a08401527f8000000000000000000000000000000000000000000000000000000000000000600160a0830135160260808201351760c08401528383036020830260408601015260e08301925050600181019050610653565b50602082820303825281810360c00161022052809150868803602083015260208789030260400181019050865b8881101561084e5760c0810260208b01016020898303028601358060408803013560016000526080604084016020378060c00185526001602086015260208b850302890135604086015260a060002060608601528060400160808601527f8000000000000000000000000000000000000000000000000000000000000000600160405116026020511760a08601527f8000000000000000000000000000000000000000000000000000000000000000600160805116026060511760c08601528060208903830160e087013785850360208c86030260408801015260208551018501945050505060018101905061075d565b5060208282030382526102a081038060a0016101e0528061010001610180526020610160528061014001610160f3fea165627a7a72305820aa7894b118760f055c6ef097ef23c908c7b854b266fbf8c2785d6fe102b15ad70029","srcmap":"1073:18811:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1073:18811:0;;;;;;;","srcmap-runtime":"1073:18811:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1073:18811:0;2060:19;;;;2346:4;2340;2333:18;3221:10408;;;3294:4;3281:18;3275:4;3268:32;3343:4;3330:18;3324:4;3317:32;3403:5;3390:19;3383:5;3379:31;3449:5;3436:19;3494:5;3481:19;3534:66;3659:9;3651:5;3638:19;3634:35;3731:1;3728;3725:8;3722:2;;;3749:3;3743:4;3736:17;3767:4;3761;3754:18;3722:2;3926:4;3918;3910:5;3897:19;3893:30;3886:5;3882:42;3878:53;3865:67;4029:4;4016:18;4009:5;4002:33;4066:2;4059:5;4052:17;4100:1;4093:5;4086:16;4146:5;4133:19;4126:5;4119:34;4214:9;4203;4198:2;4187:9;4183:18;4176:48;4170:54;;4274:25;4297:1;4290:5;4274:25;;;4343:4;4340:1;4336:12;4329:5;4325:24;4965:1;4950:7442;4975:1;4972;4969:8;4950:7442;;;5128:4;5125:1;5121:12;5114:4;5107:5;5103:16;5099:35;6333:9;6320:23;6401:4;6390:9;6386:20;6373:34;6437:9;6977:1;6970:4;6967:1;6963:12;6960:19;7005:1;7000:279;;;;6953:326;;7000:279;7038:2;7033:7;;7145:1;7142;7139:8;7177:1;7172:85;;;;7132:125;;7172:85;7229:1;7218:9;7214:17;7209:22;;7132:125;;6953:326;;7364:35;7397:1;7394;7383:9;7364:35;;;7583:1;7576:4;7573:1;7569:12;7566:19;7611:1;7606:521;;;;8153:1;8148:193;;;;7559:782;;7606:521;7777:9;7773:1;7762:9;7758:17;7754:2;7747:40;7741:46;;7827:4;7821:11;7875:9;7872:1;7869;7862:23;7857:28;;7928:9;7925:1;7922;7915:23;7910:28;;7989:9;7986:1;7975:9;7968:31;7963:36;;8099:4;8093;8083:21;8077:4;8070:35;7613:514;7606:521;;8148:193;8309:9;8306:1;8302:2;8295:24;8289:30;;7559:782;;8860:4;8853;8842:9;8838:20;8832:4;8819:46;8927:4;8920;8909:9;8905:20;8899:4;8886:46;8982:1;8971:9;8967:17;8960:5;8953:32;9020:1;9014:4;9007:15;9056:1;9050:4;9043:15;9462:4;9455:5;9449:4;9443;9440:1;9435:3;9424:43;9548:4;9541:5;9535:4;9529;9526:1;9521:3;9510:43;9502:6;9498:56;9488:66;;9635:4;9628:5;9622:4;9616;9613:1;9608:3;9597:43;9589:6;9585:56;9575:66;;9922:4;9915:5;9909:4;9902:5;9899:1;9894:3;9883:44;9875:6;9871:57;9861:67;;10157:4;10154:1;10148:4;10141:5;10138:1;10133:3;10122:40;10114:6;10110:53;10100:63;;10456:1;10453;10450:8;10447:2;;;10505:4;10499:11;10492:5;10485:26;10556:4;10550:11;10543:5;10536:26;10607:4;10601:11;10594:5;10587:26;10787:5;10781:12;10713:66;10709:85;10674:5;10638:182;10447:2;11130:1;11127;11124:8;11121:2;;;11172:1;11166:4;11159:15;11589:4;11582:5;11576:4;11570;11567:1;11562:3;11551:43;11478:4;11471:5;11465:4;11458:5;11455:1;11450:3;11439:44;11396:4;11389:5;11383:4;11376:5;11373:1;11368:3;11357:44;11316:201;11279:345;11243:6;11210:440;11200:450;;11121:2;12255:6;12248:14;12245:2;;;12278:3;12272:4;12265:17;12296:4;12290;12283:18;12245:2;12336:4;12333:1;12329:12;12324:17;;5000:7392;;;;;4992:4;4989:1;4985:12;4980:17;;4950:7442;;;4954:14;12835:1;12832;12829:8;12826:2;;;12860:21;12876:4;12860:21;;;12826:2;13239:9;13230:5;13227:1;13223:13;13216:5;13206:31;13202:47;13289:9;13279:8;13276:23;13269:31;13266:2;;;13386:3;13380:4;13373:17;13424:4;13418;13411:18;13266:2;3250:10379;;;;;;;;;;13879:2508;;;13945:66;14055:2;14042:16;14110:4;14106:2;14102:13;14089:27;14168:4;14164:2;14160:13;14147:27;14226:4;14222:2;14218:13;14205:27;14821:65;14813:6;14810:77;14720:66;14712:6;14709:78;14619:66;14611:6;14608:78;14518:66;14510:6;14507:78;14477:6;14470:14;14440:6;14433:14;14403:6;14396:14;14367:6;14360:14;14336:75;14333:115;14330:155;14327:259;14324:363;14321:467;14318:570;14315:2;;;14940:3;14934:4;14927:17;14978:4;14972;14965:18;14315:2;15371:5;15365:12;15359:4;15352:26;15437:5;15431:12;15425:4;15418:26;15497:66;15491:4;15484:80;15594:66;15588:4;15581:80;15691:66;15685:4;15678:80;15788:65;15782:4;15775:79;15890:5;15884:12;15878:4;15871:26;15957:5;15951:12;15944:5;15937:27;16018:6;16011:5;16004:21;16056:6;16049:5;16042:21;16094:6;16087:5;16080:21;16132:6;16125:5;16118:21;16210:4;16204;16197:5;16191:4;16188:1;16183:3;16172:43;16269:4;16263:11;16256:19;16246:7;16239:15;16236:40;16233:2;;;16312:3;16306:4;16299:17;16350:4;16344;16337:18;16233:2;13908:2479;;;;;;;;;16726:1994;;;16801:66;16903;17023:4;17017;17013:15;17000:29;17083:4;17077;17073:15;17060:29;17143:4;17137;17133:15;17120:29;17203:4;17197;17193:15;17180:29;18505:11;18497:6;18489;18482:35;18411:11;18376:1;18330:11;18322:6;18308:11;18300:6;18292;18285:35;18278:64;18238:214;18188:355;18124:11;18116:6;18108;18101:35;18030:11;17995:1;17949:11;17941:6;17927:11;17919:6;17911;17904:35;17897:64;17857:214;17807:355;17778:791;17663:1;17660;17657:8;17593:1;17581:9;17578:1;17574:17;17571:24;17538:188;17440:1;17437;17434:8;17370:1;17358:9;17355:1;17351:17;17348:24;17315:197;17286:466;17257:1334;17229:1380;17226:2;;;18645:3;18639:4;18632:17;18683:4;18677;18670:18;17226:2;16766:1954;;;;;;;;;;;19311:330;;;19379:1;19364:202;19389:1;19386;19383:8;19364:202;;;19475:4;19467;19464:1;19460:12;19453:5;19449:24;19445:35;19543:4;19536:5;19528:4;19525:1;19521:12;19514:5;19510:24;19497:51;19414:152;19406:4;19403:1;19399:12;19394:17;;19364:202;;;19368:14;19620:4;19617:1;19613:12;19606:5;19596:30;19590:4;19583:44;19346:295;;;;19840:35;:33;:35::i;:::-;1073:18811;1483:9614:1;1632:5;1619:19;1612:5;1608:31;1674:5;1661:19;1715:5;1702:19;1777:5;1764:19;1757:5;1753:31;1877:5;1864:19;1857:5;1853:31;1974:5;1961:19;1954:5;1950:31;4025:4;4018:5;4011:19;4104:4;4097:5;4090:19;4238:4;4231:5;4224:19;4390:5;4377:19;4370:5;4363:34;4674:4;4666;4658:5;4645:19;4641:30;4634:5;4630:42;4626:53;4613:67;4712:77;4703:7;4700:90;4808:1;4803:134;;;;4955:1;4950:61;;;;4693:318;;4803:134;4855:66;4846:7;4842:80;4835:5;4828:95;4803:134;;4950:61;4989:7;4982:5;4975:22;4693:318;;5052:5;5039:19;5032:5;5025:34;5126:5;5227:1;5220:4;5210:8;5206:19;5199:30;5396:4;5393:1;5389:12;5382:5;5378:24;5431:1;5416:2198;5441:1;5438;5435:8;5416:2198;;;5530:4;5527:1;5523:12;5516:4;5509:5;5505:16;5501:35;5615:4;5609;5602:18;5691:4;5684;5673:9;5669:20;5663:4;5650:46;5762:4;5756;5746:21;5740:4;5733:35;5854:4;5851:1;5844:15;5936:4;5929;5926:1;5922:12;5915:26;5971:7;5965:4;5958:21;6128:4;6125:1;6121:12;6108:11;6104:30;6091:44;6084:4;6081:1;6077:12;6070:66;6230:4;6224:11;6217:4;6214:1;6210:12;6203:33;6357:4;6350;6347:1;6343:12;6336:26;6709:66;6674:4;6666;6655:9;6651:20;6638:34;6634:45;6601:200;6569:4;6558:9;6554:20;6541:34;6513:310;6486:4;6483:1;6479:12;6451:390;7188:66;7153:4;7145;7134:9;7130:20;7117:34;7113:45;7080:200;7048:4;7037:9;7033:20;7020:34;6992:310;6965:4;6962:1;6958:12;6930:390;7475:8;7472:1;7468:16;7460:4;7457:1;7453:12;7446:4;7436:8;7432:19;7428:38;7421:64;7595:4;7592:1;7588:12;7583:17;;5466:2148;5458:4;5455:1;5451:12;5446:17;;5416:2198;;;5420:14;7800:4;7789:8;7786:1;7782:16;7778:27;7768:8;7761:45;7850:8;7847:1;7843:16;7837:4;7833:27;7826:5;7819:42;7933:1;7921:13;;7982:1;7979;7975:9;7968:4;7958:8;7954:19;7947:38;8067:4;8063:1;8060;8056:9;8052:20;8046:4;8042:31;8039:1;8035:39;8030:44;;8131:1;8116:2441;8141:1;8138;8135:8;8116:2441;;;8264:4;8261:1;8257:12;8250:4;8243:5;8239:16;8235:35;8393:4;8389:1;8386;8382:9;8378:20;8368:8;8364:35;8351:49;8517:13;8510:4;8500:8;8496:19;8492:39;8479:53;8612:4;8606;8599:18;8688:4;8681;8670:9;8666:20;8660:4;8647:46;8795:14;8789:4;8785:25;8782:1;8775:36;8888:4;8881;8878:1;8874:12;8867:26;9038:4;9034:1;9031;9027:9;9023:20;9009:12;9005:39;8992:53;8985:4;8982:1;8978:12;8971:75;9135:4;9129;9119:21;9112:4;9109:1;9105:12;9098:43;9249:14;9243:4;9239:25;9232:4;9229:1;9225:12;9218:47;9566:66;9531:4;9524;9518:11;9514:22;9481:177;9450:4;9444:11;9416:264;9389:4;9386:1;9382:12;9354:344;9975:66;9944:4;9937;9931:11;9927:22;9898:165;9871:4;9865:11;9841:240;9818:4;9815:1;9811:12;9787:312;10233:14;10225:4;10215:8;10211:19;10196:13;10192:39;10185:4;10182:1;10178:12;10165:83;10411:8;10408:1;10404:16;10396:4;10392:1;10389;10385:9;10381:20;10374:4;10364:8;10360:19;10356:46;10349:72;10537:4;10533:1;10527:8;10523:19;10520:1;10516:27;10511:32;;8166:2391;;;8158:4;8155:1;8151:12;8146:17;;8116:2441;;;8120:14;10679:4;10668:8;10665:1;10661:16;10657:27;10647:8;10640:45;10779:5;10776:1;10772:13;10822:11;10816:4;10812:22;10805:5;10798:37;10913:11;10906:5;10902:23;10895:5;10888:38;10994:4;10987:5;10980:19;11037:11;11030:5;11026:23;11019:5;11012:38"},"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/joinSplit/JoinSplitABIEncoder.sol:JoinSplitABIEncoder":{"abi":"[]","bin":"604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a723058203883fb9ec6cf7d5f7c2d8966be3dc673a4a30af14a2ed80e79533624924efe080029","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a723058203883fb9ec6cf7d5f7c2d8966be3dc673a4a30af14a2ed80e79533624924efe080029","srcmap":"690:10409:1:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24","srcmap-runtime":"690:10409:1:-;;;;;;;;"},"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/interfaces/JoinSplitInterface.sol:JoinSplitInterface":{"abi":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256[6]\"}],\"name\":\"validateJoinSplit\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}]","bin":"","bin-runtime":"","srcmap":"","srcmap-runtime":""}},"sourceList":["/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/joinSplit/JoinSplit.sol","/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/joinSplit/JoinSplitABIEncoder.sol","/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/interfaces/JoinSplitInterface.sol"],"sources":{"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/joinSplit/JoinSplit.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/joinSplit/JoinSplit.sol","exportedSymbols":{"JoinSplit":[14]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0","<","0.6",".0"]},"id":1,"name":"PragmaDirective","src":"0:31:0"},{"attributes":{"SourceUnit":23,"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/joinSplit/JoinSplitABIEncoder.sol","file":"./JoinSplitABIEncoder.sol","scope":15,"symbolAliases":[null],"unitAlias":""},"id":2,"name":"ImportDirective","src":"33:35:0"},{"attributes":{"SourceUnit":39,"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/interfaces/JoinSplitInterface.sol","file":"../../../interfaces/JoinSplitInterface.sol","scope":15,"symbolAliases":[null],"unitAlias":""},"id":3,"name":"ImportDirective","src":"69:52:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title Library to validate AZTEC zero-knowledge proofs\n@author Zachary Williamson, AZTEC\n@dev Don't include this as an internal library. This contract uses a static memory table to cache\nelliptic curve primitives and hashes.\nCalling this internally from another function will lead to memory mutation and undefined behaviour.\nThe intended use case is to call this externally via `staticcall`.\nExternal calls to OptimizedAZTEC can be treated as pure functions as this contract contains no\nstorage and makes no external calls (other than to precompiles)\nCopyright Spilsbury Holdings Ltd 2019. All rights reserved.\nWe will be releasing AZTEC as an open-source protocol that provides efficient transaction privacy for Ethereum.\nOur full vision of the protocol includes confidential cross-asset interactions via our\nfamily of AZTEC zero-knowledge proofs\nand the AZTEC token standard, stay tuned for updates!*","fullyImplemented":true,"linearizedBaseContracts":[14],"name":"JoinSplit","scope":15},"children":[{"attributes":{"documentation":"@dev AZTEC will take any transaction sent to it and attempt to validate a zero knowledge proof.\nIf the proof is not valid, the transaction throws.\n@notice See AZTECInterface for how method calls should be constructed.\n'Cost' of raw elliptic curve primitives for a transaction:\n260,700 gas + (124,500 * number of input notes) + (167,600 * number of output notes).\nFor a basic 'joinSplit' with 2 inputs and 2 outputs = 844,900 gas.\nAZTEC is written in YUL to enable manual memory management and for other efficiency savings.*","implemented":true,"isConstructor":false,"kind":"fallback","modifiers":[null],"name":"","scope":14,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":4,"name":"ParameterList","src":"1736:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":5,"name":"ParameterList","src":"1748:0:0"},{"children":[{"attributes":{"externalReferences":[null],"operations":"{\n    validateJoinSplit()\n    mstore(0x40, 0x60)\n    function validateJoinSplit()\n    {\n        mstore(0x80, calldataload(0x44))\n        mstore(0xa0, calldataload(0x64))\n        let notes := add(0x104, calldataload(0x184))\n        let m := calldataload(0x124)\n        let n := calldataload(notes)\n        let gen_order := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001\n        let challenge := mod(calldataload(0x144), gen_order)\n        if gt(m, n)\n        {\n            mstore(0x00, 404)\n            revert(0x00, 0x20)\n        }\n        let kn := calldataload(sub(add(notes, mul(calldataload(notes), 0xc0)), 0xa0))\n        mstore(0x2a0, calldataload(0x24))\n        mstore(0x2c0, kn)\n        mstore(0x2e0, m)\n        mstore(0x300, calldataload(0x164))\n        kn := mulmod(sub(gen_order, kn), challenge, gen_order)\n        hashCommitments(notes, n)\n        let b := add(0x320, mul(n, 0x80))\n        for {\n            let i := 0\n        }\n        lt(i, n)\n        {\n            i := add(i, 0x01)\n        }\n        {\n            let noteIndex := add(add(notes, 0x20), mul(i, 0xc0))\n            let k := calldataload(noteIndex)\n            let a := calldataload(add(noteIndex, 0x20))\n            let c := challenge\n            switch eq(add(i, 0x01), n)\n            case 1 {\n                k := kn\n                switch eq(m, n)\n                case 1 {\n                    k := sub(gen_order, k)\n                }\n            }\n            validateCommitment(noteIndex, k, a)\n            switch gt(add(i, 0x01), m)\n            case 1 {\n                kn := addmod(kn, sub(gen_order, k), gen_order)\n                let x := mload(0x00)\n                k := mulmod(k, x, gen_order)\n                a := mulmod(a, x, gen_order)\n                c := mulmod(challenge, x, gen_order)\n                mstore(0x00, keccak256(0x00, 0x20))\n            }\n            case 0 {\n                kn := addmod(kn, k, gen_order)\n            }\n            calldatacopy(0xe0, add(noteIndex, 0x80), 0x40)\n            calldatacopy(0x20, add(noteIndex, 0x40), 0x40)\n            mstore(0x120, sub(gen_order, c))\n            mstore(0x60, k)\n            mstore(0xc0, a)\n            let result := staticcall(gas(), 7, 0xe0, 0x60, 0x1a0, 0x40)\n            result := and(result, staticcall(gas(), 7, 0x20, 0x60, 0x120, 0x40))\n            result := and(result, staticcall(gas(), 7, 0x80, 0x60, 0x160, 0x40))\n            result := and(result, staticcall(gas(), 6, 0x120, 0x80, 0x160, 0x40))\n            result := and(result, staticcall(gas(), 6, 0x160, 0x80, b, 0x40))\n            if eq(i, m)\n            {\n                mstore(0x260, mload(0x20))\n                mstore(0x280, mload(0x40))\n                mstore(0x1e0, mload(0xe0))\n                mstore(0x200, sub(0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47, mload(0x100)))\n            }\n            if gt(i, m)\n            {\n                mstore(0x60, c)\n                result := and(result, and(and(staticcall(gas(), 6, 0x1a0, 0x80, 0x1e0, 0x40), staticcall(gas(), 6, 0x220, 0x80, 0x260, 0x40)), staticcall(gas(), 7, 0x20, 0x60, 0x220, 0x40)))\n            }\n            if iszero(result)\n            {\n                mstore(0x00, 400)\n                revert(0x00, 0x20)\n            }\n            b := add(b, 0x40)\n        }\n        if lt(m, n)\n        {\n            validatePairing(0x84)\n        }\n        let expected := mod(keccak256(0x2a0, sub(b, 0x2a0)), gen_order)\n        if iszero(eq(expected, challenge))\n        {\n            mstore(0x00, 404)\n            revert(0x00, 0x20)\n        }\n    }\n    function validatePairing(t2)\n    {\n        let field_order := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n        let t2_x_1 := calldataload(t2)\n        let t2_x_2 := calldataload(add(t2, 0x20))\n        let t2_y_1 := calldataload(add(t2, 0x40))\n        let t2_y_2 := calldataload(add(t2, 0x60))\n        if or(or(or(or(or(or(or(iszero(t2_x_1), iszero(t2_x_2)), iszero(t2_y_1)), iszero(t2_y_2)), eq(t2_x_1, 0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed)), eq(t2_x_2, 0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2)), eq(t2_y_1, 0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa)), eq(t2_y_2, 0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n        mstore(0x20, mload(0x1e0))\n        mstore(0x40, mload(0x200))\n        mstore(0x80, 0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed)\n        mstore(0x60, 0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2)\n        mstore(0xc0, 0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa)\n        mstore(0xa0, 0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b)\n        mstore(0xe0, mload(0x260))\n        mstore(0x100, mload(0x280))\n        mstore(0x140, t2_x_1)\n        mstore(0x120, t2_x_2)\n        mstore(0x180, t2_y_1)\n        mstore(0x160, t2_y_2)\n        let success := staticcall(gas(), 8, 0x20, 0x180, 0x20, 0x20)\n        if or(iszero(success), iszero(mload(0x20)))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n    }\n    function validateCommitment(note, k, a)\n    {\n        let gen_order := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001\n        let field_order := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n        let gammaX := calldataload(add(note, 0x40))\n        let gammaY := calldataload(add(note, 0x60))\n        let sigmaX := calldataload(add(note, 0x80))\n        let sigmaY := calldataload(add(note, 0xa0))\n        if iszero(and(and(and(eq(mod(a, gen_order), a), gt(a, 1)), and(eq(mod(k, gen_order), k), gt(k, 1))), and(eq(addmod(mulmod(mulmod(sigmaX, sigmaX, field_order), sigmaX, field_order), 3, field_order), mulmod(sigmaY, sigmaY, field_order)), eq(addmod(mulmod(mulmod(gammaX, gammaX, field_order), gammaX, field_order), 3, field_order), mulmod(gammaY, gammaY, field_order)))))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n    }\n    function hashCommitments(notes, n)\n    {\n        for {\n            let i := 0\n        }\n        lt(i, n)\n        {\n            i := add(i, 0x01)\n        }\n        {\n            let index := add(add(notes, mul(i, 0xc0)), 0x60)\n            calldatacopy(add(0x320, mul(i, 0x80)), index, 0x80)\n        }\n        mstore(0x00, keccak256(0x320, mul(n, 0x80)))\n    }\n}"},"children":[],"id":6,"name":"InlineAssembly","src":"1758:18101:0"},{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"encodeAndExit","referencedDeclaration":21,"type":"function () pure"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":22,"type":"type(library JoinSplitABIEncoder)","value":"JoinSplitABIEncoder"},"id":7,"name":"Identifier","src":"19840:19:0"}],"id":9,"name":"MemberAccess","src":"19840:33:0"}],"id":10,"name":"FunctionCall","src":"19840:35:0"}],"id":11,"name":"ExpressionStatement","src":"19840:35:0"}],"id":12,"name":"Block","src":"1748:18134:0"}],"id":13,"name":"FunctionDefinition","src":"1728:18154:0"}],"id":14,"name":"ContractDefinition","src":"1073:18811:0"}],"id":15,"name":"SourceUnit","src":"0:19885:0"}},"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/joinSplit/JoinSplitABIEncoder.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/joinSplit/JoinSplitABIEncoder.sol","exportedSymbols":{"JoinSplitABIEncoder":[22]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0","<","0.6",".0"]},"id":16,"name":"PragmaDirective","src":"0:31:1"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@title Library to ABI encode the output of a join-split proof verification operation\n@author AZTEC\n@dev Don't include this as an internal library. This contract uses a static memory table to cache\nelliptic curve primitives and hashes.\nCalling this internally from another function will lead to memory mutation and undefined behaviour.\nThe intended use case is to call this externally via `staticcall`.\nExternal calls to OptimizedAZTEC can be treated as pure functions as this contract contains no\nstorage and makes no external calls (other than to precompiles)\nCopyright Spilsbury Holdings Ltd 2019. All rights reserved.*","fullyImplemented":true,"linearizedBaseContracts":[22],"name":"JoinSplitABIEncoder","scope":23},"children":[{"attributes":{"documentation":"Calldata map\n0x04:0x24      = calldata location of proofData byte array\n0x24:0x44      = message sender\n0x44:0x64      = h_x\n0x64:0x84      = h_y\n0x84:0xa4      = t2_x0\n0xa4:0xc4      = t2_x1\n0xc4:0xe4      = t2_y0\n0xe4:0x104     = t2_y1\n0x104:0x124    = length of proofData byte array\n0x124:0x144    = m\n0x144:0x164    = challenge\n0x164:0x184    = publicOwner\n0x184:0x1a4    = offset in byte array to notes\n0x1a4:0x1c4    = offset in byte array to inputOwners\n0x1c4:0x1e4    = offset in byte array to outputOwners\n0x1e4:0x204    = offset in byte array to metadata","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"encodeAndExit","scope":22,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":17,"name":"ParameterList","src":"1505:2:1"},{"attributes":{"parameters":[null]},"children":[],"id":18,"name":"ParameterList","src":"1522:0:1"},{"children":[{"attributes":{"externalReferences":[null],"operations":"{\n    let notes := add(0x104, calldataload(0x184))\n    let n := calldataload(notes)\n    let m := calldataload(0x124)\n    let inputOwners := add(0x124, calldataload(0x1a4))\n    let outputOwners := add(0x124, calldataload(0x1c4))\n    let metadata := add(0x144, calldataload(0x1e4))\n    mstore(0x1a0, 0x01)\n    mstore(0x1c0, 0x60)\n    mstore(0x200, 0xc0)\n    mstore(0x240, calldataload(0x164))\n    let kPublic := calldataload(sub(add(notes, mul(calldataload(notes), 0xc0)), 0xa0))\n    switch gt(kPublic, 10944121435919637611123202872628637544274182200208017171849102093287904247808)\n    case 1 {\n        mstore(0x260, sub(kPublic, 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001))\n    }\n    case 0 {\n        mstore(0x260, kPublic)\n    }\n    mstore(0x280, calldataload(0x144))\n    let inputPtr := 0x2a0\n    mstore(add(inputPtr, 0x20), m)\n    let s := add(0x2e0, mul(m, 0x20))\n    for {\n        let i := 0\n    }\n    lt(i, m)\n    {\n        i := add(i, 0x01)\n    }\n    {\n        let noteIndex := add(add(notes, 0x20), mul(i, 0xc0))\n        mstore(0x00, 0x01)\n        calldatacopy(0x20, add(noteIndex, 0x40), 0x80)\n        mstore(0xc0, keccak256(0x00, 0xa0))\n        mstore(s, 0xc0)\n        mstore(add(s, 0x20), 0x01)\n        mstore(0xa0, 0x10101)\n        mstore(add(s, 0x40), calldataload(add(inputOwners, mul(i, 0x20))))\n        mstore(add(s, 0x60), mload(0xc0))\n        mstore(add(s, 0x80), 0x40)\n        mstore(add(s, 0xa0), or(calldataload(add(noteIndex, 0x40)), mul(and(calldataload(add(noteIndex, 0x60)), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n        mstore(add(s, 0xc0), or(calldataload(add(noteIndex, 0x80)), mul(and(calldataload(add(noteIndex, 0xa0)), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n        mstore(add(add(inputPtr, 0x40), mul(i, 0x20)), sub(s, inputPtr))\n        s := add(s, 0xe0)\n    }\n    mstore(inputPtr, sub(sub(s, inputPtr), 0x20))\n    mstore(0x220, add(0xc0, sub(s, inputPtr)))\n    inputPtr := s\n    mstore(add(inputPtr, 0x20), sub(n, m))\n    s := add(s, add(0x40, mul(sub(n, m), 0x20)))\n    for {\n        let i := m\n    }\n    lt(i, n)\n    {\n        i := add(i, 0x01)\n    }\n    {\n        let noteIndex := add(add(notes, 0x20), mul(i, 0xc0))\n        let metadataIndex := calldataload(add(metadata, mul(sub(i, m), 0x20)))\n        let metadataLength := calldataload(add(sub(metadata, 0x40), metadataIndex))\n        mstore(0x00, 0x01)\n        calldatacopy(0x20, add(noteIndex, 0x40), 0x80)\n        mstore(s, add(0xc0, metadataLength))\n        mstore(add(s, 0x20), 0x01)\n        mstore(add(s, 0x40), calldataload(add(outputOwners, mul(sub(i, m), 0x20))))\n        mstore(add(s, 0x60), keccak256(0x00, 0xa0))\n        mstore(add(s, 0x80), add(0x40, metadataLength))\n        mstore(add(s, 0xa0), or(mload(0x20), mul(and(mload(0x40), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n        mstore(add(s, 0xc0), or(mload(0x60), mul(and(mload(0x80), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n        calldatacopy(add(s, 0xe0), add(metadataIndex, sub(metadata, 0x20)), metadataLength)\n        mstore(add(add(inputPtr, 0x40), mul(sub(i, m), 0x20)), sub(s, inputPtr))\n        s := add(s, add(mload(s), 0x20))\n    }\n    mstore(inputPtr, sub(sub(s, inputPtr), 0x20))\n    let notesLength := sub(s, 0x2a0)\n    mstore(0x1e0, add(0xa0, notesLength))\n    mstore(0x180, add(0x100, notesLength))\n    mstore(0x160, 0x20)\n    return(0x160, add(0x140, notesLength))\n}"},"children":[],"id":19,"name":"InlineAssembly","src":"1532:9565:1"}],"id":20,"name":"Block","src":"1522:9575:1"}],"id":21,"name":"FunctionDefinition","src":"1483:9614:1"}],"id":22,"name":"ContractDefinition","src":"690:10409:1"}],"id":23,"name":"SourceUnit","src":"0:11101:1"}},"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/interfaces/JoinSplitInterface.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/interfaces/JoinSplitInterface.sol","exportedSymbols":{"JoinSplitInterface":[38]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0","<","0.6",".0"]},"id":24,"name":"PragmaDirective","src":"0:31:2"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"interface","documentation":"@title JoinSplitInterface\n@author AZTEC\n@dev An interface defining the JoinSplitInterface standard.\nCopyright Spilsbury Holdings Ltd 2019. All rights reserved.*","fullyImplemented":false,"linearizedBaseContracts":[38],"name":"JoinSplitInterface","scope":39},"children":[{"attributes":{"body":null,"documentation":null,"implemented":false,"isConstructor":false,"kind":"function","modifiers":[null],"name":"validateJoinSplit","scope":38,"stateMutability":"pure","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"","scope":37,"stateVariable":false,"storageLocation":"calldata","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":25,"name":"ElementaryTypeName","src":"345:5:2"}],"id":26,"name":"VariableDeclaration","src":"345:14:2"},{"attributes":{"constant":false,"name":"","scope":37,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":27,"name":"ElementaryTypeName","src":"370:7:2"}],"id":28,"name":"VariableDeclaration","src":"370:7:2"},{"attributes":{"constant":false,"name":"","scope":37,"stateVariable":false,"storageLocation":"calldata","type":"uint256[6]","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"uint256[6]"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":29,"name":"ElementaryTypeName","src":"388:4:2"},{"attributes":{"argumentTypes":null,"hexvalue":"36","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":null,"value":"6"},"id":30,"name":"Literal","src":"393:1:2"}],"id":31,"name":"ArrayTypeName","src":"388:7:2"}],"id":32,"name":"VariableDeclaration","src":"388:16:2"}],"id":33,"name":"ParameterList","src":"335:75:2"},{"children":[{"attributes":{"constant":false,"name":"","scope":37,"stateVariable":false,"storageLocation":"memory","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":34,"name":"ElementaryTypeName","src":"434:5:2"}],"id":35,"name":"VariableDeclaration","src":"434:12:2"}],"id":36,"name":"ParameterList","src":"433:14:2"}],"id":37,"name":"FunctionDefinition","src":"309:139:2"}],"id":38,"name":"ContractDefinition","src":"214:236:2"}],"id":39,"name":"SourceUnit","src":"0:451:2"}}},"version":"0.5.0+commit.1d4f565a.Linux.g++"}
