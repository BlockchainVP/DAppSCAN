{"contracts":{"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/swap/Swap.sol:Swap":{"abi":"[{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"}]","bin":"608060405234801561001057600080fd5b50610680806100206000396000f3fe608060405234801561001057600080fd5b50610019610023565b60606040526101a5565b60443560805260643560a0526101443561010401803560048114151561004f5761019060005260206000fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018061012435066024356102e0526100878385610259565b608083026103000160005b8481101561017c5760c081026020870101600060208201358560018511600181146100c457600081146100d1576100d6565b61018085033593506100d6565b843593505b506100e28284866101aa565b60406080850160e037604080850160203780880361012052826060528160c05260406101a0606060e060075afa60406101206060602060075afa8116905060406101606060608060075afa811690506040610160608061012060065afa81169050604087608061016060065afa811690508015156101665761019060005260206000fd5b6040870196505050505050600181019050610092565b50826102e082036102e02006828114151561019d5761019460005260206000fd5b505050505050565b610254565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760408301356060840135608085013560a086013584838409856003878789898a090908148582830986600388868a888909090814166001891189888b06141660018b118b898d061416161615156102495761019060005260206000fd5b505050505050505050565b610295565b60005b8281101561028557606060c082028301016080816080840261030001375060018101905061025c565b5060808202610300206000525050565b61029d61029f565b005b610144356101040161016435610124016101843561014401602082033560041460208203356002141615156102d357600080fd5b60206101605260026101a05260806101c05260c06102205261020061024052600061026052600061028052610124356102a0526101206102c05260016102e052606061030052600160005260806060840160203760c06103205260016103405281356103605260a06000206103805260406103a0527f800000000000000000000000000000000000000000000000000000000000000060016040511602602051176103c0527f800000000000000000000000000000000000000000000000000000000000000060016080511602606051176103e05260016104205260606104405260806101e0840160203760016104805260408201356104a05260a06000206104c052803560408203810135806040016104e0527f80000000000000000000000000000000000000000000000000000000000000006001604051160260205117610500527f800000000000000000000000000000000000000000000000000000000000000060016080511602606051176105205280602084038301610540378060c00161046052806101200161040052806103200161020052806103c0016101e052806105400160c06020820152610200604082015260006060820152600060808201526101243560e052602060e02060a082015261012060c0820152600160e0820152606061010082015260806102a0870160203760c06101208201526001610140820152606085013561016082015260a060002061018082015260406101a08201527f800000000000000000000000000000000000000000000000000000000000000060016040511602602051176101c08201527f800000000000000000000000000000000000000000000000000000000000000060016080511602606051176101e08201526001610220820152606061024082015260806101208701602037600161028082015260208501356102a082015260a06000206102c082015260208401359250604084038301359150816040016102e08201527f800000000000000000000000000000000000000000000000000000000000000060016040511602602051176103008201527f80000000000000000000000000000000000000000000000000000000000000006001608051160260605117610320820152816020850384016103408301378160c00161026082015281610120016102008201528161032001815261020051826103c001016101805260406101805101610160f3fea165627a7a7230582024bd7b4454f56099ff6dcc022a0c0a2720840009c880b1512f72be61746265a70029","bin-runtime":"608060405234801561001057600080fd5b50610019610023565b60606040526101a5565b60443560805260643560a0526101443561010401803560048114151561004f5761019060005260206000fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018061012435066024356102e0526100878385610259565b608083026103000160005b8481101561017c5760c081026020870101600060208201358560018511600181146100c457600081146100d1576100d6565b61018085033593506100d6565b843593505b506100e28284866101aa565b60406080850160e037604080850160203780880361012052826060528160c05260406101a0606060e060075afa60406101206060602060075afa8116905060406101606060608060075afa811690506040610160608061012060065afa81169050604087608061016060065afa811690508015156101665761019060005260206000fd5b6040870196505050505050600181019050610092565b50826102e082036102e02006828114151561019d5761019460005260206000fd5b505050505050565b610254565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760408301356060840135608085013560a086013584838409856003878789898a090908148582830986600388868a888909090814166001891189888b06141660018b118b898d061416161615156102495761019060005260206000fd5b505050505050505050565b610295565b60005b8281101561028557606060c082028301016080816080840261030001375060018101905061025c565b5060808202610300206000525050565b61029d61029f565b005b610144356101040161016435610124016101843561014401602082033560041460208203356002141615156102d357600080fd5b60206101605260026101a05260806101c05260c06102205261020061024052600061026052600061028052610124356102a0526101206102c05260016102e052606061030052600160005260806060840160203760c06103205260016103405281356103605260a06000206103805260406103a0527f800000000000000000000000000000000000000000000000000000000000000060016040511602602051176103c0527f800000000000000000000000000000000000000000000000000000000000000060016080511602606051176103e05260016104205260606104405260806101e0840160203760016104805260408201356104a05260a06000206104c052803560408203810135806040016104e0527f80000000000000000000000000000000000000000000000000000000000000006001604051160260205117610500527f800000000000000000000000000000000000000000000000000000000000000060016080511602606051176105205280602084038301610540378060c00161046052806101200161040052806103200161020052806103c0016101e052806105400160c06020820152610200604082015260006060820152600060808201526101243560e052602060e02060a082015261012060c0820152600160e0820152606061010082015260806102a0870160203760c06101208201526001610140820152606085013561016082015260a060002061018082015260406101a08201527f800000000000000000000000000000000000000000000000000000000000000060016040511602602051176101c08201527f800000000000000000000000000000000000000000000000000000000000000060016080511602606051176101e08201526001610220820152606061024082015260806101208701602037600161028082015260208501356102a082015260a06000206102c082015260208401359250604084038301359150816040016102e08201527f800000000000000000000000000000000000000000000000000000000000000060016040511602602051176103008201527f80000000000000000000000000000000000000000000000000000000000000006001608051160260605117610320820152816020850384016103408301378160c00161026082015281610120016102008201528161032001815261020051826103c001016101805260406101805101610160f3fea165627a7a7230582024bd7b4454f56099ff6dcc022a0c0a2720840009c880b1512f72be61746265a70029","srcmap":"679:12515:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;679:12515:0;;;;;;;","srcmap-runtime":"679:12515:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;679:12515:0;1431:14;;;;1712:4;1706;1699:18;4095:5405;;;4317:4;4304:18;4298:4;4291:32;4373:4;4360:18;4354:4;4347:32;4440:5;4427:19;4420:5;4416:31;4513:5;4500:19;4604:4;4601:1;4598:11;4591:19;4588:2;;;4687:3;4681:4;4674:17;4787:4;4781;4774:18;4588:2;4846:66;4971:9;4963:5;4950:19;4946:35;5026:4;5013:18;5006:5;4999:33;5094:25;5117:1;5110:5;5094:25;;;5163:4;5160:1;5156:12;5149:5;5145:24;5544:1;5529:3014;5554:1;5551;5548:8;5529:3014;;;5733:4;5730:1;5726:12;5719:4;5712:5;5708:16;5704:35;;5823:4;5812:9;5808:20;5795:34;5859:9;5903:1;5900;5897:8;5974:1;5969:222;;;;6218:1;6213:107;;;;5890:430;;5969:222;6162:5;6151:9;6147:21;6134:35;6129:40;;5969:222;;6213:107;6288:9;6275:23;6270:28;;5890:430;;6403:35;6436:1;6433;6422:9;6403:35;;;6985:4;6978;6967:9;6963:20;6957:4;6944:46;7052:4;7045;7034:9;7030:20;7024:4;7011:46;7107:1;7096:9;7092:17;7085:5;7078:32;7144:1;7138:4;7131:15;7180:1;7174:4;7167:15;7586:4;7579:5;7573:4;7567;7564:1;7559:3;7548:43;7672:4;7665:5;7659:4;7653;7650:1;7645:3;7634:43;7626:6;7622:56;7612:66;;7759:4;7752:5;7746:4;7740;7737:1;7732:3;7721:43;7713:6;7709:56;7699:66;;8046:4;8039:5;8033:4;8026:5;8023:1;8018:3;8007:44;7999:6;7995:57;7985:67;;8281:4;8278:1;8272:4;8265:5;8262:1;8257:3;8246:40;8238:6;8234:53;8224:63;;8406:6;8399:14;8396:2;;;8429:3;8423:4;8416:17;8447:4;8441;8434:18;8396:2;8487:4;8484:1;8480:12;8475:17;;5579:2964;;;;;5571:4;5568:1;5564:12;5559:17;;5529:3014;;;5533:14;9277:9;9268:5;9265:1;9261:13;9254:5;9244:31;9240:47;9328:9;9318:8;9315:23;9308:31;9305:2;;;9425:3;9419:4;9412:17;9463:4;9457;9450:18;9305:2;4119:5381;;;;;;;;9839:2060;;;9914:66;10016;10136:4;10130;10126:15;10113:29;10196:4;10190;10186:15;10173:29;10256:4;10250;10246:15;10233:29;10316:4;10310;10306:15;10293:29;11680:11;11672:6;11664;11657:35;11611:11;11608:1;11558:11;11514:6;11464:11;11456:6;11448;11441:35;11397:173;11390:233;11336:386;11264:11;11256:6;11248;11241:35;11195:11;11156:1;11106:11;11098:6;11084:11;11076:6;11068;11061:35;11017:101;11010:197;10956:350;10923:825;10804:1;10801;10798:8;10730:1;10718:9;10715:1;10711:17;10708:24;10671:200;10565:1;10562;10559:8;10491:1;10479:9;10476:1;10472:17;10469:24;10432:209;10399:498;10370:1400;10342:1446;10339:2;;;11824:3;11818:4;11811:17;11862:4;11856;11849:18;10339:2;9879:2020;;;;;;;;;;;12505:474;;;12573:1;12558:202;12583:1;12580;12577:8;12558:202;;;12669:4;12661;12658:1;12654:12;12647:5;12643:24;12639:35;12737:4;12730:5;12722:4;12719:1;12715:12;12708:5;12704:24;12691:51;12608:152;12600:4;12597:1;12593:12;12588:17;;12558:202;;;12562:14;12958:4;12955:1;12951:12;12944:5;12934:30;12928:4;12921:44;12540:439;;;;13155:30;:28;:30::i;:::-;679:12515;1425:26025:1;1574:5;1561:19;1554:5;1550:31;1636:5;1623:19;1616:5;1612:31;1738:5;1725:19;1718:5;1714:31;2209:4;2197:10;2193:21;2180:35;2174:4;2171:45;2146:4;2133:11;2129:22;2116:36;2110:4;2107:46;2086:144;2079:152;2076:2;;;2263:4;2257;2250:18;2076:2;5503:4;5496:5;5489:19;6276:4;6269:5;6262:19;6424:4;6417:5;6410:19;7245:4;7238:5;7231:19;7629:5;7622;7615:20;7808:4;7801:5;7794:19;7883:4;7876:5;7869:19;7971:5;7958:19;7951:5;7944:34;8859:5;8852;8845:20;8936:4;8929:5;8922:19;9045:4;9038:5;9031:19;9867:4;9861;9854:18;10339:4;10332;10325:5;10321:16;10315:4;10302:42;10455:4;10448:5;10441:19;10539:4;10532:5;10525:19;10699:10;10686:24;10679:5;10672:39;10848:4;10842;10832:21;10825:5;10818:36;10954:4;10947:5;10940:19;11906:66;11875:4;11868;11862:11;11858:22;11786:208;11738:4;11732:11;11708:304;11685:5;11661:365;12242:66;12215:4;12208;12202:11;12198:22;12173:157;12146:4;12140:11;12116:232;12093:5;12069:293;13084:4;13077:5;13070:19;13183:4;13176:5;13169:19;14475:4;14467:5;14460;14456:17;14450:4;14437:43;14640:4;14633:5;14626:19;14879:4;14867:10;14863:21;14850:35;14843:5;14836:50;14977:4;14971;14961:21;14954:5;14947:36;15405:11;15392:25;16559:4;16546:11;16542:22;16527:13;16523:42;16510:56;16668:14;16662:4;16658:25;16651:5;16644:40;16935:66;16904:4;16897;16891:11;16887:22;16858:165;16831:4;16825:11;16801:240;16778:5;16754:301;17306:66;17275:4;17268;17262:11;17258:22;17229:165;17202:4;17196:11;17172:240;17149:5;17125:301;18034:14;18026:4;18013:11;18009:22;17994:13;17990:42;17983:5;17970:79;18524:14;18518:4;18514:25;18507:5;18500:40;18742:14;18735:5;18731:26;18724:5;18717:41;18965:14;18958:5;18954:26;18947:5;18940:41;19526:14;19519:5;19515:26;19508:5;19501:41;19863:14;19856:5;19852:26;20054:4;20047;20037:8;20033:19;20026:33;20166:5;20159:4;20149:8;20145:19;20138:34;20265:4;20258;20248:8;20244:19;20237:33;20378:4;20371;20361:8;20357:19;20350:33;20588:5;20575:19;20569:4;20562:33;20652:4;20646;20636:21;20629:4;20619:8;20615:19;20608:50;20909:5;20902:4;20892:8;20888:19;20881:34;21021:4;21014;21004:8;21000:19;20993:33;21147:4;21139:5;21129:8;21125:20;21118:34;21501:4;21493:5;21486;21482:17;21476:4;21463:43;21618:4;21610:5;21600:8;21596:20;21589:34;21754:4;21746:5;21736:8;21732:20;21725:34;21907:4;21895:10;21891:21;21878:35;21870:5;21860:8;21856:20;21849:65;22033:4;22027;22017:21;22009:5;21999:8;21995:20;21988:51;22160:4;22152:5;22142:8;22138:20;22131:34;22441:66;22410:4;22403;22397:11;22393:22;22364:165;22337:4;22331:11;22307:240;22283:5;22273:8;22269:20;22245:316;22837:66;22806:4;22799;22793:11;22789:22;22760:165;22733:4;22727:11;22703:240;22679:5;22669:8;22665:20;22641:316;23283:4;23275:5;23265:8;23261:20;23254:34;23397:4;23389:5;23379:8;23375:20;23368:34;23746:4;23738:5;23731;23727:17;23721:4;23708:43;23931:4;23923:5;23913:8;23909:20;23902:34;24084:4;24072:10;24068:21;24055:35;24047:5;24037:8;24033:20;24026:65;24196:4;24190;24180:21;24172:5;24162:8;24158:20;24151:51;24403:4;24390:11;24386:22;24373:36;24356:53;;24489:4;24476:11;24472:22;24457:13;24453:42;24440:56;24422:74;;24624:14;24618:4;24614:25;24606:5;24596:8;24592:20;24585:55;24916:66;24885:4;24878;24872:11;24868:22;24839:165;24812:4;24806:11;24782:240;24758:5;24748:8;24744:20;24720:316;25312:66;25281:4;25274;25268:11;25264:22;25235:165;25208:4;25202:11;25178:240;25154:5;25144:8;25140:20;25116:316;25584:14;25576:4;25563:11;25559:22;25544:13;25540:42;25532:5;25522:8;25518:20;25505:94;25817:14;25811:4;25807:25;25799:5;25789:8;25785:20;25778:55;25983:14;25976:5;25972:26;25964:5;25954:8;25950:20;25943:56;26119:14;26112:5;26108:26;26098:8;26091:44;26933:5;26927:12;26910:14;26903:5;26899:26;26895:45;26888:5;26881:60;27410:4;27402:5;27396:12;27392:23;27385:5;27378:38"},"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/swap/SwapABIEncoder.sol:SwapABIEncoder":{"abi":"[]","bin":"604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820cde2158499392d4cc4f37b0543a7d5ab7dde84c8566bd14ecce593aedd5516c00029","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820cde2158499392d4cc4f37b0543a7d5ab7dde84c8566bd14ecce593aedd5516c00029","srcmap":"675:26777:1:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24","srcmap-runtime":"675:26777:1:-;;;;;;;;"}},"sourceList":["/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/swap/Swap.sol","/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/swap/SwapABIEncoder.sol"],"sources":{"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/swap/Swap.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/swap/Swap.sol","exportedSymbols":{"Swap":[13]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0","<","0.6",".0"]},"id":1,"name":"PragmaDirective","src":"0:31:0"},{"attributes":{"SourceUnit":22,"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/swap/SwapABIEncoder.sol","file":"./SwapABIEncoder.sol","scope":14,"symbolAliases":[null],"unitAlias":""},"id":2,"name":"ImportDirective","src":"33:30:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title Library to validate Swap proofs\n@author AZTEC\n@dev Don't include this as an internal library. This contract uses\na static memory table to cache elliptic curve primitives and hashes.\nCalling this internally from another function will lead to memory\nmutation and undefined behaviour.\nThe intended use case is to call this externally via `staticcall`. External\ncalls to OptimizedAZTEC can be treated as pure functions as this contract\ncontains no storage and makes no external calls (other than to precompiles)\nCopyright Spilsbury Holdings Ltd 2019. All rights reserved.*","fullyImplemented":true,"linearizedBaseContracts":[13],"name":"Swap","scope":14},"children":[{"attributes":{"documentation":"@dev Swap will take any transaction sent to it and attempt to validate a zero knowledge proof.\nIf the proof is not valid, the transaction throws.\n@notice See SwapInterface for how method calls should be constructed.\nThis contract is written in YUL to enable manual memory management and for other efficiency savings.*","implemented":true,"isConstructor":false,"kind":"fallback","modifiers":[null],"name":"","scope":13,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":3,"name":"ParameterList","src":"1110:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":4,"name":"ParameterList","src":"1122:0:0"},{"children":[{"attributes":{"externalReferences":[null],"operations":"{\n    validateSwap()\n    mstore(0x40, 0x60)\n    function validateSwap()\n    {\n        mstore(0x80, calldataload(0x44))\n        mstore(0xa0, calldataload(0x64))\n        let notes := add(0x104, calldataload(0x144))\n        let n := calldataload(notes)\n        if iszero(eq(n, 0x04))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n        let gen_order := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001\n        let challenge := mod(calldataload(0x124), gen_order)\n        mstore(0x2e0, calldataload(0x24))\n        hashCommitments(notes, n)\n        let b := add(0x300, mul(n, 0x80))\n        for {\n            let i := 0\n        }\n        lt(i, n)\n        {\n            i := add(i, 0x01)\n        }\n        {\n            let noteIndex := add(add(notes, 0x20), mul(i, 0xc0))\n            let k\n            let a := calldataload(add(noteIndex, 0x20))\n            let c := challenge\n            switch gt(i, 1)\n            case 1 {\n                k := calldataload(sub(noteIndex, 0x180))\n            }\n            case 0 {\n                k := calldataload(noteIndex)\n            }\n            validateCommitment(noteIndex, k, a)\n            calldatacopy(0xe0, add(noteIndex, 0x80), 0x40)\n            calldatacopy(0x20, add(noteIndex, 0x40), 0x40)\n            mstore(0x120, sub(gen_order, c))\n            mstore(0x60, k)\n            mstore(0xc0, a)\n            let result := staticcall(gas(), 7, 0xe0, 0x60, 0x1a0, 0x40)\n            result := and(result, staticcall(gas(), 7, 0x20, 0x60, 0x120, 0x40))\n            result := and(result, staticcall(gas(), 7, 0x80, 0x60, 0x160, 0x40))\n            result := and(result, staticcall(gas(), 6, 0x120, 0x80, 0x160, 0x40))\n            result := and(result, staticcall(gas(), 6, 0x160, 0x80, b, 0x40))\n            if iszero(result)\n            {\n                mstore(0x00, 400)\n                revert(0x00, 0x20)\n            }\n            b := add(b, 0x40)\n        }\n        let expected := mod(keccak256(0x2e0, sub(b, 0x2e0)), gen_order)\n        if iszero(eq(expected, challenge))\n        {\n            mstore(0x00, 404)\n            revert(0x00, 0x20)\n        }\n    }\n    function validateCommitment(note, k, a)\n    {\n        let gen_order := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001\n        let field_order := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n        let gammaX := calldataload(add(note, 0x40))\n        let gammaY := calldataload(add(note, 0x60))\n        let sigmaX := calldataload(add(note, 0x80))\n        let sigmaY := calldataload(add(note, 0xa0))\n        if iszero(and(and(and(eq(mod(a, gen_order), a), gt(a, 1)), and(eq(mod(k, gen_order), k), gt(k, 1))), and(eq(addmod(mulmod(mulmod(sigmaX, sigmaX, field_order), sigmaX, field_order), 3, field_order), mulmod(sigmaY, sigmaY, field_order)), eq(addmod(mulmod(mulmod(gammaX, gammaX, field_order), gammaX, field_order), 3, field_order), mulmod(gammaY, gammaY, field_order)))))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n    }\n    function hashCommitments(notes, n)\n    {\n        for {\n            let i := 0\n        }\n        lt(i, n)\n        {\n            i := add(i, 0x01)\n        }\n        {\n            let index := add(add(notes, mul(i, 0xc0)), 0x60)\n            calldatacopy(add(0x300, mul(i, 0x80)), index, 0x80)\n        }\n        mstore(0x00, keccak256(0x300, mul(n, 0x80)))\n    }\n}"},"children":[],"id":5,"name":"InlineAssembly","src":"1132:12037:0"},{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"encodeAndExit","referencedDeclaration":20,"type":"function () pure"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":21,"type":"type(library SwapABIEncoder)","value":"SwapABIEncoder"},"id":6,"name":"Identifier","src":"13155:14:0"}],"id":8,"name":"MemberAccess","src":"13155:28:0"}],"id":9,"name":"FunctionCall","src":"13155:30:0"}],"id":10,"name":"ExpressionStatement","src":"13155:30:0"}],"id":11,"name":"Block","src":"1122:12070:0"}],"id":12,"name":"FunctionDefinition","src":"1102:12090:0"}],"id":13,"name":"ContractDefinition","src":"679:12515:0"}],"id":14,"name":"SourceUnit","src":"0:13195:0"}},"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/swap/SwapABIEncoder.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/swap/SwapABIEncoder.sol","exportedSymbols":{"SwapABIEncoder":[21]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0","<","0.6",".0"]},"id":15,"name":"PragmaDirective","src":"0:31:1"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@title Library to ABI encode the output of a Swap proof verification\n@author AZTEC\n@dev Don't include this as an internal library. This contract uses a static memory table to cache\nelliptic curve primitives and hashes.\nCalling this internally from another function will lead to memory mutation and undefined behaviour.\nThe intended use case is to call this externally via `staticcall`.\nExternal calls to OptimizedAZTEC can be treated as pure functions as this contract contains no\nstorage and makes no external calls (other than to precompiles)\nCopyright Spilsbury Holdings Ltd 2019. All rights reserved.*","fullyImplemented":true,"linearizedBaseContracts":[21],"name":"SwapABIEncoder","scope":22},"children":[{"attributes":{"documentation":"Calldata map\n0x04:0x24      = calldata location of proofData byte array - pointer to the proofData.\n0x24:0x44      = message sender // sender\n0x44:0x64      = h_x     // crs\n0x64:0x84      = h_y     // crs\n0x84:0xa4      = t2_x0   // crs\n0xa4:0xc4      = t2_x1   // crs\n0xc4:0xe4      = t2_y0   // crs\n0xe4:0x104     = t2_y1   // crs\n0x104:0x124    = length of proofData byte array\n0x124:0x144    = challenge\n0x144:0x164    = offset in byte array to notes\n0x164:0x184    = offset in byte array to inputOwners\n0x184:0x1a4    = offset in byte array to outputOwners\n0x1a4:0x1c4    = offset in byte array to metadata*","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"encodeAndExit","scope":21,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":16,"name":"ParameterList","src":"1447:2:1"},{"attributes":{"parameters":[null]},"children":[],"id":17,"name":"ParameterList","src":"1464:0:1"},{"children":[{"attributes":{"externalReferences":[null],"operations":"{\n    let notes := add(0x104, calldataload(0x144))\n    let noteOwners := add(0x124, calldataload(0x164))\n    let metadataPtr := add(0x144, calldataload(0x184))\n    if iszero(and(eq(0x02, calldataload(sub(metadataPtr, 0x20))), eq(0x04, calldataload(sub(noteOwners, 0x20)))))\n    {\n        revert(0x00, 0x00)\n    }\n    mstore(0x160, 0x20)\n    mstore(0x1a0, 0x02)\n    mstore(0x1c0, 0x80)\n    mstore(0x220, 0xc0)\n    mstore(0x240, 0x200)\n    mstore(0x260, 0x00)\n    mstore(0x280, 0x00)\n    mstore(0x2a0, calldataload(0x124))\n    mstore(0x2c0, 0x120)\n    mstore(0x2e0, 0x01)\n    mstore(0x300, 0x60)\n    mstore(0x00, 0x01)\n    calldatacopy(0x20, add(notes, 0x60), 0x80)\n    mstore(0x320, 0xc0)\n    mstore(0x340, 0x01)\n    mstore(0x360, calldataload(noteOwners))\n    mstore(0x380, keccak256(0x00, 0xa0))\n    mstore(0x3a0, 0x40)\n    mstore(0x3c0, or(mload(0x20), mul(and(mload(0x40), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    mstore(0x3e0, or(mload(0x60), mul(and(mload(0x80), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    mstore(0x420, 0x01)\n    mstore(0x440, 0x60)\n    calldatacopy(0x20, add(notes, 0x1e0), 0x80)\n    mstore(0x480, 0x01)\n    mstore(0x4a0, calldataload(add(noteOwners, 0x40)))\n    mstore(0x4c0, keccak256(0x00, 0xa0))\n    let metadataIndex := calldataload(metadataPtr)\n    let metadataLength := calldataload(add(metadataIndex, sub(metadataPtr, 0x40)))\n    mstore(0x4e0, add(0x40, metadataLength))\n    mstore(0x500, or(mload(0x20), mul(and(mload(0x40), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    mstore(0x520, or(mload(0x60), mul(and(mload(0x80), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    calldatacopy(0x540, add(metadataIndex, sub(metadataPtr, 0x20)), metadataLength)\n    mstore(0x460, add(0xc0, metadataLength))\n    mstore(0x400, add(0x120, metadataLength))\n    mstore(0x200, add(0x320, metadataLength))\n    mstore(0x1e0, add(0x3c0, metadataLength))\n    let proofPtr := add(0x540, metadataLength)\n    mstore(add(proofPtr, 0x20), 0xc0)\n    mstore(add(proofPtr, 0x40), 0x200)\n    mstore(add(proofPtr, 0x60), 0x00)\n    mstore(add(proofPtr, 0x80), 0x00)\n    mstore(0xe0, calldataload(0x124))\n    mstore(add(proofPtr, 0xa0), keccak256(0xe0, 0x20))\n    mstore(add(proofPtr, 0xc0), 0x120)\n    mstore(add(proofPtr, 0xe0), 0x01)\n    mstore(add(proofPtr, 0x100), 0x60)\n    calldatacopy(0x20, add(notes, 0x2a0), 0x80)\n    mstore(add(proofPtr, 0x120), 0xc0)\n    mstore(add(proofPtr, 0x140), 0x01)\n    mstore(add(proofPtr, 0x160), calldataload(add(noteOwners, 0x60)))\n    mstore(add(proofPtr, 0x180), keccak256(0x00, 0xa0))\n    mstore(add(proofPtr, 0x1a0), 0x40)\n    mstore(add(proofPtr, 0x1c0), or(mload(0x20), mul(and(mload(0x40), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    mstore(add(proofPtr, 0x1e0), or(mload(0x60), mul(and(mload(0x80), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    mstore(add(proofPtr, 0x220), 0x01)\n    mstore(add(proofPtr, 0x240), 0x60)\n    calldatacopy(0x20, add(notes, 0x120), 0x80)\n    mstore(add(proofPtr, 0x280), 0x01)\n    mstore(add(proofPtr, 0x2a0), calldataload(add(noteOwners, 0x20)))\n    mstore(add(proofPtr, 0x2c0), keccak256(0x00, 0xa0))\n    metadataIndex := calldataload(add(metadataPtr, 0x20))\n    metadataLength := calldataload(add(metadataIndex, sub(metadataPtr, 0x40)))\n    mstore(add(proofPtr, 0x2e0), add(0x40, metadataLength))\n    mstore(add(proofPtr, 0x300), or(mload(0x20), mul(and(mload(0x40), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    mstore(add(proofPtr, 0x320), or(mload(0x60), mul(and(mload(0x80), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    calldatacopy(add(proofPtr, 0x340), add(metadataIndex, sub(metadataPtr, 0x20)), metadataLength)\n    mstore(add(proofPtr, 0x260), add(0xc0, metadataLength))\n    mstore(add(proofPtr, 0x200), add(0x120, metadataLength))\n    mstore(proofPtr, add(0x320, metadataLength))\n    mstore(0x180, add(add(0x3c0, metadataLength), mload(0x200)))\n    return(0x160, add(mload(0x180), 0x40))\n}"},"children":[],"id":18,"name":"InlineAssembly","src":"1474:25976:1"}],"id":19,"name":"Block","src":"1464:25986:1"}],"id":20,"name":"FunctionDefinition","src":"1425:26025:1"}],"id":21,"name":"ContractDefinition","src":"675:26777:1"}],"id":22,"name":"SourceUnit","src":"0:27453:1"}}},"version":"0.5.0+commit.1d4f565a.Linux.g++"}
