{"contracts":{"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/publicRange/PublicRange.sol:PublicRange":{"abi":"[{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"}]","bin":"608060405234801561001057600080fd5b50610783806100206000396000f3fe608060405234801561001057600080fd5b50610019610023565b6060604052610216565b60443560805260643560a0526101643561010401600260017f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018061012435068161014435066024356102e052806103005260006103205260006103405261008a858761049b565b608085026103600160005b868110156101e15760c081026020890101600060208201358660008511600181146100c757600081146100db576100e0565b898a89848d030960c08703350893506100e0565b843593505b506100ec82848661021b565b600085111561010e57886000510689818509935089818409925089818a099150505b60406080850160e037604080850160203780890361012052826060528160c05260406101a0606060e060075afa60406101206060602060075afa8116905060406101606060608060075afa811690506040610160608061012060065afa81169050604087608061016060065afa811690508160605260406102206060602060075afa811690506040610260608061022060065afa8116905060406101e060806101a060065afa811690508015156101cb5761019060005260206000fd5b6040870196505050505050600181019050610095565b506101ec60846102ca565b836102e082036102e02006838114151561020c5761019460005260206000fd5b5050505050505050565b6102c5565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760408301356060840135608085013560a086013584838409856003878789898a090908148582830986600388868a888909090814166001891189888b06141660018b118b898d061416161615156102ba5761019060005260206000fd5b505050505050505050565b610496565b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4781356020830135604084013560608501357f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81147f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa83147f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c285147f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed87148415861588158a1517171717171717156103a85761019060005260206000fd5b6101e051602052610200516040527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6080527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26060527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa60c0527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b60a0526102605160e05261028051610100528361014052826101205281610180528061016052602080610180602060085afa602051158115171561048d5761019060005260206000fd5b50505050505050565b6104d7565b60005b828110156104c757606060c082028301016080816080840261036001375060018101905061049e565b5060808202610360206000525050565b6104df6104e1565b005b61016435610104016002600161018435610124016101a435610124016101c4356101440160016101a05260606101c05260c06102005260006102405260006102605261012435610280526102a0846020820152602085026102e00160005b8681101561060a5760c0810260208a0101600160005260806040820160203760c08352600160208401528635604084015260a06000206060840152604060808401527f800000000000000000000000000000000000000000000000000000000000000060016060830135160260408201351760a08401527f8000000000000000000000000000000000000000000000000000000000000000600160a0830135160260808201351760c08401528383036020830260408601015260e0830192505060018101905061053f565b50602082820303825281810360c00161022052809150858703602083015260208688030260400181019050855b878110156107285760c0810260208a01016020888303028501358060408703013560016000526080604084016020378060c00185526001602086015260208a850302880135604086015260a060002060608601528060400160808601527f8000000000000000000000000000000000000000000000000000000000000000600160405116026020511760a08601527f8000000000000000000000000000000000000000000000000000000000000000600160805116026060511760c08601528060208803830160e087013785850360208b860302604088010152602085510185019450505050600181019050610637565b5060208282030382526102a081038060a0016101e0528061010001610180526020610160528061014001610160f3fea165627a7a723058206e292adf5eb7682d99d2dd0ca144f28f125e80505f2f63d251d31fcf7ba985c80029","bin-runtime":"608060405234801561001057600080fd5b50610019610023565b6060604052610216565b60443560805260643560a0526101643561010401600260017f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018061012435068161014435066024356102e052806103005260006103205260006103405261008a858761049b565b608085026103600160005b868110156101e15760c081026020890101600060208201358660008511600181146100c757600081146100db576100e0565b898a89848d030960c08703350893506100e0565b843593505b506100ec82848661021b565b600085111561010e57886000510689818509935089818409925089818a099150505b60406080850160e037604080850160203780890361012052826060528160c05260406101a0606060e060075afa60406101206060602060075afa8116905060406101606060608060075afa811690506040610160608061012060065afa81169050604087608061016060065afa811690508160605260406102206060602060075afa811690506040610260608061022060065afa8116905060406101e060806101a060065afa811690508015156101cb5761019060005260206000fd5b6040870196505050505050600181019050610095565b506101ec60846102ca565b836102e082036102e02006838114151561020c5761019460005260206000fd5b5050505050505050565b6102c5565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760408301356060840135608085013560a086013584838409856003878789898a090908148582830986600388868a888909090814166001891189888b06141660018b118b898d061416161615156102ba5761019060005260206000fd5b505050505050505050565b610496565b7f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4781356020830135604084013560608501357f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81147f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa83147f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c285147f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed87148415861588158a1517171717171717156103a85761019060005260206000fd5b6101e051602052610200516040527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6080527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26060527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa60c0527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b60a0526102605160e05261028051610100528361014052826101205281610180528061016052602080610180602060085afa602051158115171561048d5761019060005260206000fd5b50505050505050565b6104d7565b60005b828110156104c757606060c082028301016080816080840261036001375060018101905061049e565b5060808202610360206000525050565b6104df6104e1565b005b61016435610104016002600161018435610124016101a435610124016101c4356101440160016101a05260606101c05260c06102005260006102405260006102605261012435610280526102a0846020820152602085026102e00160005b8681101561060a5760c0810260208a0101600160005260806040820160203760c08352600160208401528635604084015260a06000206060840152604060808401527f800000000000000000000000000000000000000000000000000000000000000060016060830135160260408201351760a08401527f8000000000000000000000000000000000000000000000000000000000000000600160a0830135160260808201351760c08401528383036020830260408601015260e0830192505060018101905061053f565b50602082820303825281810360c00161022052809150858703602083015260208688030260400181019050855b878110156107285760c0810260208a01016020888303028501358060408703013560016000526080604084016020378060c00185526001602086015260208a850302880135604086015260a060002060608601528060400160808601527f8000000000000000000000000000000000000000000000000000000000000000600160405116026020511760a08601527f8000000000000000000000000000000000000000000000000000000000000000600160805116026060511760c08601528060208803830160e087013785850360208b860302604088010152602085510185019450505050600181019050610637565b5060208282030382526102a081038060a0016101e0528061010001610180526020610160528061014001610160f3fea165627a7a723058206e292adf5eb7682d99d2dd0ca144f28f125e80505f2f63d251d31fcf7ba985c80029","srcmap":"773:17125:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;773:17125:0;;;;;;;","srcmap-runtime":"773:17125:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;773:17125:0;1560:21;;;;1849:4;1843;1836:18;4285:7163;;;4514:4;4501:18;4495:4;4488:32;4570:4;4557:18;4551:4;4544:32;4637:5;4624:19;4617:5;4613:31;4697:1;4724;4759:66;4884:9;4876:5;4863:19;4859:35;4960:9;4952:5;4939:19;4935:35;5015:4;5002:18;4995:5;4988:33;5096:16;5089:5;5082:31;5145:1;5138:5;5131:16;5209:1;5202:5;5195:16;5259:25;5282:1;5275:5;5259:25;;;5328:4;5325:1;5321:12;5314:5;5310:24;5638:1;5623:4819;5648:1;5645;5642:8;5623:4819;;;5826:4;5823:1;5819:12;5812:4;5805:5;5801:16;5797:35;;5916:4;5905:9;5901:20;5888:34;5952:9;5996:1;5993;5990:8;6024:1;6019:418;;;;6489:1;6484:84;;;;5983:585;;6019:418;6380:9;6339;6321:16;6317:1;6306:9;6302:17;6295:54;6252:4;6241:9;6237:20;6224:34;6188:227;6183:232;;6019:418;;6484:84;6535:9;6522:23;6517:28;;5983:585;;6650:35;6683:1;6680;6669:9;6650:35;;;6716:1;6713;6710:8;6707:2;;;6852:9;6845:4;6839:11;6835:27;6953:9;6950:1;6947;6940:23;6935:28;;7012:9;7009:1;7006;6999:23;6994:28;;7079:9;7076:1;7065:9;7058:31;7053:36;;6719:398;6707:2;7994:4;7987;7976:9;7972:20;7966:4;7953:46;8061:4;8054;8043:9;8039:20;8033:4;8020:46;8116:1;8105:9;8101:17;8094:5;8087:32;8154:1;8148:4;8141:15;8190:1;8184:4;8177:15;8596:4;8589:5;8583:4;8577;8574:1;8569:3;8558:43;8695:4;8688:5;8682:4;8676;8673:1;8668:3;8657:43;8649:6;8645:56;8635:66;;8782:4;8775:5;8769:4;8763;8760:1;8755:3;8744:43;8736:6;8732:56;8722:66;;9069:4;9062:5;9056:4;9049:5;9046:1;9041:3;9030:44;9022:6;9018:57;9008:67;;9304:4;9301:1;9295:4;9288:5;9285:1;9280:3;9269:40;9261:6;9257:53;9247:63;;9746:1;9740:4;9733:15;9829:4;9822:5;9816:4;9810;9807:1;9802:3;9791:43;9783:6;9779:56;9769:66;;10006:4;9999:5;9993:4;9986:5;9983:1;9978:3;9967:44;9959:6;9955:57;9945:67;;10181:4;10174:5;10168:4;10161:5;10158:1;10153:3;10142:44;10134:6;10130:57;10120:67;;10305:6;10298:14;10295:2;;;10328:3;10322:4;10315:17;10346:4;10340;10333:18;10295:2;10386:4;10383:1;10379:12;10374:17;;5673:4769;;;;;5665:4;5662:1;5658:12;5653:17;;5623:4819;;;5627:14;10692:21;10708:4;10692:21;;;11225:9;11216:5;11213:1;11209:13;11202:5;11192:31;11188:47;11276:9;11266:8;11263:23;11256:31;11253:2;;;11373:3;11367:4;11360:17;11411:4;11405;11398:18;11253:2;4316:7132;;;;;;;;;;11787:2065;;;11862:66;11964;12084:4;12078;12074:15;12061:29;12144:4;12138;12134:15;12121:29;12204:4;12198;12194:15;12181:29;12264:4;12258;12254:15;12241:29;13633:11;13625:6;13617;13610:35;13564:11;13561:1;13510:11;13465:6;13414:11;13406:6;13398;13391:35;13347:175;13340:236;13286:389;13214:11;13206:6;13198;13191:35;13145:11;13105:1;13054:11;13046:6;13032:11;13024:6;13016;13009:35;12965:101;12958:199;12904:352;12871:830;12752:1;12749;12746:8;12678:1;12666:9;12663:1;12659:17;12656:24;12619:200;12513:1;12510;12507:8;12439:1;12427:9;12424:1;12420:17;12417:24;12380:209;12347:498;12318:1405;12290:1451;12287:2;;;13777:3;13771:4;13764:17;13815:4;13809;13802:18;12287:2;11827:2025;;;;;;;;;;;14087:2490;;;14153:66;14263:2;14250:16;14318:4;14314:2;14310:13;14297:27;14376:4;14372:2;14368:13;14355:27;14434:4;14430:2;14426:13;14413:27;15029:65;15021:6;15018:77;14928:66;14920:6;14917:78;14827:66;14819:6;14816:78;14726:66;14718:6;14715:78;14685:6;14678:14;14648:6;14641:14;14611:6;14604:14;14575:6;14568:14;14544:75;14541:115;14538:155;14535:259;14532:363;14529:467;14526:570;14523:2;;;15148:3;15142:4;15135:17;15186:4;15180;15173:18;14523:2;15561:5;15555:12;15549:4;15542:26;15627:5;15621:12;15615:4;15608:26;15687:66;15681:4;15674:80;15784:66;15778:4;15771:80;15881:66;15875:4;15868:80;15978:65;15972:4;15965:79;16080:5;16074:12;16068:4;16061:26;16147:5;16141:12;16134:5;16127:27;16208:6;16201:5;16194:21;16246:6;16239:5;16232:21;16284:6;16277:5;16270:21;16322:6;16315:5;16308:21;16400:4;16394;16387:5;16381:4;16378:1;16373:3;16362:43;16459:4;16453:11;16446:19;16436:7;16429:15;16426:40;16423:2;;;16502:3;16496:4;16489:17;16540:4;16534;16527:18;16423:2;14116:2461;;;;;;;;;17187:475;;;17255:1;17240:202;17265:1;17262;17259:8;17240:202;;;17351:4;17343;17340:1;17336:12;17329:5;17325:24;17321:35;17419:4;17412:5;17404:4;17401:1;17397:12;17390:5;17386:24;17373:51;17290:152;17282:4;17279:1;17275:12;17270:17;;17240:202;;;17244:14;17641:4;17638:1;17634:12;17627:5;17617:30;17611:4;17604:44;17222:440;;;;17852:37;:35;:37::i;:::-;773:17125;1454:8980:1;1603:5;1590:19;1583:5;1579:31;1632:1;1655;1712:5;1699:19;1692:5;1688:31;1812:5;1799:19;1792:5;1788:31;1909:5;1896:19;1889:5;1885:31;3883:4;3876:5;3869:19;3962:4;3955:5;3948:19;4096:4;4089:5;4082:19;4235:4;4228:5;4221:19;4295:1;4288:5;4281:16;4407:5;4394:19;4387:5;4380:34;4444:5;4545:1;4538:4;4528:8;4524:19;4517:30;4714:4;4711:1;4707:12;4700:5;4696:24;4749:1;4734:2108;4759:1;4756;4753:8;4734:2108;;;4848:4;4845:1;4841:12;4834:4;4827:5;4823:16;4819:35;4933:4;4927;4920:18;5023:4;5016;5005:9;5001:20;4995:4;4982:46;5121:4;5118:1;5111:15;5222:4;5215;5212:1;5208:12;5201:26;5328:11;5315:25;5308:4;5305:1;5301:12;5294:47;5457:4;5451;5441:21;5434:4;5431:1;5427:12;5420:43;5585:4;5578;5575:1;5571:12;5564:26;5937:66;5902:4;5894;5883:9;5879:20;5866:34;5862:45;5829:200;5797:4;5786:9;5782:20;5769:34;5741:310;5714:4;5711:1;5707:12;5679:390;6416:66;6381:4;6373;6362:9;6358:20;6345:34;6341:45;6308:200;6276:4;6265:9;6261:20;6248:34;6220:310;6193:4;6190:1;6186:12;6158:390;6703:8;6700:1;6696:16;6688:4;6685:1;6681:12;6674:4;6664:8;6660:19;6656:38;6649:64;6823:4;6820:1;6816:12;6811:17;;4784:2058;4776:4;4773:1;4769:12;4764:17;;4734:2108;;;4738:14;6973:4;6962:8;6959:1;6955:16;6951:27;6941:8;6934:45;7023:8;7020:1;7016:16;7010:4;7006:27;6999:5;6992:42;7106:1;7094:13;;7155:1;7152;7148:9;7141:4;7131:8;7127:19;7120:38;7240:4;7236:1;7233;7229:9;7225:20;7219:4;7215:31;7212:1;7208:39;7203:44;;7304:1;7289:2474;7314:1;7311;7308:8;7289:2474;;;7437:4;7434:1;7430:12;7423:4;7416:5;7412:16;7408:35;7566:4;7562:1;7559;7555:9;7551:20;7541:8;7537:35;7524:49;7690:13;7683:4;7673:8;7669:19;7665:39;7652:53;7736:4;7730;7723:18;7875:4;7868;7857:9;7853:20;7847:4;7834:46;7982:14;7976:4;7972:25;7969:1;7962:36;8094:4;8087;8084:1;8080:12;8073:26;8244:4;8240:1;8237;8233:9;8229:20;8215:12;8211:39;8198:53;8191:4;8188:1;8184:12;8177:75;8341:4;8335;8325:21;8318:4;8315:1;8311:12;8304:43;8455:14;8449:4;8445:25;8438:4;8435:1;8431:12;8424:47;8772:66;8737:4;8730;8724:11;8720:22;8687:177;8656:4;8650:11;8622:264;8595:4;8592:1;8588:12;8560:344;9181:66;9150:4;9143;9137:11;9133:22;9104:165;9077:4;9071:11;9047:240;9024:4;9021:1;9017:12;8993:312;9439:14;9431:4;9421:8;9417:19;9402:13;9398:39;9391:4;9388:1;9384:12;9371:83;9617:8;9614:1;9610:16;9602:4;9598:1;9595;9591:9;9587:20;9580:4;9570:8;9566:19;9562:46;9555:72;9743:4;9739:1;9733:8;9729:19;9726:1;9722:27;9717:32;;7339:2424;;;7331:4;7328:1;7324:12;7319:17;;7289:2474;;;7293:14;9885:4;9874:8;9871:1;9867:16;9863:27;9853:8;9846:45;9985:5;9982:1;9978:13;10198:11;10192:4;10188:22;10181:5;10174:37;10249:11;10242:5;10238:23;10231:5;10224:38;10331:4;10324:5;10317:19;10374:11;10367:5;10363:23;10356:5;10349:38"},"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/publicRange/PublicRangeABIEncoder.sol:PublicRangeABIEncoder":{"abi":"[]","bin":"604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820a5dce45631ad8c12dbae783f0dff2d5dafa341fa9f9317cfbf377116c385169b0029","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820a5dce45631ad8c12dbae783f0dff2d5dafa341fa9f9317cfbf377116c385169b0029","srcmap":"693:9743:1:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24","srcmap-runtime":"693:9743:1:-;;;;;;;;"},"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/interfaces/PublicRangeInterface.sol:PublicRangeInterface":{"abi":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256[6]\"}],\"name\":\"validatePublicRange\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}]","bin":"","bin-runtime":"","srcmap":"","srcmap-runtime":""}},"sourceList":["/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/publicRange/PublicRange.sol","/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/publicRange/PublicRangeABIEncoder.sol","/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/interfaces/PublicRangeInterface.sol"],"sources":{"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/publicRange/PublicRange.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/publicRange/PublicRange.sol","exportedSymbols":{"PublicRange":[14]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0","<","0.6",".0"]},"id":1,"name":"PragmaDirective","src":"0:31:0"},{"attributes":{"SourceUnit":23,"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/publicRange/PublicRangeABIEncoder.sol","file":"./PublicRangeABIEncoder.sol","scope":15,"symbolAliases":[null],"unitAlias":""},"id":2,"name":"ImportDirective","src":"33:37:0"},{"attributes":{"SourceUnit":39,"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/interfaces/PublicRangeInterface.sol","file":"../../../interfaces/PublicRangeInterface.sol","scope":15,"symbolAliases":[null],"unitAlias":""},"id":3,"name":"ImportDirective","src":"71:54:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title Library to validate AZTEC public range zero-knowledge proofs\n@author AZTEC\n@dev Don't include this as an internal library. This contract uses \na static memory table to cache elliptic curve primitives and hashes.\nCalling this internally from another function will lead to memory \nmutation and undefined behaviour.\nThe intended use case is to call this externally via `staticcall`. External \ncalls to OptimizedAZTEC can be treated as pure functions as this contract \ncontains no storage and makes no external calls (other than to precompiles)\nCopyright Spilbury Holdings Ltd 2019. All rights reserved.*","fullyImplemented":true,"linearizedBaseContracts":[14],"name":"PublicRange","scope":15},"children":[{"attributes":{"documentation":"@dev PublicRange.sol will take any transaction sent to it and attempt to validate a zero knowledge proof.\nIf the proof is not valid, the transaction throws.\n@notice See PublicRangeInterface for how method calls should be constructed.\nPublicRange.sol is written in YUL to enable manual memory management and for other efficiency savings.*","implemented":true,"isConstructor":false,"kind":"fallback","modifiers":[null],"name":"","scope":14,"stateMutability":"nonpayable","superFunction":null,"visibility":"external"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":4,"name":"ParameterList","src":"1231:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":5,"name":"ParameterList","src":"1243:0:0"},{"children":[{"attributes":{"externalReferences":[null],"operations":"{\n    validatePublicRange()\n    mstore(0x40, 0x60)\n    function validatePublicRange()\n    {\n        mstore(0x80, calldataload(0x44))\n        mstore(0xa0, calldataload(0x64))\n        let notes := add(0x104, calldataload(0x164))\n        let n := 2\n        let m := 1\n        let gen_order := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001\n        let challenge := mod(calldataload(0x124), gen_order)\n        let publicComparison := mod(calldataload(0x144), gen_order)\n        mstore(0x2e0, calldataload(0x24))\n        mstore(0x300, publicComparison)\n        mstore(0x320, 0)\n        mstore(0x340, 0)\n        hashCommitments(notes, n)\n        let b := add(0x360, mul(n, 0x80))\n        for {\n            let i := 0\n        }\n        lt(i, n)\n        {\n            i := add(i, 0x01)\n        }\n        {\n            let noteIndex := add(add(notes, 0x20), mul(i, 0xc0))\n            let k\n            let a := calldataload(add(noteIndex, 0x20))\n            let c := challenge\n            switch gt(i, 0)\n            case 1 {\n                k := addmod(calldataload(sub(noteIndex, 0xc0)), mulmod(sub(gen_order, c), publicComparison, gen_order), gen_order)\n            }\n            case 0 {\n                k := calldataload(noteIndex)\n            }\n            validateCommitment(noteIndex, k, a)\n            if gt(i, 0)\n            {\n                let x := mod(mload(0x00), gen_order)\n                k := mulmod(k, x, gen_order)\n                a := mulmod(a, x, gen_order)\n                c := mulmod(challenge, x, gen_order)\n            }\n            calldatacopy(0xe0, add(noteIndex, 0x80), 0x40)\n            calldatacopy(0x20, add(noteIndex, 0x40), 0x40)\n            mstore(0x120, sub(gen_order, c))\n            mstore(0x60, k)\n            mstore(0xc0, a)\n            let result := staticcall(gas(), 7, 0xe0, 0x60, 0x1a0, 0x40)\n            result := and(result, staticcall(gas(), 7, 0x20, 0x60, 0x120, 0x40))\n            result := and(result, staticcall(gas(), 7, 0x80, 0x60, 0x160, 0x40))\n            result := and(result, staticcall(gas(), 6, 0x120, 0x80, 0x160, 0x40))\n            result := and(result, staticcall(gas(), 6, 0x160, 0x80, b, 0x40))\n            mstore(0x60, c)\n            result := and(result, staticcall(gas(), 7, 0x20, 0x60, 0x220, 0x40))\n            result := and(result, staticcall(gas(), 6, 0x220, 0x80, 0x260, 0x40))\n            result := and(result, staticcall(gas(), 6, 0x1a0, 0x80, 0x1e0, 0x40))\n            if iszero(result)\n            {\n                mstore(0x00, 400)\n                revert(0x00, 0x20)\n            }\n            b := add(b, 0x40)\n        }\n        validatePairing(0x84)\n        let expected := mod(keccak256(0x2e0, sub(b, 0x2e0)), gen_order)\n        if iszero(eq(expected, challenge))\n        {\n            mstore(0x00, 404)\n            revert(0x00, 0x20)\n        }\n    }\n    function validateCommitment(note, k, a)\n    {\n        let gen_order := 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001\n        let field_order := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n        let gammaX := calldataload(add(note, 0x40))\n        let gammaY := calldataload(add(note, 0x60))\n        let sigmaX := calldataload(add(note, 0x80))\n        let sigmaY := calldataload(add(note, 0xa0))\n        if iszero(and(and(and(eq(mod(a, gen_order), a), gt(a, 1)), and(eq(mod(k, gen_order), k), gt(k, 1))), and(eq(addmod(mulmod(mulmod(sigmaX, sigmaX, field_order), sigmaX, field_order), 3, field_order), mulmod(sigmaY, sigmaY, field_order)), eq(addmod(mulmod(mulmod(gammaX, gammaX, field_order), gammaX, field_order), 3, field_order), mulmod(gammaY, gammaY, field_order)))))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n    }\n    function validatePairing(t2)\n    {\n        let field_order := 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47\n        let t2_x_1 := calldataload(t2)\n        let t2_x_2 := calldataload(add(t2, 0x20))\n        let t2_y_1 := calldataload(add(t2, 0x40))\n        let t2_y_2 := calldataload(add(t2, 0x60))\n        if or(or(or(or(or(or(or(iszero(t2_x_1), iszero(t2_x_2)), iszero(t2_y_1)), iszero(t2_y_2)), eq(t2_x_1, 0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed)), eq(t2_x_2, 0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2)), eq(t2_y_1, 0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa)), eq(t2_y_2, 0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n        mstore(0x20, mload(0x1e0))\n        mstore(0x40, mload(0x200))\n        mstore(0x80, 0x1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed)\n        mstore(0x60, 0x198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c2)\n        mstore(0xc0, 0x12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa)\n        mstore(0xa0, 0x90689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b)\n        mstore(0xe0, mload(0x260))\n        mstore(0x100, mload(0x280))\n        mstore(0x140, t2_x_1)\n        mstore(0x120, t2_x_2)\n        mstore(0x180, t2_y_1)\n        mstore(0x160, t2_y_2)\n        let success := staticcall(gas(), 8, 0x20, 0x180, 0x20, 0x20)\n        if or(iszero(success), iszero(mload(0x20)))\n        {\n            mstore(0x00, 400)\n            revert(0x00, 0x20)\n        }\n    }\n    function hashCommitments(notes, n)\n    {\n        for {\n            let i := 0\n        }\n        lt(i, n)\n        {\n            i := add(i, 0x01)\n        }\n        {\n            let index := add(add(notes, mul(i, 0xc0)), 0x60)\n            calldatacopy(add(0x360, mul(i, 0x80)), index, 0x80)\n        }\n        mstore(0x00, keccak256(0x360, mul(n, 0x80)))\n    }\n}"},"children":[],"id":6,"name":"InlineAssembly","src":"1253:16620:0"},{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"encodeAndExit","referencedDeclaration":21,"type":"function () pure"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":22,"type":"type(library PublicRangeABIEncoder)","value":"PublicRangeABIEncoder"},"id":7,"name":"Identifier","src":"17852:21:0"}],"id":9,"name":"MemberAccess","src":"17852:35:0"}],"id":10,"name":"FunctionCall","src":"17852:37:0"}],"id":11,"name":"ExpressionStatement","src":"17852:37:0"}],"id":12,"name":"Block","src":"1243:16653:0"}],"id":13,"name":"FunctionDefinition","src":"1223:16673:0"}],"id":14,"name":"ContractDefinition","src":"773:17125:0"}],"id":15,"name":"SourceUnit","src":"0:17899:0"}},"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/publicRange/PublicRangeABIEncoder.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/publicRange/PublicRangeABIEncoder.sol","exportedSymbols":{"PublicRangeABIEncoder":[22]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0","<","0.6",".0"]},"id":16,"name":"PragmaDirective","src":"0:31:1"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@title Library to ABI encode the output of a public range proof verification operation\n@author AZTEC\n@dev Don't include this as an internal library. This contract uses a static memory table to cache\nelliptic curve primitives and hashes.\nCalling this internally from another function will lead to memory mutation and undefined behaviour.\nThe intended use case is to call this externally via `staticcall`.\nExternal calls to OptimizedAZTEC can be treated as pure functions as this contract contains no\nstorage and makes no external calls (other than to precompiles)\nCopyright Spilsbury Holdings Ltd 2019. All rights reserved.*","fullyImplemented":true,"linearizedBaseContracts":[22],"name":"PublicRangeABIEncoder","scope":23},"children":[{"attributes":{"documentation":"New calldata map\n0x04:0x24      = calldata location of proofData byte array\n0x24:0x44      = message sender\n0x44:0x64      = h_x     // crs\n0x64:0x84      = h_y     // crs\n0x84:0xa4      = t2_x0   // crs\n0xa4:0xc4      = t2_x1   // crs\n0xc4:0xe4      = t2_y0   // crs\n0xe4:0x104     = t2_y1   // crs\n0x104:0x124    = length of proofData byte array\n0x124:0x144    = challenge\n0x144:0x164    = publicComparison\n0x164:0x184    = offset in byte array to notes\n0x184:0x1a4    = offset in byte array to inputOwners\n0x1a4:0x1c4    = offset in byte array to outputOwners\n0x1c4:0x1e4    = offset in byte array to metadata","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"encodeAndExit","scope":22,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":17,"name":"ParameterList","src":"1476:2:1"},{"attributes":{"parameters":[null]},"children":[],"id":18,"name":"ParameterList","src":"1493:0:1"},{"children":[{"attributes":{"externalReferences":[null],"operations":"{\n    let notes := add(0x104, calldataload(0x164))\n    let n := 2\n    let m := 1\n    let inputOwners := add(0x124, calldataload(0x184))\n    let outputOwners := add(0x124, calldataload(0x1a4))\n    let metadata := add(0x144, calldataload(0x1c4))\n    mstore(0x1a0, 0x01)\n    mstore(0x1c0, 0x60)\n    mstore(0x200, 0xc0)\n    mstore(0x240, 0x00)\n    mstore(0x260, 0)\n    mstore(0x280, calldataload(0x124))\n    let inputPtr := 0x2a0\n    mstore(add(inputPtr, 0x20), m)\n    let s := add(0x2e0, mul(m, 0x20))\n    for {\n        let i := 0\n    }\n    lt(i, m)\n    {\n        i := add(i, 0x01)\n    }\n    {\n        let noteIndex := add(add(notes, 0x20), mul(i, 0xc0))\n        mstore(0x00, 0x01)\n        calldatacopy(0x20, add(noteIndex, 0x40), 0x80)\n        mstore(s, 0xc0)\n        mstore(add(s, 0x20), 0x01)\n        mstore(add(s, 0x40), calldataload(inputOwners))\n        mstore(add(s, 0x60), keccak256(0x00, 0xa0))\n        mstore(add(s, 0x80), 0x40)\n        mstore(add(s, 0xa0), or(calldataload(add(noteIndex, 0x40)), mul(and(calldataload(add(noteIndex, 0x60)), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n        mstore(add(s, 0xc0), or(calldataload(add(noteIndex, 0x80)), mul(and(calldataload(add(noteIndex, 0xa0)), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n        mstore(add(add(inputPtr, 0x40), mul(i, 0x20)), sub(s, inputPtr))\n        s := add(s, 0xe0)\n    }\n    mstore(inputPtr, sub(sub(s, inputPtr), 0x20))\n    mstore(0x220, add(0xc0, sub(s, inputPtr)))\n    inputPtr := s\n    mstore(add(inputPtr, 0x20), sub(n, m))\n    s := add(s, add(0x40, mul(sub(n, m), 0x20)))\n    for {\n        let i := m\n    }\n    lt(i, n)\n    {\n        i := add(i, 0x01)\n    }\n    {\n        let noteIndex := add(add(notes, 0x20), mul(i, 0xc0))\n        let metadataIndex := calldataload(add(metadata, mul(sub(i, m), 0x20)))\n        let metadataLength := calldataload(add(sub(metadata, 0x40), metadataIndex))\n        mstore(0x00, 0x01)\n        calldatacopy(0x20, add(noteIndex, 0x40), 0x80)\n        mstore(s, add(0xc0, metadataLength))\n        mstore(add(s, 0x20), 0x01)\n        mstore(add(s, 0x40), calldataload(add(outputOwners, mul(sub(i, m), 0x20))))\n        mstore(add(s, 0x60), keccak256(0x00, 0xa0))\n        mstore(add(s, 0x80), add(0x40, metadataLength))\n        mstore(add(s, 0xa0), or(mload(0x20), mul(and(mload(0x40), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n        mstore(add(s, 0xc0), or(mload(0x60), mul(and(mload(0x80), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n        calldatacopy(add(s, 0xe0), add(metadataIndex, sub(metadata, 0x20)), metadataLength)\n        mstore(add(add(inputPtr, 0x40), mul(sub(i, m), 0x20)), sub(s, inputPtr))\n        s := add(s, add(mload(s), 0x20))\n    }\n    mstore(inputPtr, sub(sub(s, inputPtr), 0x20))\n    let notesLength := sub(s, 0x2a0)\n    mstore(0x1e0, add(0xa0, notesLength))\n    mstore(0x180, add(0x100, notesLength))\n    mstore(0x160, 0x20)\n    return(0x160, add(0x140, notesLength))\n}"},"children":[],"id":19,"name":"InlineAssembly","src":"1503:8931:1"}],"id":20,"name":"Block","src":"1493:8941:1"}],"id":21,"name":"FunctionDefinition","src":"1454:8980:1"}],"id":22,"name":"ContractDefinition","src":"693:9743:1"}],"id":23,"name":"SourceUnit","src":"0:10437:1"}},"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/interfaces/PublicRangeInterface.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/interfaces/PublicRangeInterface.sol","exportedSymbols":{"PublicRangeInterface":[38]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0","<","0.6",".0"]},"id":24,"name":"PragmaDirective","src":"0:31:2"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"interface","documentation":"@title PublicRangeInterface\n@author AZTEC\n@dev An interface defining the PublicRangeInterface standard.\nCopyright Spilbury Holdings Ltd 2019. All rights reserved.*","fullyImplemented":false,"linearizedBaseContracts":[38],"name":"PublicRangeInterface","scope":39},"children":[{"attributes":{"body":null,"documentation":null,"implemented":false,"isConstructor":false,"kind":"function","modifiers":[null],"name":"validatePublicRange","scope":38,"stateMutability":"pure","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"","scope":37,"stateVariable":false,"storageLocation":"calldata","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":25,"name":"ElementaryTypeName","src":"352:5:2"}],"id":26,"name":"VariableDeclaration","src":"352:14:2"},{"attributes":{"constant":false,"name":"","scope":37,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":27,"name":"ElementaryTypeName","src":"377:7:2"}],"id":28,"name":"VariableDeclaration","src":"377:7:2"},{"attributes":{"constant":false,"name":"","scope":37,"stateVariable":false,"storageLocation":"calldata","type":"uint256[6]","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"uint256[6]"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":29,"name":"ElementaryTypeName","src":"395:4:2"},{"attributes":{"argumentTypes":null,"hexvalue":"36","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":null,"value":"6"},"id":30,"name":"Literal","src":"400:1:2"}],"id":31,"name":"ArrayTypeName","src":"395:7:2"}],"id":32,"name":"VariableDeclaration","src":"395:16:2"}],"id":33,"name":"ParameterList","src":"342:75:2"},{"children":[{"attributes":{"constant":false,"name":"","scope":37,"stateVariable":false,"storageLocation":"memory","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":34,"name":"ElementaryTypeName","src":"441:5:2"}],"id":35,"name":"VariableDeclaration","src":"441:12:2"}],"id":36,"name":"ParameterList","src":"440:14:2"}],"id":37,"name":"FunctionDefinition","src":"314:141:2"}],"id":38,"name":"ContractDefinition","src":"217:240:2"}],"id":39,"name":"SourceUnit","src":"0:458:2"}}},"version":"0.5.0+commit.1d4f565a.Linux.g++"}
