{"contracts":{"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/swap/SwapABIEncoder.sol:SwapABIEncoder":{"abi":"[]","bin":"604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820cde2158499392d4cc4f37b0543a7d5ab7dde84c8566bd14ecce593aedd5516c00029","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820cde2158499392d4cc4f37b0543a7d5ab7dde84c8566bd14ecce593aedd5516c00029","srcmap":"675:26777:0:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24","srcmap-runtime":"675:26777:0:-;;;;;;;;"},"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/test/ACE/validators/swap/SwapABIEncoderTest.sol:SwapABIEncoderTest":{"abi":"[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256[6]\"}],\"name\":\"validateSwap\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}]","bin":"608060405234801561001057600080fd5b50610563806100206000396000f3fe608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632863433314610046575b600080fd5b34801561005257600080fd5b506100f5600480360361010081101561006a57600080fd5b810190808035906020019064010000000081111561008757600080fd5b82018360208201111561009957600080fd5b803590602001918460018302840111640100000000831117156100bb57600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908060c001909192919290505050610170565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013557808201518184015260208101905061011a565b50505050905090810190601f1680156101625780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b606061017a610182565b949350505050565b610144356101040161016435610124016101843561014401602082033560041460208203356002141615156101b657600080fd5b60206101605260026101a05260806101c05260c06102205261020061024052600061026052600061028052610124356102a0526101206102c05260016102e052606061030052600160005260806060840160203760c06103205260016103405281356103605260a06000206103805260406103a0527f800000000000000000000000000000000000000000000000000000000000000060016040511602602051176103c0527f800000000000000000000000000000000000000000000000000000000000000060016080511602606051176103e05260016104205260606104405260806101e0840160203760016104805260408201356104a05260a06000206104c052803560408203810135806040016104e0527f80000000000000000000000000000000000000000000000000000000000000006001604051160260205117610500527f800000000000000000000000000000000000000000000000000000000000000060016080511602606051176105205280602084038301610540378060c00161046052806101200161040052806103200161020052806103c0016101e052806105400160c06020820152610200604082015260006060820152600060808201526101243560e052602060e02060a082015261012060c0820152600160e0820152606061010082015260806102a0870160203760c06101208201526001610140820152606085013561016082015260a060002061018082015260406101a08201527f800000000000000000000000000000000000000000000000000000000000000060016040511602602051176101c08201527f800000000000000000000000000000000000000000000000000000000000000060016080511602606051176101e08201526001610220820152606061024082015260806101208701602037600161028082015260208501356102a082015260a06000206102c082015260208401359250604084038301359150816040016102e08201527f800000000000000000000000000000000000000000000000000000000000000060016040511602602051176103008201527f80000000000000000000000000000000000000000000000000000000000000006001608051160260605117610320820152816020850384016103408301378160c00161026082015281610120016102008201528161032001815261020051826103c001016101805260406101805101610160f3fea165627a7a7230582040b8f83393acb3429033d8550063c15a914c9bb2c12e16122e0c494892ef91200029","bin-runtime":"608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632863433314610046575b600080fd5b34801561005257600080fd5b506100f5600480360361010081101561006a57600080fd5b810190808035906020019064010000000081111561008757600080fd5b82018360208201111561009957600080fd5b803590602001918460018302840111640100000000831117156100bb57600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908060c001909192919290505050610170565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013557808201518184015260208101905061011a565b50505050905090810190601f1680156101625780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b606061017a610182565b949350505050565b610144356101040161016435610124016101843561014401602082033560041460208203356002141615156101b657600080fd5b60206101605260026101a05260806101c05260c06102205261020061024052600061026052600061028052610124356102a0526101206102c05260016102e052606061030052600160005260806060840160203760c06103205260016103405281356103605260a06000206103805260406103a0527f800000000000000000000000000000000000000000000000000000000000000060016040511602602051176103c0527f800000000000000000000000000000000000000000000000000000000000000060016080511602606051176103e05260016104205260606104405260806101e0840160203760016104805260408201356104a05260a06000206104c052803560408203810135806040016104e0527f80000000000000000000000000000000000000000000000000000000000000006001604051160260205117610500527f800000000000000000000000000000000000000000000000000000000000000060016080511602606051176105205280602084038301610540378060c00161046052806101200161040052806103200161020052806103c0016101e052806105400160c06020820152610200604082015260006060820152600060808201526101243560e052602060e02060a082015261012060c0820152600160e0820152606061010082015260806102a0870160203760c06101208201526001610140820152606085013561016082015260a060002061018082015260406101a08201527f800000000000000000000000000000000000000000000000000000000000000060016040511602602051176101c08201527f800000000000000000000000000000000000000000000000000000000000000060016080511602606051176101e08201526001610220820152606061024082015260806101208701602037600161028082015260208501356102a082015260a06000206102c082015260208401359250604084038301359150816040016102e08201527f800000000000000000000000000000000000000000000000000000000000000060016040511602602051176103008201527f80000000000000000000000000000000000000000000000000000000000000006001608051160260605117610320820152816020850384016103408301378160c00161026082015281610120016102008201528161032001815261020051826103c001016101805260406101805101610160f3fea165627a7a7230582040b8f83393acb3429033d8550063c15a914c9bb2c12e16122e0c494892ef91200029","srcmap":"696:243:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;696:243:1;;;;;;;","srcmap-runtime":"696:243:1:-;;;;;;;;;;;;;;;;;;;;;;;;730:207;;8:9:-1;5:2;;;30:1;27;20:12;5:2;730:207:1;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;730:207:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;730:207:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;730:207:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;730:207:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;730:207:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;872:12;900:30;:28;:30::i;:::-;730:207;;;;;;:::o;1425:26025:0:-;1574:5;1561:19;1554:5;1550:31;1636:5;1623:19;1616:5;1612:31;1738:5;1725:19;1718:5;1714:31;2209:4;2197:10;2193:21;2180:35;2174:4;2171:45;2146:4;2133:11;2129:22;2116:36;2110:4;2107:46;2086:144;2079:152;2076:2;;;2263:4;2257;2250:18;2076:2;5503:4;5496:5;5489:19;6276:4;6269:5;6262:19;6424:4;6417:5;6410:19;7245:4;7238:5;7231:19;7629:5;7622;7615:20;7808:4;7801:5;7794:19;7883:4;7876:5;7869:19;7971:5;7958:19;7951:5;7944:34;8859:5;8852;8845:20;8936:4;8929:5;8922:19;9045:4;9038:5;9031:19;9867:4;9861;9854:18;10339:4;10332;10325:5;10321:16;10315:4;10302:42;10455:4;10448:5;10441:19;10539:4;10532:5;10525:19;10699:10;10686:24;10679:5;10672:39;10848:4;10842;10832:21;10825:5;10818:36;10954:4;10947:5;10940:19;11906:66;11875:4;11868;11862:11;11858:22;11786:208;11738:4;11732:11;11708:304;11685:5;11661:365;12242:66;12215:4;12208;12202:11;12198:22;12173:157;12146:4;12140:11;12116:232;12093:5;12069:293;13084:4;13077:5;13070:19;13183:4;13176:5;13169:19;14475:4;14467:5;14460;14456:17;14450:4;14437:43;14640:4;14633:5;14626:19;14879:4;14867:10;14863:21;14850:35;14843:5;14836:50;14977:4;14971;14961:21;14954:5;14947:36;15405:11;15392:25;16559:4;16546:11;16542:22;16527:13;16523:42;16510:56;16668:14;16662:4;16658:25;16651:5;16644:40;16935:66;16904:4;16897;16891:11;16887:22;16858:165;16831:4;16825:11;16801:240;16778:5;16754:301;17306:66;17275:4;17268;17262:11;17258:22;17229:165;17202:4;17196:11;17172:240;17149:5;17125:301;18034:14;18026:4;18013:11;18009:22;17994:13;17990:42;17983:5;17970:79;18524:14;18518:4;18514:25;18507:5;18500:40;18742:14;18735:5;18731:26;18724:5;18717:41;18965:14;18958:5;18954:26;18947:5;18940:41;19526:14;19519:5;19515:26;19508:5;19501:41;19863:14;19856:5;19852:26;20054:4;20047;20037:8;20033:19;20026:33;20166:5;20159:4;20149:8;20145:19;20138:34;20265:4;20258;20248:8;20244:19;20237:33;20378:4;20371;20361:8;20357:19;20350:33;20588:5;20575:19;20569:4;20562:33;20652:4;20646;20636:21;20629:4;20619:8;20615:19;20608:50;20909:5;20902:4;20892:8;20888:19;20881:34;21021:4;21014;21004:8;21000:19;20993:33;21147:4;21139:5;21129:8;21125:20;21118:34;21501:4;21493:5;21486;21482:17;21476:4;21463:43;21618:4;21610:5;21600:8;21596:20;21589:34;21754:4;21746:5;21736:8;21732:20;21725:34;21907:4;21895:10;21891:21;21878:35;21870:5;21860:8;21856:20;21849:65;22033:4;22027;22017:21;22009:5;21999:8;21995:20;21988:51;22160:4;22152:5;22142:8;22138:20;22131:34;22441:66;22410:4;22403;22397:11;22393:22;22364:165;22337:4;22331:11;22307:240;22283:5;22273:8;22269:20;22245:316;22837:66;22806:4;22799;22793:11;22789:22;22760:165;22733:4;22727:11;22703:240;22679:5;22669:8;22665:20;22641:316;23283:4;23275:5;23265:8;23261:20;23254:34;23397:4;23389:5;23379:8;23375:20;23368:34;23746:4;23738:5;23731;23727:17;23721:4;23708:43;23931:4;23923:5;23913:8;23909:20;23902:34;24084:4;24072:10;24068:21;24055:35;24047:5;24037:8;24033:20;24026:65;24196:4;24190;24180:21;24172:5;24162:8;24158:20;24151:51;24403:4;24390:11;24386:22;24373:36;24356:53;;24489:4;24476:11;24472:22;24457:13;24453:42;24440:56;24422:74;;24624:14;24618:4;24614:25;24606:5;24596:8;24592:20;24585:55;24916:66;24885:4;24878;24872:11;24868:22;24839:165;24812:4;24806:11;24782:240;24758:5;24748:8;24744:20;24720:316;25312:66;25281:4;25274;25268:11;25264:22;25235:165;25208:4;25202:11;25178:240;25154:5;25144:8;25140:20;25116:316;25584:14;25576:4;25563:11;25559:22;25544:13;25540:42;25532:5;25522:8;25518:20;25505:94;25817:14;25811:4;25807:25;25799:5;25789:8;25785:20;25778:55;25983:14;25976:5;25972:26;25964:5;25954:8;25950:20;25943:56;26119:14;26112:5;26108:26;26098:8;26091:44;26933:5;26927:12;26910:14;26903:5;26899:26;26895:45;26888:5;26881:60;27410:4;27402:5;27396:12;27392:23;27385:5;27378:38"}},"sourceList":["/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/swap/SwapABIEncoder.sol","/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/test/ACE/validators/swap/SwapABIEncoderTest.sol"],"sources":{"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/swap/SwapABIEncoder.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/swap/SwapABIEncoder.sol","exportedSymbols":{"SwapABIEncoder":[30]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0","<","0.6",".0"]},"id":24,"name":"PragmaDirective","src":"0:31:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@title Library to ABI encode the output of a Swap proof verification\n@author AZTEC\n@dev Don't include this as an internal library. This contract uses a static memory table to cache\nelliptic curve primitives and hashes.\nCalling this internally from another function will lead to memory mutation and undefined behaviour.\nThe intended use case is to call this externally via `staticcall`.\nExternal calls to OptimizedAZTEC can be treated as pure functions as this contract contains no\nstorage and makes no external calls (other than to precompiles)\nCopyright Spilsbury Holdings Ltd 2019. All rights reserved.*","fullyImplemented":true,"linearizedBaseContracts":[30],"name":"SwapABIEncoder","scope":31},"children":[{"attributes":{"documentation":"Calldata map\n0x04:0x24      = calldata location of proofData byte array - pointer to the proofData.\n0x24:0x44      = message sender // sender\n0x44:0x64      = h_x     // crs\n0x64:0x84      = h_y     // crs\n0x84:0xa4      = t2_x0   // crs\n0xa4:0xc4      = t2_x1   // crs\n0xc4:0xe4      = t2_y0   // crs\n0xe4:0x104     = t2_y1   // crs\n0x104:0x124    = length of proofData byte array\n0x124:0x144    = challenge\n0x144:0x164    = offset in byte array to notes\n0x164:0x184    = offset in byte array to inputOwners\n0x184:0x1a4    = offset in byte array to outputOwners\n0x1a4:0x1c4    = offset in byte array to metadata*","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"encodeAndExit","scope":30,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":25,"name":"ParameterList","src":"1447:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":26,"name":"ParameterList","src":"1464:0:0"},{"children":[{"attributes":{"externalReferences":[null],"operations":"{\n    let notes := add(0x104, calldataload(0x144))\n    let noteOwners := add(0x124, calldataload(0x164))\n    let metadataPtr := add(0x144, calldataload(0x184))\n    if iszero(and(eq(0x02, calldataload(sub(metadataPtr, 0x20))), eq(0x04, calldataload(sub(noteOwners, 0x20)))))\n    {\n        revert(0x00, 0x00)\n    }\n    mstore(0x160, 0x20)\n    mstore(0x1a0, 0x02)\n    mstore(0x1c0, 0x80)\n    mstore(0x220, 0xc0)\n    mstore(0x240, 0x200)\n    mstore(0x260, 0x00)\n    mstore(0x280, 0x00)\n    mstore(0x2a0, calldataload(0x124))\n    mstore(0x2c0, 0x120)\n    mstore(0x2e0, 0x01)\n    mstore(0x300, 0x60)\n    mstore(0x00, 0x01)\n    calldatacopy(0x20, add(notes, 0x60), 0x80)\n    mstore(0x320, 0xc0)\n    mstore(0x340, 0x01)\n    mstore(0x360, calldataload(noteOwners))\n    mstore(0x380, keccak256(0x00, 0xa0))\n    mstore(0x3a0, 0x40)\n    mstore(0x3c0, or(mload(0x20), mul(and(mload(0x40), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    mstore(0x3e0, or(mload(0x60), mul(and(mload(0x80), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    mstore(0x420, 0x01)\n    mstore(0x440, 0x60)\n    calldatacopy(0x20, add(notes, 0x1e0), 0x80)\n    mstore(0x480, 0x01)\n    mstore(0x4a0, calldataload(add(noteOwners, 0x40)))\n    mstore(0x4c0, keccak256(0x00, 0xa0))\n    let metadataIndex := calldataload(metadataPtr)\n    let metadataLength := calldataload(add(metadataIndex, sub(metadataPtr, 0x40)))\n    mstore(0x4e0, add(0x40, metadataLength))\n    mstore(0x500, or(mload(0x20), mul(and(mload(0x40), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    mstore(0x520, or(mload(0x60), mul(and(mload(0x80), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    calldatacopy(0x540, add(metadataIndex, sub(metadataPtr, 0x20)), metadataLength)\n    mstore(0x460, add(0xc0, metadataLength))\n    mstore(0x400, add(0x120, metadataLength))\n    mstore(0x200, add(0x320, metadataLength))\n    mstore(0x1e0, add(0x3c0, metadataLength))\n    let proofPtr := add(0x540, metadataLength)\n    mstore(add(proofPtr, 0x20), 0xc0)\n    mstore(add(proofPtr, 0x40), 0x200)\n    mstore(add(proofPtr, 0x60), 0x00)\n    mstore(add(proofPtr, 0x80), 0x00)\n    mstore(0xe0, calldataload(0x124))\n    mstore(add(proofPtr, 0xa0), keccak256(0xe0, 0x20))\n    mstore(add(proofPtr, 0xc0), 0x120)\n    mstore(add(proofPtr, 0xe0), 0x01)\n    mstore(add(proofPtr, 0x100), 0x60)\n    calldatacopy(0x20, add(notes, 0x2a0), 0x80)\n    mstore(add(proofPtr, 0x120), 0xc0)\n    mstore(add(proofPtr, 0x140), 0x01)\n    mstore(add(proofPtr, 0x160), calldataload(add(noteOwners, 0x60)))\n    mstore(add(proofPtr, 0x180), keccak256(0x00, 0xa0))\n    mstore(add(proofPtr, 0x1a0), 0x40)\n    mstore(add(proofPtr, 0x1c0), or(mload(0x20), mul(and(mload(0x40), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    mstore(add(proofPtr, 0x1e0), or(mload(0x60), mul(and(mload(0x80), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    mstore(add(proofPtr, 0x220), 0x01)\n    mstore(add(proofPtr, 0x240), 0x60)\n    calldatacopy(0x20, add(notes, 0x120), 0x80)\n    mstore(add(proofPtr, 0x280), 0x01)\n    mstore(add(proofPtr, 0x2a0), calldataload(add(noteOwners, 0x20)))\n    mstore(add(proofPtr, 0x2c0), keccak256(0x00, 0xa0))\n    metadataIndex := calldataload(add(metadataPtr, 0x20))\n    metadataLength := calldataload(add(metadataIndex, sub(metadataPtr, 0x40)))\n    mstore(add(proofPtr, 0x2e0), add(0x40, metadataLength))\n    mstore(add(proofPtr, 0x300), or(mload(0x20), mul(and(mload(0x40), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    mstore(add(proofPtr, 0x320), or(mload(0x60), mul(and(mload(0x80), 0x01), 0x8000000000000000000000000000000000000000000000000000000000000000)))\n    calldatacopy(add(proofPtr, 0x340), add(metadataIndex, sub(metadataPtr, 0x20)), metadataLength)\n    mstore(add(proofPtr, 0x260), add(0xc0, metadataLength))\n    mstore(add(proofPtr, 0x200), add(0x120, metadataLength))\n    mstore(proofPtr, add(0x320, metadataLength))\n    mstore(0x180, add(add(0x3c0, metadataLength), mload(0x200)))\n    return(0x160, add(mload(0x180), 0x40))\n}"},"children":[],"id":27,"name":"InlineAssembly","src":"1474:25976:0"}],"id":28,"name":"Block","src":"1464:25986:0"}],"id":29,"name":"FunctionDefinition","src":"1425:26025:0"}],"id":30,"name":"ContractDefinition","src":"675:26777:0"}],"id":31,"name":"SourceUnit","src":"0:27453:0"}},"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/test/ACE/validators/swap/SwapABIEncoderTest.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/test/ACE/validators/swap/SwapABIEncoderTest.sol","exportedSymbols":{"SwapABIEncoderTest":[22]}},"children":[{"attributes":{"literals":["solidity",">=","0.5",".0","<","0.6",".0"]},"id":1,"name":"PragmaDirective","src":"0:31:1"},{"attributes":{"SourceUnit":31,"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Trail_of_Bits-aztec/AZTEC-c3f49df54849cd2e91a9ba4937d895179e7c283d/packages/protocol/contracts/ACE/validators/swap/SwapABIEncoder.sol","file":"../../../../ACE/validators/swap/SwapABIEncoder.sol","scope":23,"symbolAliases":[null],"unitAlias":""},"id":2,"name":"ImportDirective","src":"33:60:1"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@title Swap ABI Encoder Test\n@author AZTEC\n@dev Don't include this as an internal library. This contract uses a static memory table to cache\nelliptic curve primitives and hashes.\nCalling this internally from another function will lead to memory mutation and undefined behaviour.\nThe intended use case is to call this externally via `staticcall`.\nExternal calls to OptimizedAZTEC can be treated as pure functions as this contract contains no\nstorage and makes no external calls (other than to precompiles)\nCopyright Spilsbury Holdings Ltd 2019. All rights reserved.*","fullyImplemented":true,"linearizedBaseContracts":[22],"name":"SwapABIEncoderTest","scope":23},"children":[{"attributes":{"documentation":null,"implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"validateSwap","scope":22,"stateMutability":"pure","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"","scope":21,"stateVariable":false,"storageLocation":"calldata","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":3,"name":"ElementaryTypeName","src":"761:5:1"}],"id":4,"name":"VariableDeclaration","src":"761:14:1"},{"attributes":{"constant":false,"name":"","scope":21,"stateVariable":false,"storageLocation":"default","type":"address","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"address","stateMutability":"nonpayable","type":"address"},"id":5,"name":"ElementaryTypeName","src":"785:7:1"}],"id":6,"name":"VariableDeclaration","src":"785:7:1"},{"attributes":{"constant":false,"name":"","scope":21,"stateVariable":false,"storageLocation":"calldata","type":"uint256[6]","value":null,"visibility":"internal"},"children":[{"attributes":{"type":"uint256[6]"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":7,"name":"ElementaryTypeName","src":"802:4:1"},{"attributes":{"argumentTypes":null,"hexvalue":"36","isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"subdenomination":null,"token":"number","type":null,"value":"6"},"id":8,"name":"Literal","src":"807:1:1"}],"id":9,"name":"ArrayTypeName","src":"802:7:1"}],"id":10,"name":"VariableDeclaration","src":"802:16:1"}],"id":11,"name":"ParameterList","src":"751:73:1"},{"children":[{"attributes":{"constant":false,"name":"","scope":21,"stateVariable":false,"storageLocation":"memory","type":"bytes","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":12,"name":"ElementaryTypeName","src":"872:5:1"}],"id":13,"name":"VariableDeclaration","src":"872:12:1"}],"id":14,"name":"ParameterList","src":"871:14:1"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"arguments":[null],"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[null],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"encodeAndExit","referencedDeclaration":29,"type":"function () pure"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":30,"type":"type(library SwapABIEncoder)","value":"SwapABIEncoder"},"id":15,"name":"Identifier","src":"900:14:1"}],"id":17,"name":"MemberAccess","src":"900:28:1"}],"id":18,"name":"FunctionCall","src":"900:30:1"}],"id":19,"name":"ExpressionStatement","src":"900:30:1"}],"id":20,"name":"Block","src":"890:47:1"}],"id":21,"name":"FunctionDefinition","src":"730:207:1"}],"id":22,"name":"ContractDefinition","src":"696:243:1"}],"id":23,"name":"SourceUnit","src":"0:940:1"}}},"version":"0.5.0+commit.1d4f565a.Linux.g++"}
