{"contracts":{"/home/yemx6/solc-dApp/code/Trail_of_Bits-dharma-smartwallet/node_modules/@gnosis.pm/safe-contracts/contracts/libraries/MultiSendCallOnly.sol:MultiSendCallOnly":{"abi":"[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"transactions\",\"type\":\"bytes\"}],\"name\":\"multiSend\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]","bin":"608060405234801561001057600080fd5b5061019a806100206000396000f3fe60806040526004361061001e5760003560e01c80638d80ff0a14610023575b600080fd5b6100dc6004803603602081101561003957600080fd5b810190808035906020019064010000000081111561005657600080fd5b82018360208201111561006857600080fd5b8035906020019184600183028401116401000000008311171561008a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506100de565b005b805160205b8181101561015f578083015160f81c6001820184015160601c60158301850151603584018601516055850187016000856000811461012857600181146101385761013d565b6000808585888a5af1915061013d565b600080fd5b50600081141561014c57600080fd5b82605501870196505050505050506100e3565b50505056fea2646970667358221220349709e771191f518a8cfdcf25c9a8d2ccd2de571c4c24da46cb53bdbd29c3cf64736f6c63430007000033","bin-runtime":"60806040526004361061001e5760003560e01c80638d80ff0a14610023575b600080fd5b6100dc6004803603602081101561003957600080fd5b810190808035906020019064010000000081111561005657600080fd5b82018360208201111561006857600080fd5b8035906020019184600183028401116401000000008311171561008a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506100de565b005b805160205b8181101561015f578083015160f81c6001820184015160601c60158301850151603584018601516055850187016000856000811461012857600181146101385761013d565b6000808585888a5af1915061013d565b600080fd5b50600081141561014c57600080fd5b82605501870196505050505050506100e3565b50505056fea2646970667358221220349709e771191f518a8cfdcf25c9a8d2ccd2de571c4c24da46cb53bdbd29c3cf64736f6c63430007000033","srcmap":"374:3083:0:-:0;;;;;;;;;;;;;;;;;;;","srcmap-runtime":"374:3083:0:-:0;;;;;;;;;;;;;;;;;;;;;1358:2097;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1528:12;1522:19;1563:4;1580:1859;1663:6;1660:1;1657:13;1580:1859;;;2054:1;2040:12;2036:20;2030:27;2024:4;2020:38;2328:4;2325:1;2321:12;2307;2303:31;2297:38;2291:4;2287:49;2490:4;2487:1;2483:12;2469;2465:31;2459:38;2673:4;2670:1;2666:12;2652;2648:31;2642:38;2867:4;2864:1;2860:12;2846;2842:31;2905:1;2930:9;2965:1;2960:112;;;;3163:1;3158:67;;;;2923:302;;2960:112;3048:1;3045;3033:10;3027:4;3020:5;3016:2;3009:5;3004:46;2993:57;;2960:112;;3158:67;3201:1;3198;3191:12;2923:302;;3257:1;3248:7;3245:14;3242:2;;;3292:1;3289;3282:12;3242:2;3413:10;3407:4;3403:21;3400:1;3396:29;3391:34;;1745:1694;;;;;;1580:1859;;;1494:1955;;;:::o"}},"sourceList":["/home/yemx6/solc-dApp/code/Trail_of_Bits-dharma-smartwallet/node_modules/@gnosis.pm/safe-contracts/contracts/libraries/MultiSendCallOnly.sol"],"sources":{"/home/yemx6/solc-dApp/code/Trail_of_Bits-dharma-smartwallet/node_modules/@gnosis.pm/safe-contracts/contracts/libraries/MultiSendCallOnly.sol":{"AST":{"attributes":{"absolutePath":"/home/yemx6/solc-dApp/code/Trail_of_Bits-dharma-smartwallet/node_modules/@gnosis.pm/safe-contracts/contracts/libraries/MultiSendCallOnly.sol","exportedSymbols":{"MultiSendCallOnly":[11]},"license":"LGPL-3.0-only"},"children":[{"attributes":{"literals":["solidity",">=","0.7",".0","<","0.9",".0"]},"id":1,"name":"PragmaDirective","src":"42:31:0"},{"attributes":{"abstract":false,"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","fullyImplemented":true,"linearizedBaseContracts":[11],"name":"MultiSendCallOnly","scope":12},"children":[{"attributes":{"text":"@title Multi Send Call Only - Allows to batch multiple transactions into one, but only calls\n @author Stefan George - <stefan@gnosis.io>\n @author Richard Meissner - <richard@gnosis.io>\n @notice The guard logic is not required here as this contract doesn't support nested delegate calls"},"id":2,"name":"StructuredDocumentation","src":"75:299:0"},{"attributes":{"functionSelector":"8d80ff0a","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"multiSend","scope":11,"stateMutability":"payable","virtual":false,"visibility":"public"},"children":[{"attributes":{"text":"@dev Sends multiple transactions and reverts all if one fails.\n @param transactions Encoded transactions. Each transaction is encoded as a packed bytes of\n                     operation has to be uint8(0) in this version (=> 1 byte),\n                     to as a address (=> 20 bytes),\n                     value as a uint256 (=> 32 bytes),\n                     data length as a uint256 (=> 32 bytes),\n                     data as bytes.\n                     see abi.encodePacked for more information on packed encoding\n @notice The code is for most part the same as the normal MultiSend (to keep compatibility),\n         but reverts if a transaction tries to use a delegatecall.\n @notice This method is payable as delegatecalls keep the msg.value from the previous call\n         If the calling method (e.g. execTransaction) received ETH this would revert otherwise"},"id":3,"name":"StructuredDocumentation","src":"407:946:0"},{"children":[{"attributes":{"constant":false,"mutability":"mutable","name":"transactions","scope":10,"stateVariable":false,"storageLocation":"memory","type":"bytes","visibility":"internal"},"children":[{"attributes":{"name":"bytes","type":"bytes"},"id":4,"name":"ElementaryTypeName","src":"1377:5:0"}],"id":5,"name":"VariableDeclaration","src":"1377:25:0"}],"id":6,"name":"ParameterList","src":"1376:27:0"},{"attributes":{"parameters":[null]},"children":[],"id":7,"name":"ParameterList","src":"1419:0:0"},{"children":[{"attributes":{"evmVersion":"istanbul","externalReferences":[{"declaration":5,"isOffset":false,"isSlot":false,"src":"1528:12:0","valueSize":1},{"declaration":5,"isOffset":false,"isSlot":false,"src":"2040:12:0","valueSize":1},{"declaration":5,"isOffset":false,"isSlot":false,"src":"2307:12:0","valueSize":1},{"declaration":5,"isOffset":false,"isSlot":false,"src":"2469:12:0","valueSize":1},{"declaration":5,"isOffset":false,"isSlot":false,"src":"2652:12:0","valueSize":1},{"declaration":5,"isOffset":false,"isSlot":false,"src":"2846:12:0","valueSize":1}],"operations":"{\n    let length := mload(transactions)\n    let i := 0x20\n    for { } lt(i, length) { }\n    {\n        let operation := shr(0xf8, mload(add(transactions, i)))\n        let to := shr(0x60, mload(add(transactions, add(i, 0x01))))\n        let value := mload(add(transactions, add(i, 0x15)))\n        let dataLength := mload(add(transactions, add(i, 0x35)))\n        let data := add(transactions, add(i, 0x55))\n        let success := 0\n        switch operation\n        case 0 {\n            success := call(gas(), to, value, data, dataLength, 0, 0)\n        }\n        case 1 { revert(0, 0) }\n        if eq(success, 0) { revert(0, 0) }\n        i := add(i, add(0x55, dataLength))\n    }\n}"},"children":[],"id":8,"name":"InlineAssembly","src":"1485:1964:0"}],"id":9,"name":"Block","src":"1419:2036:0"}],"id":10,"name":"FunctionDefinition","src":"1358:2097:0"}],"id":11,"name":"ContractDefinition","src":"374:3083:0"}],"id":12,"name":"SourceUnit","src":"42:3416:0"}}},"version":"0.7.0+commit.9e61f92b.Linux.g++"}
