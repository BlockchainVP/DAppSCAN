{"contracts":{"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/cryptography/MerkleProof.sol:MerkleProof":{"abi":"[]","bin":"604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820dec3c996b4361be8800ec25ee37ccfdf0df80e3c9d36bc07e4ad3b4bd4c8fb700029","bin-runtime":"73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820dec3c996b4361be8800ec25ee37ccfdf0df80e3c9d36bc07e4ad3b4bd4c8fb700029","srcmap":"110:1134:0:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24","srcmap-runtime":"110:1134:0:-;;;;;;;;"},"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/MerkleProofWrapper.sol:MerkleProofWrapper":{"abi":"[{\"constant\":true,\"inputs\":[{\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"name\":\"root\",\"type\":\"bytes32\"},{\"name\":\"leaf\",\"type\":\"bytes32\"}],\"name\":\"verify\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}]","bin":"608060405234801561001057600080fd5b50610236806100206000396000f3fe608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680635a9a49c714610046575b600080fd5b34801561005257600080fd5b5061011d6004803603606081101561006957600080fd5b810190808035906020019064010000000081111561008657600080fd5b82018360208201111561009857600080fd5b803590602001918460208302840111640100000000831117156100ba57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190929190505050610137565b604051808215151515815260200191505060405180910390f35b600061014484848461014d565b90509392505050565b60008082905060008090505b85518110156101fc576000868281518110151561017257fe5b906020019060200201519050808310156101bc57828160405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092506101ee565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b508080600101915050610159565b50838114915050939250505056fea165627a7a723058202876639ab0ad50d0ebb20beede61c5e496879545cfa3db4e5c3db2a93079a8f40029","bin-runtime":"608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680635a9a49c714610046575b600080fd5b34801561005257600080fd5b5061011d6004803603606081101561006957600080fd5b810190808035906020019064010000000081111561008657600080fd5b82018360208201111561009857600080fd5b803590602001918460208302840111640100000000831117156100ba57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190929190505050610137565b604051808215151515815260200191505060405180910390f35b600061014484848461014d565b90509392505050565b60008082905060008090505b85518110156101fc576000868281518110151561017257fe5b906020019060200201519050808310156101bc57828160405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092506101ee565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b508080600101915050610159565b50838114915050939250505056fea165627a7a723058202876639ab0ad50d0ebb20beede61c5e496879545cfa3db4e5c3db2a93079a8f40029","srcmap":"89:192:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;89:192:1;;;;;;;","srcmap-runtime":"89:192:1:-;;;;;;;;;;;;;;;;;;;;;;;;123:156;;8:9:-1;5:2;;;30:1;27;20:12;5:2;123:156:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;123:156:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;123:156:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;123:156:1;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;123:156:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;123:156:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;212:4;235:37;254:5;261:4;267;235:18;:37::i;:::-;228:44;;123:156;;;;;:::o;464:778:0:-;555:4;571:20;594:4;571:27;;614:9;626:1;614:13;;609:514;633:5;:12;629:1;:16;609:514;;;666:20;689:5;695:1;689:8;;;;;;;;;;;;;;;;;;666:31;;731:12;716;:27;712:401;;;883:12;897;866:44;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;866:44:0;;;856:55;;;;;;841:70;;712:401;;;1070:12;1084;1053:44;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1053:44:0;;;1043:55;;;;;;1028:70;;712:401;609:514;647:3;;;;;;;609:514;;;;1231:4;1215:12;:20;1208:27;;;464:778;;;;;:::o"}},"sourceList":["/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/cryptography/MerkleProof.sol","/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/MerkleProofWrapper.sol"],"sources":{"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/cryptography/MerkleProof.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/cryptography/MerkleProof.sol","exportedSymbols":{"MerkleProof":[93]}},"children":[{"attributes":{"literals":["solidity","^","0.5",".0"]},"id":26,"name":"PragmaDirective","src":"0:23:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"library","documentation":"@dev These functions deal with verification of Merkle trees (hash trees),","fullyImplemented":true,"linearizedBaseContracts":[93],"name":"MerkleProof","scope":94},"children":[{"attributes":{"documentation":"@dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\ndefined by `root`. For this, a `proof` must be provided, containing\nsibling hashes on the branch from the leaf to the root of the tree. Each\npair of leaves and each pair of pre-images are assumed to be sorted.","implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"verify","scope":93,"stateMutability":"pure","superFunction":null,"visibility":"internal"},"children":[{"children":[{"attributes":{"constant":false,"name":"proof","scope":92,"stateVariable":false,"storageLocation":"memory","type":"bytes32[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"bytes32[]"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":27,"name":"ElementaryTypeName","src":"480:7:0"}],"id":28,"name":"ArrayTypeName","src":"480:9:0"}],"id":29,"name":"VariableDeclaration","src":"480:22:0"},{"attributes":{"constant":false,"name":"root","scope":92,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":30,"name":"ElementaryTypeName","src":"504:7:0"}],"id":31,"name":"VariableDeclaration","src":"504:12:0"},{"attributes":{"constant":false,"name":"leaf","scope":92,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":32,"name":"ElementaryTypeName","src":"518:7:0"}],"id":33,"name":"VariableDeclaration","src":"518:12:0"}],"id":34,"name":"ParameterList","src":"479:52:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":92,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":35,"name":"ElementaryTypeName","src":"555:4:0"}],"id":36,"name":"VariableDeclaration","src":"555:4:0"}],"id":37,"name":"ParameterList","src":"554:6:0"},{"children":[{"attributes":{"assignments":[39]},"children":[{"attributes":{"constant":false,"name":"computedHash","scope":91,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":38,"name":"ElementaryTypeName","src":"571:7:0"}],"id":39,"name":"VariableDeclaration","src":"571:20:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":33,"type":"bytes32","value":"leaf"},"id":40,"name":"Identifier","src":"594:4:0"}],"id":41,"name":"VariableDeclarationStatement","src":"571:27:0"},{"children":[{"attributes":{"assignments":[43]},"children":[{"attributes":{"constant":false,"name":"i","scope":86,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":42,"name":"ElementaryTypeName","src":"614:7:0"}],"id":43,"name":"VariableDeclaration","src":"614:9:0"},{"attributes":{"argumentTypes":null,"hexvalue":"30","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 0","value":"0"},"id":44,"name":"Literal","src":"626:1:0"}],"id":45,"name":"VariableDeclarationStatement","src":"614:13:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":43,"type":"uint256","value":"i"},"id":46,"name":"Identifier","src":"629:1:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"length","referencedDeclaration":null,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":29,"type":"bytes32[] memory","value":"proof"},"id":47,"name":"Identifier","src":"633:5:0"}],"id":48,"name":"MemberAccess","src":"633:12:0"}],"id":49,"name":"BinaryOperation","src":"629:16:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"++","prefix":false,"type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":43,"type":"uint256","value":"i"},"id":50,"name":"Identifier","src":"647:1:0"}],"id":51,"name":"UnaryOperation","src":"647:3:0"}],"id":52,"name":"ExpressionStatement","src":"647:3:0"},{"children":[{"attributes":{"assignments":[54]},"children":[{"attributes":{"constant":false,"name":"proofElement","scope":85,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":53,"name":"ElementaryTypeName","src":"666:7:0"}],"id":54,"name":"VariableDeclaration","src":"666:20:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":29,"type":"bytes32[] memory","value":"proof"},"id":55,"name":"Identifier","src":"689:5:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":43,"type":"uint256","value":"i"},"id":56,"name":"Identifier","src":"695:1:0"}],"id":57,"name":"IndexAccess","src":"689:8:0"}],"id":58,"name":"VariableDeclarationStatement","src":"666:31:0"},{"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"<","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":39,"type":"bytes32","value":"computedHash"},"id":59,"name":"Identifier","src":"716:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":54,"type":"bytes32","value":"proofElement"},"id":60,"name":"Identifier","src":"731:12:0"}],"id":61,"name":"BinaryOperation","src":"716:27:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":39,"type":"bytes32","value":"computedHash"},"id":62,"name":"Identifier","src":"841:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[null],"referencedDeclaration":102,"type":"function (bytes memory) pure returns (bytes32)","value":"keccak256"},"id":63,"name":"Identifier","src":"856:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"encodePacked","referencedDeclaration":null,"type":"function () pure returns (bytes memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":95,"type":"abi","value":"abi"},"id":64,"name":"Identifier","src":"866:3:0"}],"id":65,"name":"MemberAccess","src":"866:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":39,"type":"bytes32","value":"computedHash"},"id":66,"name":"Identifier","src":"883:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":54,"type":"bytes32","value":"proofElement"},"id":67,"name":"Identifier","src":"897:12:0"}],"id":68,"name":"FunctionCall","src":"866:44:0"}],"id":69,"name":"FunctionCall","src":"856:55:0"}],"id":70,"name":"Assignment","src":"841:70:0"}],"id":71,"name":"ExpressionStatement","src":"841:70:0"}],"id":72,"name":"Block","src":"745:181:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"bytes32"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":39,"type":"bytes32","value":"computedHash"},"id":73,"name":"Identifier","src":"1028:12:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes32","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"overloadedDeclarations":[null],"referencedDeclaration":102,"type":"function (bytes memory) pure returns (bytes32)","value":"keccak256"},"id":74,"name":"Identifier","src":"1043:9:0"},{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bytes memory","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"member_name":"encodePacked","referencedDeclaration":null,"type":"function () pure returns (bytes memory)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":95,"type":"abi","value":"abi"},"id":75,"name":"Identifier","src":"1053:3:0"}],"id":76,"name":"MemberAccess","src":"1053:16:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":54,"type":"bytes32","value":"proofElement"},"id":77,"name":"Identifier","src":"1070:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":39,"type":"bytes32","value":"computedHash"},"id":78,"name":"Identifier","src":"1084:12:0"}],"id":79,"name":"FunctionCall","src":"1053:44:0"}],"id":80,"name":"FunctionCall","src":"1043:55:0"}],"id":81,"name":"Assignment","src":"1028:70:0"}],"id":82,"name":"ExpressionStatement","src":"1028:70:0"}],"id":83,"name":"Block","src":"932:181:0"}],"id":84,"name":"IfStatement","src":"712:401:0"}],"id":85,"name":"Block","src":"652:471:0"}],"id":86,"name":"ForStatement","src":"609:514:0"},{"attributes":{"functionReturnParameters":37},"children":[{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"==","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":39,"type":"bytes32","value":"computedHash"},"id":87,"name":"Identifier","src":"1215:12:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":31,"type":"bytes32","value":"root"},"id":88,"name":"Identifier","src":"1231:4:0"}],"id":89,"name":"BinaryOperation","src":"1215:20:0"}],"id":90,"name":"Return","src":"1208:27:0"}],"id":91,"name":"Block","src":"561:681:0"}],"id":92,"name":"FunctionDefinition","src":"464:778:0"}],"id":93,"name":"ContractDefinition","src":"110:1134:0"}],"id":94,"name":"SourceUnit","src":"0:1245:0"}},"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/MerkleProofWrapper.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/mocks/MerkleProofWrapper.sol","exportedSymbols":{"MerkleProofWrapper":[24]}},"children":[{"attributes":{"literals":["solidity","^","0.5",".0"]},"id":1,"name":"PragmaDirective","src":"0:23:1"},{"attributes":{"SourceUnit":94,"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Chainsulting-UNILAYERX/openzeppelin-contracts-2.3.0/contracts/cryptography/MerkleProof.sol","file":"../cryptography/MerkleProof.sol","scope":25,"symbolAliases":[{"foreign":2,"local":null}],"unitAlias":""},"id":3,"name":"ImportDirective","src":"25:62:1"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":null,"fullyImplemented":true,"linearizedBaseContracts":[24],"name":"MerkleProofWrapper","scope":25},"children":[{"attributes":{"documentation":null,"implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"verify","scope":24,"stateMutability":"pure","superFunction":null,"visibility":"public"},"children":[{"children":[{"attributes":{"constant":false,"name":"proof","scope":23,"stateVariable":false,"storageLocation":"memory","type":"bytes32[]","value":null,"visibility":"internal"},"children":[{"attributes":{"length":null,"type":"bytes32[]"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":4,"name":"ElementaryTypeName","src":"139:7:1"}],"id":5,"name":"ArrayTypeName","src":"139:9:1"}],"id":6,"name":"VariableDeclaration","src":"139:22:1"},{"attributes":{"constant":false,"name":"root","scope":23,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":7,"name":"ElementaryTypeName","src":"163:7:1"}],"id":8,"name":"VariableDeclaration","src":"163:12:1"},{"attributes":{"constant":false,"name":"leaf","scope":23,"stateVariable":false,"storageLocation":"default","type":"bytes32","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bytes32","type":"bytes32"},"id":9,"name":"ElementaryTypeName","src":"177:7:1"}],"id":10,"name":"VariableDeclaration","src":"177:12:1"}],"id":11,"name":"ParameterList","src":"138:52:1"},{"children":[{"attributes":{"constant":false,"name":"","scope":23,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":12,"name":"ElementaryTypeName","src":"212:4:1"}],"id":13,"name":"VariableDeclaration","src":"212:4:1"}],"id":14,"name":"ParameterList","src":"211:6:1"},{"children":[{"attributes":{"functionReturnParameters":14},"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"bool","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"member_name":"verify","referencedDeclaration":92,"type":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":93,"type":"type(library MerkleProof)","value":"MerkleProof"},"id":15,"name":"Identifier","src":"235:11:1"}],"id":16,"name":"MemberAccess","src":"235:18:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":6,"type":"bytes32[] memory","value":"proof"},"id":17,"name":"Identifier","src":"254:5:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":8,"type":"bytes32","value":"root"},"id":18,"name":"Identifier","src":"261:4:1"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":10,"type":"bytes32","value":"leaf"},"id":19,"name":"Identifier","src":"267:4:1"}],"id":20,"name":"FunctionCall","src":"235:37:1"}],"id":21,"name":"Return","src":"228:44:1"}],"id":22,"name":"Block","src":"218:61:1"}],"id":23,"name":"FunctionDefinition","src":"123:156:1"}],"id":24,"name":"ContractDefinition","src":"89:192:1"}],"id":25,"name":"SourceUnit","src":"0:282:1"}}},"version":"0.5.0+commit.1d4f565a.Linux.g++"}
