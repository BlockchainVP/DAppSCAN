{"contracts":{"/home/sdb/yemx6/solc-DApp/labeledCode/Quantstamp-Atomic_Loans/atomicloans-eth-contracts-10c2493d6851dcf59ee3d99519f0228b4bc2afaf/contracts/Compound/InterestRateModel.sol:InterestRateModel":{"abi":"[{\"constant\":true,\"inputs\":[{\"name\":\"cash\",\"type\":\"uint256\"},{\"name\":\"borrows\",\"type\":\"uint256\"},{\"name\":\"reserves\",\"type\":\"uint256\"}],\"name\":\"getBorrowRate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isInterestRateModel\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]","bin":"","bin-runtime":"","srcmap":"","srcmap-runtime":""}},"sourceList":["/home/sdb/yemx6/solc-DApp/labeledCode/Quantstamp-Atomic_Loans/atomicloans-eth-contracts-10c2493d6851dcf59ee3d99519f0228b4bc2afaf/contracts/Compound/InterestRateModel.sol"],"sources":{"/home/sdb/yemx6/solc-DApp/labeledCode/Quantstamp-Atomic_Loans/atomicloans-eth-contracts-10c2493d6851dcf59ee3d99519f0228b4bc2afaf/contracts/Compound/InterestRateModel.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Quantstamp-Atomic_Loans/atomicloans-eth-contracts-10c2493d6851dcf59ee3d99519f0228b4bc2afaf/contracts/Compound/InterestRateModel.sol","exportedSymbols":{"InterestRateModel":[20]}},"children":[{"attributes":{"literals":["solidity","^","0.5",".10"]},"id":1,"name":"PragmaDirective","src":"0:24:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"interface","documentation":"@title The Compound InterestRateModel Interface\n@author Compound\n@notice Any interest rate model should derive from this contract.\n@dev These functions are specifically not marked `pure` as implementations of this\n     contract may read from storage variables.","fullyImplemented":false,"linearizedBaseContracts":[20],"name":"InterestRateModel","scope":21},"children":[{"attributes":{"body":null,"documentation":"@notice Gets the current borrow interest rate based on the given asset, total cash, total borrows\n        and total reserves.\n@dev The return value should be scaled by 1e18, thus a return value of\n     `(true, 1000000000000)` implies an interest rate of 0.000001 or 0.0001% *per block*.\n@param cash The total cash of the underlying asset in the CToken\n@param borrows The total borrows of the underlying asset in the CToken\n@param reserves The total reserves of the underlying asset in the CToken\n@return Success or failure and the borrow interest rate per block scaled by 10e18","implemented":false,"isConstructor":false,"kind":"function","modifiers":[null],"name":"getBorrowRate","scope":20,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"children":[{"attributes":{"constant":false,"name":"cash","scope":14,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":2,"name":"ElementaryTypeName","src":"1032:4:0"}],"id":3,"name":"VariableDeclaration","src":"1032:9:0"},{"attributes":{"constant":false,"name":"borrows","scope":14,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":4,"name":"ElementaryTypeName","src":"1043:4:0"}],"id":5,"name":"VariableDeclaration","src":"1043:12:0"},{"attributes":{"constant":false,"name":"reserves","scope":14,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":6,"name":"ElementaryTypeName","src":"1057:4:0"}],"id":7,"name":"VariableDeclaration","src":"1057:13:0"}],"id":8,"name":"ParameterList","src":"1031:40:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":14,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":9,"name":"ElementaryTypeName","src":"1095:4:0"}],"id":10,"name":"VariableDeclaration","src":"1095:4:0"},{"attributes":{"constant":false,"name":"","scope":14,"stateVariable":false,"storageLocation":"default","type":"uint256","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"uint","type":"uint256"},"id":11,"name":"ElementaryTypeName","src":"1101:4:0"}],"id":12,"name":"VariableDeclaration","src":"1101:4:0"}],"id":13,"name":"ParameterList","src":"1094:12:0"}],"id":14,"name":"FunctionDefinition","src":"1009:98:0"},{"attributes":{"body":null,"documentation":"@notice Marker function used for light validation when updating the interest rate model of a market\n@dev Marker function used for light validation when updating the interest rate model of a market. Implementations should simply return true.\n@return Success or failure","implemented":false,"isConstructor":false,"kind":"function","modifiers":[null],"name":"isInterestRateModel","scope":20,"stateMutability":"view","superFunction":null,"visibility":"external"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":15,"name":"ParameterList","src":"1450:2:0"},{"children":[{"attributes":{"constant":false,"name":"","scope":19,"stateVariable":false,"storageLocation":"default","type":"bool","value":null,"visibility":"internal"},"children":[{"attributes":{"name":"bool","type":"bool"},"id":16,"name":"ElementaryTypeName","src":"1476:4:0"}],"id":17,"name":"VariableDeclaration","src":"1476:4:0"}],"id":18,"name":"ParameterList","src":"1475:6:0"}],"id":19,"name":"FunctionDefinition","src":"1422:60:0"}],"id":20,"name":"ContractDefinition","src":"316:1168:0"}],"id":21,"name":"SourceUnit","src":"0:1484:0"}}},"version":"0.5.10+commit.5a6ea5b1.Linux.g++"}
