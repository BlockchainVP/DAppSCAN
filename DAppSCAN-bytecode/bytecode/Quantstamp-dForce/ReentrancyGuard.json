{"contracts":{"/home/sdb/yemx6/solc-DApp/labeledCode/Quantstamp-dForce/USDx_1.0-ed9e0cedfb301d33a1d85f66664118e74bfaf969/contracts/utility/ReentrancyGuard.sol:ReentrancyGuard":{"abi":"[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]","bin":"","bin-runtime":"","srcmap":"","srcmap-runtime":""}},"sourceList":["/home/sdb/yemx6/solc-DApp/labeledCode/Quantstamp-dForce/USDx_1.0-ed9e0cedfb301d33a1d85f66664118e74bfaf969/contracts/utility/ReentrancyGuard.sol"],"sources":{"/home/sdb/yemx6/solc-DApp/labeledCode/Quantstamp-dForce/USDx_1.0-ed9e0cedfb301d33a1d85f66664118e74bfaf969/contracts/utility/ReentrancyGuard.sol":{"AST":{"attributes":{"absolutePath":"/home/sdb/yemx6/solc-DApp/labeledCode/Quantstamp-dForce/USDx_1.0-ed9e0cedfb301d33a1d85f66664118e74bfaf969/contracts/utility/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[45]}},"children":[{"attributes":{"literals":["solidity","^","0.5",".2"]},"id":1,"name":"PragmaDirective","src":"0:23:0"},{"attributes":{"baseContracts":[null],"contractDependencies":[null],"contractKind":"contract","documentation":"@dev Contract module that helps prevent reentrant calls to a function.\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\navailable, which can be applied to functions to make sure there are no nested\n(reentrant) calls to them.\n * Note that because there is a single `nonReentrant` guard, functions marked as\n`nonReentrant` may not call one another. This can be worked around by making\nthose functions `private`, and then adding `external` `nonReentrant` entry\npoints to them.\n * TIP: If you would like to learn more about reentrancy and alternative ways\nto protect against it, check out our blog post\nhttps://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","fullyImplemented":true,"linearizedBaseContracts":[45],"name":"ReentrancyGuard","scope":46},"children":[{"attributes":{"constant":true,"name":"_NOT_ENTERED","scope":45,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"private"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":2,"name":"ElementaryTypeName","src":"1588:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"31","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 1","value":"1"},"id":3,"name":"Literal","src":"1628:1:0"}],"id":4,"name":"VariableDeclaration","src":"1588:41:0"},{"attributes":{"constant":true,"name":"_ENTERED","scope":45,"stateVariable":true,"storageLocation":"default","type":"uint256","visibility":"private"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":5,"name":"ElementaryTypeName","src":"1635:7:0"},{"attributes":{"argumentTypes":null,"hexvalue":"32","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"number","type":"int_const 2","value":"2"},"id":6,"name":"Literal","src":"1671:1:0"}],"id":7,"name":"VariableDeclaration","src":"1635:37:0"},{"attributes":{"constant":false,"name":"_status","scope":45,"stateVariable":true,"storageLocation":"default","type":"uint256","value":null,"visibility":"private"},"children":[{"attributes":{"name":"uint256","type":"uint256"},"id":8,"name":"ElementaryTypeName","src":"1679:7:0"}],"id":9,"name":"VariableDeclaration","src":"1679:23:0"},{"attributes":{"documentation":null,"implemented":true,"isConstructor":true,"kind":"constructor","modifiers":[null],"name":"","scope":45,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":10,"name":"ParameterList","src":"1720:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":11,"name":"ParameterList","src":"1732:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":9,"type":"uint256","value":"_status"},"id":12,"name":"Identifier","src":"1742:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4,"type":"uint256","value":"_NOT_ENTERED"},"id":13,"name":"Identifier","src":"1752:12:0"}],"id":14,"name":"Assignment","src":"1742:22:0"}],"id":15,"name":"ExpressionStatement","src":"1742:22:0"}],"id":16,"name":"Block","src":"1732:39:0"}],"id":17,"name":"FunctionDefinition","src":"1709:62:0"},{"attributes":{"documentation":"@dev Prevents a contract from calling itself, directly or indirectly.\nCalling a `nonReentrant` function from another `nonReentrant`\nfunction is not supported. It is possible to prevent this from happening\nby making the `nonReentrant` function external, and make it call a\n`private` function that does the actual work.","name":"nonReentrant","visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":18,"name":"ParameterList","src":"2167:2:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"isStructConstructorCall":false,"lValueRequested":false,"names":[null],"type":"tuple()","type_conversion":false},"children":[{"attributes":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"overloadedDeclarations":[63,64],"referencedDeclaration":64,"type":"function (bool,string memory) pure","value":"require"},"id":19,"name":"Identifier","src":"2251:7:0"},{"attributes":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"!=","type":"bool"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":9,"type":"uint256","value":"_status"},"id":20,"name":"Identifier","src":"2259:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":7,"type":"uint256","value":"_ENTERED"},"id":21,"name":"Identifier","src":"2270:8:0"}],"id":22,"name":"BinaryOperation","src":"2259:19:0"},{"attributes":{"argumentTypes":null,"hexvalue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"subdenomination":null,"token":"string","type":"literal_string \"ReentrancyGuard: reentrant call\"","value":"ReentrancyGuard: reentrant call"},"id":23,"name":"Literal","src":"2280:33:0"}],"id":24,"name":"FunctionCall","src":"2251:63:0"}],"id":25,"name":"ExpressionStatement","src":"2251:63:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":9,"type":"uint256","value":"_status"},"id":26,"name":"Identifier","src":"2389:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":7,"type":"uint256","value":"_ENTERED"},"id":27,"name":"Identifier","src":"2399:8:0"}],"id":28,"name":"Assignment","src":"2389:18:0"}],"id":29,"name":"ExpressionStatement","src":"2389:18:0"},{"id":30,"name":"PlaceholderStatement","src":"2418:1:0"},{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":9,"type":"uint256","value":"_status"},"id":31,"name":"Identifier","src":"2562:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4,"type":"uint256","value":"_NOT_ENTERED"},"id":32,"name":"Identifier","src":"2572:12:0"}],"id":33,"name":"Assignment","src":"2562:22:0"}],"id":34,"name":"ExpressionStatement","src":"2562:22:0"}],"id":35,"name":"Block","src":"2170:421:0"}],"id":36,"name":"ModifierDefinition","src":"2146:445:0"},{"attributes":{"documentation":null,"implemented":true,"isConstructor":false,"kind":"function","modifiers":[null],"name":"initReentrancyStatus","scope":45,"stateMutability":"nonpayable","superFunction":null,"visibility":"internal"},"children":[{"attributes":{"parameters":[null]},"children":[],"id":37,"name":"ParameterList","src":"2626:2:0"},{"attributes":{"parameters":[null]},"children":[],"id":38,"name":"ParameterList","src":"2638:0:0"},{"children":[{"children":[{"attributes":{"argumentTypes":null,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"operator":"=","type":"uint256"},"children":[{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":9,"type":"uint256","value":"_status"},"id":39,"name":"Identifier","src":"2648:7:0"},{"attributes":{"argumentTypes":null,"overloadedDeclarations":[null],"referencedDeclaration":4,"type":"uint256","value":"_NOT_ENTERED"},"id":40,"name":"Identifier","src":"2658:12:0"}],"id":41,"name":"Assignment","src":"2648:22:0"}],"id":42,"name":"ExpressionStatement","src":"2648:22:0"}],"id":43,"name":"Block","src":"2638:39:0"}],"id":44,"name":"FunctionDefinition","src":"2597:80:0"}],"id":45,"name":"ContractDefinition","src":"809:1870:0"}],"id":46,"name":"SourceUnit","src":"0:2680:0"}}},"version":"0.5.2+commit.1df8f40c.Linux.g++"}
